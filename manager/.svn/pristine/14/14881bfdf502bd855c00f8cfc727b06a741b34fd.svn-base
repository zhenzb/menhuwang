{"remainingRequest":"E:\\mijia\\manager\\node_modules\\vue-loader\\lib\\index.js??vue-loader-options!E:\\mijia\\manager\\src\\views\\product\\introduction.vue?vue&type=style&index=0&lang=css","dependencies":[{"path":"E:\\mijia\\manager\\src\\views\\product\\introduction.vue","mtime":1559030985243},{"path":"E:\\mijia\\manager\\node_modules\\css-loader\\index.js","mtime":1558690124086},{"path":"E:\\mijia\\manager\\node_modules\\vue-loader\\lib\\loaders\\stylePostLoader.js","mtime":1521907989000},{"path":"E:\\mijia\\manager\\node_modules\\postcss-loader\\lib\\index.js","mtime":499162500000},{"path":"E:\\mijia\\manager\\node_modules\\cache-loader\\dist\\cjs.js","mtime":1558690126701},{"path":"E:\\mijia\\manager\\node_modules\\vue-loader\\lib\\index.js","mtime":1527860006000}],"contextDependencies":[],"result":["\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n.introduction .el-form-item{\n    \n}\n",{"version":3,"sources":["introduction.vue"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAyPA;;AAEA","file":"introduction.vue","sourceRoot":"src\\views\\product","sourcesContent":["<template>\n    <div class=\"introduction\">\n        <el-form :model=\"formData\" :rules=\"rules\" ref=\"ruleForm\" label-width=\"100px\" class=\"demo-ruleForm\">\n            <el-form-item label=\"标题名称\" prop=\"softwaretitle\" style=\"border-bottom: rgb(204, 204, 204) 1px solid;height: 90px\" >\n                <el-input v-model=\"formData.softwaretitle\" style=\"width: 60%\"></el-input>\n            </el-form-item>\n            <el-form-item label=\"备注信息\" prop=\"softwareremarks\">\n                <el-input v-model=\"formData.softwareremarks\" style=\"width: 90%\"></el-input>\n            </el-form-item>\n            <el-form-item v-if=\"addressDisplay==1\" label=\"iPhone地址\" prop=\"iphoneaddress\">\n                <el-input v-model=\"formData.iphoneaddress\" style=\"width: 90%\"></el-input>\n            </el-form-item>\n            <el-form-item v-if=\"addressDisplay==1\" label=\"Android地址\" prop=\"androidaddress\">\n                <el-input v-model=\"formData.androidaddress\" style=\"width: 90%\"></el-input>\n            </el-form-item>\n            <el-form-item v-if=\"addressDisplay==1\" label=\"Windows地址\" prop=\"windowsaddress\">\n                <el-input v-model=\"formData.windowsaddress\" style=\"width: 90%\"></el-input>\n            </el-form-item>\n            <el-form-item label=\"banner图片\" prop=\"softwarepic\">\n                <el-upload\n                    class=\"avatar-uploader\"\n                    :action=\"uploaduri\"\n                    :on-success=\"handleAvatarSuccess\"\n                    :before-upload=\"beforeAvatarUpload\"\n                    :show-file-list=\"false\"\n\n                >\n                    <img v-if=\"formData.softwarepic\" :src=\"formData.softwarepic\"  >\n                    <i v-else class=\"el-icon-plus avatar-uploader-icon\" style=\"font-size: 26px;line-height: 6;\"></i>\n                </el-upload>\n                <span>注：上传图片尺寸为1200*480像素</span>\n            </el-form-item>\n        </el-form>\n    </div>\n</template>\n<script>\n    import {getList} from \"../../api/software/software\";\n\n    /*用作表单的数据初始化*/\n    const formJson = {\n        username: \"\"\n    };\n\n    export default {\n        data() {\n            return {\n                query: {//查询条件\n                    startTime: \"\",\n                    endTime: \"\",\n                    currentPage: 1,\n                    pageSize: 10,\n                },\n                createTime:[],//选择日期时需要的model\n                list: [],//列表集合\n                totalNumber: 0,//分页总页数\n                loading: false,//列表加载\n                allLoding: false,//全屏加载\n                formSumbitLoding: false,//表单提交加载\n                cancelToggle: false,//列表是否全选\n                multipleSelection: [], //多选集合\n                dialogAddOrEdit: false,//新增或编辑弹框开关\n                dialogAddOrEditName: \"\",//新增或编辑弹框名字\n                formData: formJson,//新增或修改的对象\n                rules: {//表单校验\n                    username: [\n                        {required: true, message: '请输入姓名', trigger: 'blur'},\n                        {min: 3, max: 5, message: '长度在 3 到 5 个字符', trigger: 'blur'}\n                    ]\n                }\n            };\n        },\n        methods: {\n            /*获取列表事件*/\n            getList() {\n                this.loading = true;\n                getList(this.query).then(response => {\n                    if (response.code != 0) {\n                        this.$message.error(response.message);\n                        return false;\n                    }\n                    this.list = response.data.list || [];\n                    this.totalNumber = response.data.totalNumber || 0;\n                    setTimeout(() => {\n                        this.loading = false;\n                    }, 0.3 * 1000);\n                }).catch(() => {\n                    this.loading = false;\n                    this.list = [];\n                })\n            },\n\n            /*新增或者编辑提交事件*/\n            formSumbit() {\n                //表单校验通过\n                this.$refs[\"ruleForm\"].validate(valid => {\n                    if (valid) {\n                        this.formSumbitLoding = true;\n                        //提交操作\n                        setTimeout(() => {\n                            this.hideDialogAddOrEdit();\n                            this.$message.success(\"提交成功\");\n                            this.formSumbitLoding = false;\n                            this.getList();\n                        }, 1000);\n                    }\n                });\n                //new URLSearchParams(this.query)  提交数据格式不正确时可以转一下\n            },\n\n            /*列表查询条件事件*/\n            onSubmit() {\n                this.query.currentPage = 1;\n                this.$router.push({\n                    path: \"\",\n                    query: this.query\n                });\n                this.getList();\n            },\n\n            /*刷新*/\n            onRest() {\n                this.$router.push({\n                    path: \"\"\n                });\n                //刷新事件需要重置查询条件\n                this.createTime = [];\n                this.query = {\n                    currentPage: 1,\n                    pageSize: 10,\n                };\n                this.getList();\n            },\n\n            /*显示 -新增或者编辑弹框*/\n            showDialogAddOrEdit(index, row) {\n                this.dialogAddOrEdit = true;\n                this.formData = Object.assign({}, formJson);//将弹框内表单内容初始化\n                if (row !== null) {\n                    //如果row不为空，说明是修改，因为row是修改时携带过来此列的所有信息\n                    this.formData = Object.assign({}, row);//修改则将列内容深拷贝到表单内容中\n                    this.dialogAddOrEditName = \"编辑\";\n                } else {\n                    this.dialogAddOrEditName = \"新增\";\n                }\n            },\n\n            /*隐藏 -新增或编辑弹框*/\n            hideDialogAddOrEdit() {\n                this.dialogAddOrEdit = false;\n\n                //隐藏弹框时需要清除弹框内容\n                if (this.$refs[\"ruleForm\"]) {\n                    this.$refs['ruleForm'].resetFields();//清除formData表单\n                    this.$refs[\"ruleForm\"].clearValidate();//清除表单验证\n                }\n                //如果上传文件，还需要清除文件列表\n            },\n\n            /*点击页数*/\n            handleCurrentChange(val) {\n                this.query.currentPage = val;\n                this.getList();\n            },\n\n            /*选择每页条数【10,20,30,40,50】*/\n            handleSizeChange(val) {\n                this.query.pageSize = val;\n                this.getList();\n            },\n\n            /*取消全选事件*/\n            toggleSelection(rows) {\n                if (rows) {\n                    rows.forEach(row => {\n                        this.$refs.multipleTable.toggleRowSelection(row);\n                    });\n                } else {\n                    this.$refs.multipleTable.clearSelection();\n                }\n            },\n\n            /*列表复选框选择事件*/\n            handleSelectionChange(val) {\n                this.multipleSelection = val;\n                if (val == \"\") {\n                    this.cancelToggle = false;\n                    return;\n                }\n                this.cancelToggle = true;\n            },\n\n            /*全选删除事件*/\n            delGroup() {\n                console.log(this.multipleSelection)\n                var ids = this.multipleSelection.map(item => item.userid).join(); //获取所有选中行的id组成的字符串，以逗号分隔\n                if (ids == \"\") {\n                    this.$message({\n                        message: \"请先选择\",\n                        type: \"warning\"\n                    });\n                    return;\n                }\n                this.handleDel(ids);\n            },\n\n            /*单击删除事件*/\n            handleDel(ids) {\n                if (ids) {\n                    this.$confirm(\"确认要删除吗?\", \"提示\", {\n                        type: \"warning\"\n                    })\n                        .then(() => {\n                            this.$message.success(\"删除成功\");\n                            this.getList();\n                        })\n                        .catch(() => {\n                            this.$message.warning(\"已取消\");\n                        });\n                }\n            },\n\n            /*日期选择事件*/\n            dateChange(val) {\n                if (val == null) {\n                    this.query.startTime = \"\";\n                    this.query.endTime = \"\";\n                } else {\n                    this.query.startTime = val[0];\n                    this.query.endTime = val[1];\n                    this.query.currentPage = 1;\n                }\n                this.getList();\n                console.log(this.query)\n            },\n        }, created() {\n            // this.getList();\n        }\n    }\n    //跳转路由的方法\n    // this.$router.push({\n    //     path: \"\",\n    //     query:{\n    //         username:\"张三\"\n    //     }\n    // });\n    //接受路由传递的参数\n    //let query = this.$route.query;\n</script>\n<style>\n    .introduction .el-form-item{\n        \n    }\n</style>\n"]}]}