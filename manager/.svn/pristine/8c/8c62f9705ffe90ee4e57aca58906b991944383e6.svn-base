{"remainingRequest":"E:\\mijia\\manager\\node_modules\\thread-loader\\dist\\cjs.js!E:\\mijia\\manager\\node_modules\\babel-loader\\lib\\index.js!E:\\mijia\\manager\\node_modules\\vue-loader\\lib\\index.js??vue-loader-options!E:\\mijia\\manager\\src\\views\\serviceCentre\\problem.vue?vue&type=script&lang=js","dependencies":[{"path":"E:\\mijia\\manager\\src\\views\\serviceCentre\\problem.vue","mtime":1562909074564},{"path":"E:\\mijia\\manager\\node_modules\\cache-loader\\dist\\cjs.js","mtime":1558690126701},{"path":"E:\\mijia\\manager\\node_modules\\thread-loader\\dist\\cjs.js","mtime":1558690128857},{"path":"E:\\mijia\\manager\\node_modules\\babel-loader\\lib\\index.js","mtime":1529635966000},{"path":"E:\\mijia\\manager\\node_modules\\vue-loader\\lib\\index.js","mtime":1527860006000}],"contextDependencies":[],"result":["import \"core-js/modules/web.dom.iterable\";\nimport \"core-js/modules/es6.object.assign\";\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\nimport { addOrEdit, getProblenList, delOrSort } from \"../../api/problem/problem\";\n/*用作表单的数据初始化*/\n\nvar formJson = {\n  problemtitle: \"\",\n  problemanswer: \"\",\n  problemremarks: \"\",\n  problemstats: \"0\"\n};\nexport default {\n  data: function data() {\n    return {\n      query: {\n        //查询条件\n        text: \"\",\n        currentPage: 1,\n        pageSize: 10\n      },\n      sortVisible: false,\n      problemSort: \"\",\n      sortSumbitLoding: false,\n      dialogDetails: false,\n      list: [],\n      //列表集合\n      totalNumber: 0,\n      //分页总页数\n      loading: false,\n      //列表加载\n      allLoding: false,\n      //全屏加载\n      formSumbitLoding: false,\n      //表单提交加载\n      cancelToggle: false,\n      //列表是否全选\n      multipleSelection: [],\n      //多选集合\n      dialogAddOrEdit: false,\n      //新增或编辑弹框开关\n      dialogAddOrEditName: \"\",\n      //新增或编辑弹框名字\n      formData: formJson,\n      //新增或修改的对象\n      rules: {\n        //表单校验\n        problemtitle: [{\n          required: true,\n          message: '请输入标题内容',\n          trigger: 'blur'\n        }],\n        problemremarks: [{\n          required: true,\n          message: '请输入备注信息',\n          trigger: 'blur'\n        }],\n        problemanswer: [{\n          required: true,\n          message: '请输入问题答案',\n          trigger: 'blur'\n        }]\n      }\n    };\n  },\n  methods: {\n    /*获取列表事件*/\n    getList: function getList() {\n      var _this = this;\n\n      this.loading = true;\n      console.info(this.query);\n      getProblenList(this.query).then(function (response) {\n        console.info(response.data);\n\n        if (response.code != 0) {\n          _this.$message.error(response.message);\n\n          return false;\n        }\n\n        _this.list = [];\n\n        if (response.data.list.length > 0) {\n          for (var i in response.data.list) {\n            response.data.list[i].number = (_this.query.currentPage - 1) * 10 + parseInt(i) + 1;\n\n            _this.list.push(response.data.list[i]);\n          }\n        }\n\n        _this.totalNumber = response.data.totalNumber || 0;\n        setTimeout(function () {\n          _this.loading = false;\n        }, 0.3 * 1000);\n      }).catch(function () {\n        _this.loading = false;\n        _this.list = [];\n      });\n    },\n\n    /*新增或者编辑提交事件*/\n    formSumbit: function formSumbit() {\n      var _this2 = this;\n\n      //表单校验通过\n      this.$refs[\"ruleForm\"].validate(function (valid) {\n        if (valid) {\n          _this2.formSumbitLoding = true;\n          addOrEdit(_this2.formData).then(function (response) {\n            if (response.code) {\n              _this2.$message.error(response.message);\n\n              _this2.formSumbitLoding = false;\n              return false;\n            }\n\n            setTimeout(function () {\n              _this2.$message.success(\"提交成功\");\n\n              _this2.hideDialogAddOrEdit();\n\n              _this2.formSumbitLoding = false;\n\n              _this2.getList();\n            }, 1000);\n          }).catch(function () {\n            _this2.formSumbitLoding = false;\n          });\n        }\n      }); //new URLSearchParams(this.query)  提交数据格式不正确时可以转一下\n    },\n    sortSumbit: function sortSumbit() {\n      var _this3 = this;\n\n      var ids = this.multipleSelection.map(function (item) {\n        return item.problemid;\n      }).join();\n      this.loading = true;\n\n      if (this.problemSort != \"\" && this.problemSort.length > 0) {\n        var params = new URLSearchParams();\n        params.append(\"ids\", ids);\n        params.append(\"sort\", this.problemSort);\n        delOrSort(params).then(function (response) {\n          _this3.loading = false;\n\n          if (response.code) {\n            _this3.$message.error(response.message);\n\n            return false;\n          }\n\n          _this3.$message.success(\"操作成功\");\n\n          _this3.sortVisible = false;\n          _this3.problemSort = \"\"; //返回第一页\n\n          _this3.query.currentPage = 1; // 刷新数据\n\n          _this3.getList();\n        }).catch(function () {\n          _this3.loading = false;\n        });\n      } else {\n        this.$message({\n          message: \"排序值不可为空！\",\n          type: \"warning\"\n        });\n      }\n    },\n\n    /*列表查询条件事件*/\n    onSubmit: function onSubmit() {\n      this.query.currentPage = 1;\n      this.$router.push({\n        path: \"\",\n        query: this.query\n      });\n      this.getList();\n    },\n\n    /*刷新*/\n    onRest: function onRest() {\n      this.$router.push({\n        path: \"\"\n      }); //刷新事件需要重置查询条件\n\n      this.query = {\n        currentPage: 1,\n        pageSize: 10\n      };\n      this.getList();\n    },\n\n    /*显示 -新增或者编辑弹框*/\n    showDialogAddOrEdit: function showDialogAddOrEdit(index, row) {\n      this.formData = Object.assign({}, formJson); //将弹框内表单内容初始化\n\n      if (row !== null) {\n        //如果row不为空，说明是修改，因为row是修改时携带过来此列的所有信息\n        this.formData = Object.assign({}, row); //修改则将列内容深拷贝到表单内容中\n\n        this.formData.problemstats += \"\";\n        this.dialogAddOrEditName = \"编辑\";\n      } else {\n        this.dialogAddOrEditName = \"新增\";\n      }\n\n      this.dialogAddOrEdit = true;\n    },\n    showDialogDetails: function showDialogDetails(index, row) {\n      this.formData = Object.assign({}, row); //修改则将列内容深拷贝到表单内容中\n\n      this.formData.problemstats += \"\";\n      this.dialogAddOrEditName = \"查看\";\n      this.dialogDetails = true;\n    },\n\n    /*隐藏 -新增或编辑弹框*/\n    hideDialogAddOrEdit: function hideDialogAddOrEdit() {\n      this.dialogAddOrEdit = false;\n      this.dialogDetails = false; //隐藏弹框时需要清除弹框内容\n\n      if (this.$refs[\"ruleForm\"]) {\n        this.$refs['ruleForm'].resetFields(); //清除formData表单\n\n        this.$refs[\"ruleForm\"].clearValidate(); //清除表单验证\n      }\n    },\n    hideEditSort: function hideEditSort() {\n      this.sortVisible = false;\n      this.problemSort = \"\";\n    },\n\n    /*点击页数*/\n    handleCurrentChange: function handleCurrentChange(val) {\n      this.query.currentPage = val;\n      this.getList();\n    },\n\n    /*选择每页条数【10,20,30,40,50】*/\n    handleSizeChange: function handleSizeChange(val) {\n      this.query.pageSize = val;\n      this.getList();\n    },\n\n    /*取消全选事件*/\n    toggleSelection: function toggleSelection(rows) {\n      var _this4 = this;\n\n      if (rows) {\n        rows.forEach(function (row) {\n          _this4.$refs.multipleTable.toggleRowSelection(row);\n        });\n      } else {\n        this.$refs.multipleTable.clearSelection();\n      }\n    },\n\n    /*列表复选框选择事件*/\n    handleSelectionChange: function handleSelectionChange(val) {\n      this.multipleSelection = val;\n\n      if (val == \"\") {\n        this.cancelToggle = false;\n        return;\n      }\n\n      this.cancelToggle = true;\n    },\n\n    /*全选删除事件*/\n    delGroup: function delGroup() {\n      console.log(this.multipleSelection);\n      var ids = this.multipleSelection.map(function (item) {\n        return item.problemid;\n      }).join(); //获取所有选中行的id组成的字符串，以逗号分隔\n\n      if (ids == \"\") {\n        this.$message({\n          message: \"请先选择\",\n          type: \"warning\"\n        });\n        return;\n      }\n\n      this.handleDel(ids);\n    },\n    sortGroup: function sortGroup() {\n      console.log(this.multipleSelection);\n      var ids = this.multipleSelection.map(function (item) {\n        return item.problemid;\n      }).join(); //获取所有选中行的id组成的字符串，以逗号分隔\n\n      if (ids == \"\") {\n        this.$message({\n          message: \"请先选择\",\n          type: \"warning\"\n        });\n        return;\n      }\n\n      this.sortVisible = true;\n    },\n\n    /*单击删除事件*/\n    handleDel: function handleDel(ids) {\n      var _this5 = this;\n\n      if (ids) {\n        this.$confirm(\"确认要删除吗?\", \"提示\", {\n          type: \"warning\"\n        }).then(function () {\n          _this5.loading = true;\n          var params = new URLSearchParams();\n          params.append(\"ids\", ids);\n          delOrSort(params).then(function (response) {\n            _this5.loading = false;\n\n            if (response.code) {\n              _this5.$message.error(response.message);\n\n              return false;\n            }\n\n            _this5.$message.success(\"删除成功\"); //返回第一页\n\n\n            _this5.query.currentPage = 1; // 刷新数据\n\n            _this5.getList();\n          }).catch(function () {\n            _this5.loading = false;\n          });\n        }).catch(function () {\n          _this5.$message.warning(\"已取消\");\n        });\n      }\n    },\n\n    /*日期选择事件*/\n    dateChange: function dateChange(val) {\n      if (val == null) {\n        this.query.startTime = \"\";\n        this.query.endTime = \"\";\n      } else {\n        this.query.startTime = val[0];\n        this.query.endTime = val[1];\n        this.query.currentPage = 1;\n      }\n\n      this.getList();\n      console.log(this.query);\n    }\n  },\n  created: function created() {\n    this.getList();\n  }\n}; //跳转路由的方法\n// this.$router.push({\n//     path: \"\",\n//     query:{\n//         username:\"张三\"\n//     }\n// });\n//接受路由传递的参数\n//let query = this.$route.query;",{"version":3,"sources":["problem.vue"],"names":[],"mappings":"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","sourcesContent":["<template>\n    <div style=\"width: 95%; margin-left: 2%;\">\n        <!--查询条件start --111s-->\n        <el-form :inline=\"true\" :model=\"query\" class=\"query-form\" size=\"small\">\n            <el-form-item class=\"query-form-item\">\n                <el-input\n                    v-model=\"query.text\"\n                    placeholder=\"请输入关键字\"\n                    prefix-icon=\"el-icon-search\"\n                    @keyup.enter.native=\"onSubmit\"\n                    clearable\n                ></el-input>\n            </el-form-item>\n            <el-form-item>\n                <el-button type=\"primary\" icon=\"el-icon-refresh\" @click=\"onRest\">刷新</el-button>\n                <el-button type=\"primary\" icon=\"el-icon-search\" @click=\"onSubmit\">查询</el-button>\n                <el-button type=\"primary\" icon=\"el-icon-edit\" @click.native=\"showDialogAddOrEdit(null,null)\">添加</el-button>\n                <el-button type=\"primary\" icon=\"el-icon-sort\" @click=\"sortGroup\">变更排序</el-button>\n            </el-form-item>\n        </el-form>\n        <!--查询条件end --111e-->\n\n        <!--列表start --222s-->\n        <el-table\n            ref=\"multipleTable\"\n            v-loading=\"loading\"\n            :data=\"list\"\n            :header-cell-style=\"{background:'#F4F4F5',color:'#606266'}\"\n            @selection-change=\"handleSelectionChange\"\n            border\n        >\n            <el-table-column type=\"selection\" width=\"50\" align=\"center\" fixed/>\n            <el-table-column label=\"编号\" prop=\"number\" width=\"50\" align=\"center\"/>\n            <el-table-column label=\"问题标题\" prop=\"problemtitle\" align=\"left\" :show-overflow-tooltip=\"true\"/>\n            <el-table-column label=\"状态\" align=\"center\" width=\"80\">\n                <template slot-scope=\"scope\">\n                    <span\n                        v-if=\"scope.row.problemstats==0\"\n                    >显示</span>\n                    <span v-else>隐藏</span>\n                </template>\n            </el-table-column>\n            <el-table-column label=\"排序值\" align=\"center\" width=\"80\">\n                <template slot-scope=\"scope\">\n                    <span\n                        v-if=\"scope.row.problemsort!=null\"\n                    >{{ scope.row.problemsort}}</span>\n                    <span v-else>-</span>\n                </template>\n            </el-table-column>\n            <el-table-column label=\"创建时间\" with=\"300\" :show-overflow-tooltip=\"true\" align=\"center\">\n                <template slot-scope=\"scope\">\n                    <i class=\"el-icon-time\" v-if=\"scope.row.createtime!=null\"></i>\n                    <span\n                        v-if=\"scope.row.createtime!=null\"\n                    >{{ scope.row.createtime | formatDateStr('yyyy-MM-dd hh:mm:ss') }}</span>\n                    <span v-else>-</span>\n                </template>\n            </el-table-column>\n            <el-table-column label=\"备注\" prop=\"problemremarks\" align=\"left\" :show-overflow-tooltip=\"true\"/>\n            <el-table-column label=\"操作\" align=\"center\" width=\"210\">\n                <template slot-scope=\"scope\">\n                    <el-button type=\"primary\" size=\"mini\"  @click.native=\"showDialogDetails(scope.$index, scope.row)\" >查看 </el-button>\n                    <el-button type=\"primary\" size=\"mini\"  @click.native=\"showDialogAddOrEdit(scope.$index, scope.row)\" >编辑 </el-button>\n                    <el-button type=\"danger\" size=\"mini\" @click.native=\"handleDel(scope.row.problemid)\" >删除 </el-button>\n                </template>\n            </el-table-column>\n        </el-table>\n        <!--列表end --222e-->\n\n        <!--全选删除start-->\n        <div class=\"left-container\">\n            <el-button type=\"danger\" size=\"small\" @click=\"delGroup()\">删除已选</el-button>\n            <transition name=\"el-fade-in-linear\">\n                <el-button size=\"small\" @click=\"toggleSelection()\" v-show=\"cancelToggle\">取消选择</el-button>\n            </transition>\n        </div>\n        <!--全选删除end-->\n\n        <!--分页模块start-->\n        <el-pagination\n            class=\"pagination-container\"\n            background\n            :page-size=\"query.pageSize\"\n            @size-change=\"handleSizeChange\"\n            @current-change=\"handleCurrentChange\"\n            layout=\"total,sizes,prev, pager, next, jumper\"\n            :current-page=\"query.currentPage\"\n            :page-sizes=\"[10, 20, 30, 50]\"\n            :total=\"totalNumber\"\n        ></el-pagination>\n        <!--分页模块end-->\n        <!-- 查看 -->\n        <el-dialog\n            class=\"problemeDialog\"\n            :title=\"dialogAddOrEditName\"\n            :visible.sync=\"dialogDetails\"\n            width=\"40%\"\n            top=\"5vh\"\n            :before-close=\"hideDialogAddOrEdit\">\n            <el-form label-width=\"85px\">\n                <el-form-item label=\"标题名称:\">\n                    <el-input v-model=\"formData.problemtitle\" style=\"width: 60%\" readonly=\"readonly\"></el-input>\n                    <span style=\"margin-left: 26px;\">是否显示:\n                        <span v-if=\"formData.problemstats==0\"> 是</span>\n                        <span v-else> 否</span>\n                    </span>\n                </el-form-item>\n                <el-form-item label=\"备注信息:\">\n                    <el-input v-model=\"formData.problemremarks\" style=\"width: 98%\" readonly=\"readonly\"></el-input>\n                </el-form-item>\n                <el-form-item label=\"正文内容:\">\n                    <el-input type=\"textarea\" :rows=\"10\" v-model=\"formData.problemanswer\" readonly=\"readonly\" style=\"width: 98%\"></el-input>\n                </el-form-item>\n            </el-form>\n            <span slot=\"footer\" class=\"dialog-footer advantagebtn\">\n                <el-button @click=\"hideDialogAddOrEdit\">取 消</el-button>\n            </span>\n        </el-dialog>\n\n        <!--新增/编辑弹框start--333s-->\n        <el-dialog\n            class=\"problemeDialog\"\n            :title=\"dialogAddOrEditName\"\n            :visible.sync=\"dialogAddOrEdit\"\n            width=\"40%\"\n            top=\"5vh\"\n            :before-close=\"hideDialogAddOrEdit\">\n            <el-form :model=\"formData\" :rules=\"rules\" ref=\"ruleForm\" label-width=\"85px\" class=\"demo-ruleForm\">\n                <el-form-item label=\"问题标题:\" prop=\"problemtitle\" >\n                    <el-input v-model=\"formData.problemtitle\" style=\"width: 60%\"></el-input>\n                    <span style=\"margin-left: 26px;\">是否显示</span>\n                    <template>\n                        <el-radio v-model=\"formData.problemstats\" label=\"0\" style=\"margin-left: 26px;\">是</el-radio>\n                        <el-radio v-model=\"formData.problemstats\" label=\"1\">否</el-radio>\n                    </template>\n                </el-form-item>\n                <el-form-item label=\"备注信息:\" prop=\"problemremarks\">\n                    <el-input v-model=\"formData.problemremarks\" style=\"width: 98%\"></el-input>\n                </el-form-item>\n                <el-form-item label=\"问题解答:\" prop=\"problemanswer\" >\n                    <el-input type=\"textarea\" :rows=\"10\" v-model=\"formData.problemanswer\" style=\"width: 98%\"></el-input>\n                </el-form-item>\n            </el-form>\n            <span slot=\"footer\" class=\"dialog-footer advantagebtn\">\n                <el-button @click=\"hideDialogAddOrEdit\">取 消</el-button>\n                <el-button type=\"primary\" :loading=\"formSumbitLoding\" @click=\"formSumbit\">提交</el-button>\n            </span>\n        </el-dialog>\n        <!--新增/编辑弹框end--333e-->\n\n        <el-dialog\n            :visible.sync=\"sortVisible\"\n            width=\"15%\"\n            :before-close=\"hideEditSort\"\n            class=\"softwareAddOrEdit\"\n            top=\"15vh\"\n        >\n            <div style=\" font-size: 28px; text-align: center; margin-bottom: 13px;\">请输入排序值</div>\n            <el-form class=\"demo-ruleForm\">\n                <el-form-item>\n                    <el-input v-model=\"problemSort\" ></el-input>\n                </el-form-item>\n            </el-form>\n            <span slot=\"footer\" class=\"dialog-footer\">\n                <el-button @click=\"hideEditSort\">取 消</el-button>\n                <el-button type=\"primary\" :loading=\"sortSumbitLoding\" @click=\"sortSumbit\">提交</el-button>\n            </span>\n        </el-dialog>\n    </div>\n</template>\n<script>\n    import {addOrEdit,getProblenList,delOrSort} from \"../../api/problem/problem\";\n\n    /*用作表单的数据初始化*/\n    const formJson = {\n        problemtitle:\"\",\n        problemanswer:\"\",\n        problemremarks:\"\",\n        problemstats:\"0\"\n    };\n\n    export default {\n        data() {\n            return {\n                query: {//查询条件\n                    text:\"\",\n                    currentPage: 1,\n                    pageSize: 10,\n                },\n                sortVisible:false,\n                problemSort:\"\",\n                sortSumbitLoding:false,\n                dialogDetails:false,\n                list: [],//列表集合\n                totalNumber: 0,//分页总页数\n                loading: false,//列表加载\n                allLoding: false,//全屏加载\n                formSumbitLoding: false,//表单提交加载\n                cancelToggle: false,//列表是否全选\n                multipleSelection: [], //多选集合\n                dialogAddOrEdit: false,//新增或编辑弹框开关\n                dialogAddOrEditName: \"\",//新增或编辑弹框名字\n                formData: formJson,//新增或修改的对象\n                rules: {//表单校验\n                    problemtitle: [\n                        {required: true, message: '请输入标题内容', trigger: 'blur'}\n                    ],\n                    problemremarks: [\n                        {required: true, message: '请输入备注信息', trigger: 'blur'}\n                    ],\n                    problemanswer:[\n                        {required: true, message: '请输入问题答案', trigger: 'blur'}\n                    ],\n                }\n            };\n        },\n        methods: {\n            /*获取列表事件*/\n            getList() {\n                this.loading = true;\n                console.info(this.query)\n                getProblenList(this.query).then(response => {\n                    console.info(response.data)\n                    if (response.code != 0) {\n                        this.$message.error(response.message);\n                        return false;\n                    }\n                    this.list =  [];\n                    if(response.data.list.length>0){\n                        for(var i in response.data.list){\n                            response.data.list[i].number=(this.query.currentPage-1)*10+parseInt(i)+1;\n                            this.list.push(response.data.list[i])\n                        }\n                    }\n                    this.totalNumber = response.data.totalNumber || 0;\n                    setTimeout(() => {\n                        this.loading = false;\n                    }, 0.3 * 1000);\n                }).catch(() => {\n                    this.loading = false;\n                    this.list = [];\n                })\n            },\n\n            /*新增或者编辑提交事件*/\n            formSumbit() {\n                //表单校验通过\n                this.$refs[\"ruleForm\"].validate(valid => {\n                    if (valid) {\n                        this.formSumbitLoding = true;\n                        addOrEdit(this.formData).then(response =>{\n                            if (response.code) {\n                                this.$message.error(response.message);\n                                this.formSumbitLoding = false;\n                                return false;\n                            }\n                            setTimeout(() => {\n                                this.$message.success(\"提交成功\");\n                                this.hideDialogAddOrEdit();\n                                this.formSumbitLoding = false;\n                                this.getList();\n                            }, 1000);\n                        }).catch(()=>{\n                            this.formSumbitLoding = false;\n                        })\n                    }\n                });\n                //new URLSearchParams(this.query)  提交数据格式不正确时可以转一下\n            },\n            sortSumbit(){\n                var ids = this.multipleSelection.map(item => item.problemid).join();\n                this.loading = true;\n                if(this.problemSort!=\"\" && this.problemSort.length>0){\n                    var params = new URLSearchParams();\n                    params.append(\"ids\", ids);\n                    params.append(\"sort\",this.problemSort);\n                    delOrSort(params)\n                        .then(response => {\n                            this.loading = false;\n                            if (response.code) {\n                                this.$message.error(response.message);\n                                return false;\n                            }\n                            this.$message.success(\"操作成功\");\n                            this.sortVisible=false;\n                            this.problemSort=\"\";\n                            //返回第一页\n                            this.query.currentPage = 1;\n                            // 刷新数据\n                            this.getList();\n                        })\n                        .catch(() => {\n                            this.loading = false;\n                        });\n                }else {\n                    this.$message({ message: \"排序值不可为空！\",type: \"warning\"});\n                }\n\n            },\n            /*列表查询条件事件*/\n            onSubmit() {\n                this.query.currentPage = 1;\n                this.$router.push({\n                    path: \"\",\n                    query: this.query\n                });\n                this.getList();\n            },\n\n            /*刷新*/\n            onRest() {\n                this.$router.push({\n                    path: \"\"\n                });\n                //刷新事件需要重置查询条件\n                this.query = {\n                    currentPage: 1,\n                    pageSize: 10,\n                };\n                this.getList();\n            },\n\n            /*显示 -新增或者编辑弹框*/\n            showDialogAddOrEdit(index, row) {\n                this.formData = Object.assign({}, formJson);//将弹框内表单内容初始化\n                if (row !== null) {\n                    //如果row不为空，说明是修改，因为row是修改时携带过来此列的所有信息\n                    this.formData = Object.assign({}, row);//修改则将列内容深拷贝到表单内容中\n                    this.formData.problemstats+=\"\";\n                    this.dialogAddOrEditName = \"编辑\";\n                } else {\n                    this.dialogAddOrEditName = \"新增\";\n                }\n                this.dialogAddOrEdit = true;\n            },\n            showDialogDetails(index, row){\n                this.formData = Object.assign({}, row);//修改则将列内容深拷贝到表单内容中\n                this.formData.problemstats+=\"\";\n                this.dialogAddOrEditName = \"查看\";\n                this.dialogDetails = true;\n            },\n            /*隐藏 -新增或编辑弹框*/\n            hideDialogAddOrEdit() {\n                this.dialogAddOrEdit = false;\n                this.dialogDetails = false;\n\n                //隐藏弹框时需要清除弹框内容\n                if (this.$refs[\"ruleForm\"]) {\n                    this.$refs['ruleForm'].resetFields();//清除formData表单\n                    this.$refs[\"ruleForm\"].clearValidate();//清除表单验证\n                }\n            },\n            hideEditSort(){\n                this.sortVisible=false;\n                this.problemSort=\"\";\n            },\n            /*点击页数*/\n            handleCurrentChange(val) {\n                this.query.currentPage = val;\n                this.getList();\n            },\n\n            /*选择每页条数【10,20,30,40,50】*/\n            handleSizeChange(val) {\n                this.query.pageSize = val;\n                this.getList();\n            },\n\n            /*取消全选事件*/\n            toggleSelection(rows) {\n                if (rows) {\n                    rows.forEach(row => {\n                        this.$refs.multipleTable.toggleRowSelection(row);\n                    });\n                } else {\n                    this.$refs.multipleTable.clearSelection();\n                }\n            },\n\n            /*列表复选框选择事件*/\n            handleSelectionChange(val) {\n                this.multipleSelection = val;\n                if (val == \"\") {\n                    this.cancelToggle = false;\n                    return;\n                }\n                this.cancelToggle = true;\n            },\n\n            /*全选删除事件*/\n            delGroup() {\n                console.log(this.multipleSelection)\n                var ids = this.multipleSelection.map(item => item.problemid).join(); //获取所有选中行的id组成的字符串，以逗号分隔\n                if (ids == \"\") {\n                    this.$message({\n                        message: \"请先选择\",\n                        type: \"warning\"\n                    });\n                    return;\n                }\n                this.handleDel(ids);\n            },\n            sortGroup() {\n                console.log(this.multipleSelection)\n                var ids = this.multipleSelection.map(item => item.problemid).join(); //获取所有选中行的id组成的字符串，以逗号分隔\n                if (ids == \"\") {\n                    this.$message({\n                        message: \"请先选择\",\n                        type: \"warning\"\n                    });\n                    return;\n                }\n                this.sortVisible=true;\n            },\n            /*单击删除事件*/\n            handleDel(ids) {\n                if (ids) {\n                    this.$confirm(\"确认要删除吗?\", \"提示\", {\n                        type: \"warning\"\n                    })\n                        .then(() => {\n                            this.loading = true;\n                            var params = new URLSearchParams();\n                            params.append(\"ids\", ids);\n                            delOrSort(params)\n                                .then(response => {\n                                    this.loading = false;\n                                    if (response.code) {\n                                        this.$message.error(response.message);\n                                        return false;\n                                    }\n                                    this.$message.success(\"删除成功\");\n                                    //返回第一页\n                                    this.query.currentPage = 1;\n                                    // 刷新数据\n                                    this.getList();\n                                })\n                                .catch(() => {\n                                    this.loading = false;\n                                });\n                        })\n                        .catch(() => {\n                            this.$message.warning(\"已取消\");\n                        });\n                }\n            },\n\n            /*日期选择事件*/\n            dateChange(val) {\n                if (val == null) {\n                    this.query.startTime = \"\";\n                    this.query.endTime = \"\";\n                } else {\n                    this.query.startTime = val[0];\n                    this.query.endTime = val[1];\n                    this.query.currentPage = 1;\n                }\n                this.getList();\n                console.log(this.query)\n            },\n        }, created() {\n            this.getList();\n        }\n    }\n    //跳转路由的方法\n    // this.$router.push({\n    //     path: \"\",\n    //     query:{\n    //         username:\"张三\"\n    //     }\n    // });\n    //接受路由传递的参数\n    //let query = this.$route.query;\n</script>\n<style type=\"text/scss\" lang=\"scss\" >\n    .el-tooltip__popper {\n        max-width: 600px;\n        line-height: 180%;\n    }\n    .problemeDialog .el-dialog__footer{\n        padding: 20px 34px 20px !important;\n    }\n    .problemeDialog .el-dialog__body{\n        padding: 30px 20px 0px 20px !important;\n    }\n</style>\n\n"],"sourceRoot":"src\\views\\serviceCentre"}]}