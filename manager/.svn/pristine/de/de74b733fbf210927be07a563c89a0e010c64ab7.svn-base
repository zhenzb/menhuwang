{"remainingRequest":"E:\\qingyunjiudian\\manager\\node_modules\\thread-loader\\dist\\cjs.js!E:\\qingyunjiudian\\manager\\node_modules\\babel-loader\\lib\\index.js!E:\\qingyunjiudian\\manager\\node_modules\\vue-loader\\lib\\index.js??vue-loader-options!E:\\qingyunjiudian\\manager\\src\\views\\userManage\\admin\\authRole.vue?vue&type=script&lang=js","dependencies":[{"path":"E:\\qingyunjiudian\\manager\\src\\views\\userManage\\admin\\authRole.vue","mtime":1560931882710},{"path":"E:\\qingyunjiudian\\manager\\node_modules\\cache-loader\\dist\\cjs.js","mtime":1558690126701},{"path":"E:\\qingyunjiudian\\manager\\node_modules\\thread-loader\\dist\\cjs.js","mtime":1558690128857},{"path":"E:\\qingyunjiudian\\manager\\node_modules\\babel-loader\\lib\\index.js","mtime":1529635966000},{"path":"E:\\qingyunjiudian\\manager\\node_modules\\vue-loader\\lib\\index.js","mtime":1527860006000}],"contextDependencies":[],"result":["import \"core-js/modules/es6.object.assign\";\nimport \"core-js/modules/es7.symbol.async-iterator\";\nimport \"core-js/modules/es6.symbol\";\nimport _toConsumableArray from \"E:\\\\qingyunjiudian\\\\manager\\\\node_modules\\\\@babel\\\\runtime/helpers/builtin/es6/toConsumableArray\";\nimport \"core-js/modules/web.dom.iterable\";\nimport \"core-js/modules/es6.array.iterator\";\nimport \"core-js/modules/es6.set\";\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\nimport { authRoleList, authRoleAuthList, authRoleAuth, authRoleSave, authRoleDelete } from \"../../../api/auth/authRole\";\nvar formJson = {\n  id: \"\",\n  name: \"\",\n  status: \"1\",\n  remark: \"\",\n  listorder: \"\"\n};\nexport default {\n  data: function data() {\n    return {\n      query: {\n        name: \"\",\n        status: \"\",\n        currentPage: 1,\n        pageSize: 10\n      },\n      list: [],\n      totalNumber: 0,\n      loading: true,\n      authList: [],\n      defaultProps: {\n        children: \"children\",\n        label: \"title\"\n      },\n      authLoading: false,\n      authFormVisible: false,\n      authFormData: {\n        roleId: \"\",\n        authRules: []\n      },\n      authDefaultCheckedKeys: [],\n      index: null,\n      formName: null,\n      formMap: {\n        add: \"添加\",\n        edit: \"编辑\"\n      },\n      formLoading: false,\n      formVisible: false,\n      formData: formJson,\n      formRules: {\n        name: [{\n          required: true,\n          message: \"请输入名称\",\n          trigger: \"blur\"\n        }],\n        status: [{\n          required: true,\n          message: \"请选择状态\",\n          trigger: \"change\"\n        }]\n      },\n      deleteLoading: false\n    };\n  },\n  methods: {\n    onRest: function onRest() {\n      this.query = {\n        name: \"\",\n        status: \"\",\n        currentPage: 1,\n        pageSize: 10\n      };\n      this.getList();\n    },\n    onSubmit: function onSubmit() {\n      this.query.currentPage = 1;\n      this.getList();\n    },\n    handleCurrentChange: function handleCurrentChange(val) {\n      this.query.currentPage = val;\n      this.getList();\n    },\n    handleSizeChange: function handleSizeChange(val) {\n      this.query.pageSize = val;\n      this.getList();\n    },\n    getList: function getList() {\n      var _this = this;\n\n      this.loading = true;\n      authRoleList(this.query).then(function (response) {\n        if (response.code) {\n          _this.$message.error(response.message);\n        }\n\n        _this.list = response.data.list || [];\n        console.info(_this.list);\n        _this.totalNumber = response.data.totalNumber || 0;\n        setTimeout(function () {\n          _this.loading = false;\n        }, 0.3 * 1000);\n      }).catch(function () {\n        _this.loading = false;\n        _this.list = [];\n        _this.totalNumber = 0;\n      });\n    },\n    // 显示授权界面\n    handleAuth: function handleAuth(roleId) {\n      var _this2 = this;\n\n      this.authFormData.roleId = roleId;\n      this.authFormData.authRules = [];\n      this.authList = [];\n      authRoleAuthList({\n        id: roleId\n      }).then(function (response) {\n        if (response.code) {\n          _this2.authFormVisible = false;\n\n          _this2.$message({\n            message: response.message,\n            type: \"error\"\n          });\n\n          return;\n        }\n\n        _this2.authFormVisible = true;\n        _this2.authList = response.data.list || [];\n        var checkedKeys = response.data.checkedKeys || [];\n        var tempCheckedKeys = [];\n        var id = null;\n        var node = null;\n\n        var getTreeNode = function getTreeNode(arr, id) {\n          for (var i in arr) {\n            var tempNode = arr[i];\n\n            if (tempNode.id === id) {\n              // 找到了，就不找了\n              node = tempNode;\n            } // 如果还有子节点，再继续找\n\n\n            getTreeNode(tempNode.children, id);\n          }\n        };\n\n        for (var i in checkedKeys) {\n          id = checkedKeys[i];\n          getTreeNode(_this2.authList, id);\n\n          if (node && node.children.length <= 0) {\n            // 如果下面没有子节点，则加入\n            tempCheckedKeys.push(id);\n          }\n        }\n\n        _this2.authDefaultCheckedKeys = [];\n        _this2.authDefaultCheckedKeys = tempCheckedKeys; // this.$refs.tree.setCheckedKeys(tempCheckedKeys);\n      }).catch(function () {});\n    },\n    authSubmit: function authSubmit() {\n      var _this3 = this;\n\n      this.authLoading = true;\n\n      var getNodeParents = function getNodeParents(node) {\n        var arr = [];\n        var id = node.data.id || null;\n\n        if (id) {\n          arr.push(node.data.id);\n        }\n\n        if (node.parent) {\n          arr = arr.concat(getNodeParents(node.parent));\n        }\n\n        return arr;\n      };\n\n      var checkedKeys = this.$refs.tree.getCheckedKeys();\n      var arr = [];\n      var _iteratorNormalCompletion = true;\n      var _didIteratorError = false;\n      var _iteratorError = undefined;\n\n      try {\n        for (var _iterator = checkedKeys[Symbol.iterator](), _step; !(_iteratorNormalCompletion = (_step = _iterator.next()).done); _iteratorNormalCompletion = true) {\n          var checkedKey = _step.value;\n          var node = this.$refs.tree.getNode(checkedKey);\n          arr = arr.concat(getNodeParents(node));\n        }\n      } catch (err) {\n        _didIteratorError = true;\n        _iteratorError = err;\n      } finally {\n        try {\n          if (!_iteratorNormalCompletion && _iterator.return != null) {\n            _iterator.return();\n          }\n        } finally {\n          if (_didIteratorError) {\n            throw _iteratorError;\n          }\n        }\n      }\n\n      var setArr = new Set(arr);\n      this.authFormData.authRules = _toConsumableArray(setArr);\n\n      if (!this.authFormData) {\n        this.$alert(\"请至少选择一个权限\", \"提示\", {\n          confirmButtonText: \"确定\"\n        });\n        return false;\n      }\n\n      authRoleAuth(this.authFormData).then(function (response) {\n        _this3.authLoading = false;\n\n        if (response.code) {\n          _this3.$message.error(response.message);\n\n          return false;\n        }\n\n        _this3.$message.success(\"授权成功\"); // 刷新表单\n\n\n        _this3.authFormVisible = false;\n      }).catch(function () {\n        _this3.editLoading = false;\n      });\n    },\n    // 隐藏表单\n    hideForm: function hideForm() {\n      // 更改值\n      this.formVisible = !this.formVisible; // 清空表单\n\n      this.$refs[\"dataForm\"].resetFields();\n      return true;\n    },\n    // 显示表单\n    handleForm: function handleForm(index, row) {\n      this.formVisible = true;\n      this.formData = Object.assign({}, formJson);\n\n      if (row !== null) {\n        this.formData = Object.assign({}, row);\n      }\n\n      this.formData.status += \"\"; // 转为字符串（解决默认选中的时候字符串和数字不能比较的问题）\n\n      this.formName = \"add\";\n\n      if (index !== null) {\n        this.index = index;\n        this.formName = \"edit\";\n      } // 清空验证信息表单\n\n\n      if (this.$refs[\"dataForm\"]) {\n        this.$refs[\"dataForm\"].clearValidate();\n      }\n    },\n    formSubmit: function formSubmit() {\n      var _this4 = this;\n\n      this.$refs[\"dataForm\"].validate(function (valid) {\n        if (valid) {\n          _this4.formLoading = true;\n          var data = Object.assign({}, _this4.formData);\n          authRoleSave(data, _this4.formName).then(function (response) {\n            _this4.formLoading = false;\n\n            if (response.code) {\n              _this4.$message.error(response.message);\n\n              return false;\n            }\n\n            _this4.$message.success(\"操作成功\"); // if (this.formName === \"add\") {\n            //     // 向头部添加数据\n            //     this.list.unshift(response.data);\n            // } else {\n            //     this.list.splice(this.index, 1, data);\n            // }\n            // 刷新表单\n\n\n            _this4.$refs[\"dataForm\"].resetFields();\n\n            _this4.formVisible = false;\n\n            _this4.getList();\n          }).catch(function () {\n            _this4.formLoading = false;\n          });\n        }\n      });\n    },\n    // 删除\n    handleDel: function handleDel(index, row) {\n      var _this5 = this;\n\n      if (row.id) {\n        this.$confirm(\"确认删除该记录吗?\", \"提示\", {\n          type: \"warning\"\n        }).then(function () {\n          _this5.deleteLoading = true;\n          var para = {\n            id: row.id\n          };\n          authRoleDelete(para).then(function (response) {\n            _this5.deleteLoading = false;\n\n            if (response.code) {\n              _this5.$message.error(response.message);\n\n              return false;\n            }\n\n            _this5.$message.success(\"删除成功\"); //返回第一页\n\n\n            _this5.query.currentPage = 1; // 刷新数据\n\n            _this5.getList();\n          }).catch(function () {\n            _this5.deleteLoading = false;\n          });\n        }).catch(function () {});\n      }\n    }\n  },\n  filters: {\n    statusFilterType: function statusFilterType(status) {\n      var statusMap = {\n        0: \"gray\",\n        1: \"success\"\n      };\n      return statusMap[status];\n    },\n    statusFilterName: function statusFilterName(status) {\n      var statusMap = {\n        0: \"禁用\",\n        1: \"正常\"\n      };\n      return statusMap[status];\n    }\n  },\n  mounted: function mounted() {},\n  created: function created() {\n    // 加载表格数据\n    this.getList();\n  }\n};",{"version":3,"sources":["authRole.vue"],"names":[],"mappings":"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","sourcesContent":["<template>\n  <div style=\"width: 95%; margin-left: 2%;\">\n    <el-form :inline=\"true\" :model=\"query\" class=\"query-form\" size=\"small\">\n      <el-form-item class=\"query-form-item\">\n        <el-input\n          v-model=\"query.name\"\n          placeholder=\"请输入角色名称\"\n          prefix-icon=\"el-icon-search\"\n          @keyup.enter.native=\"onSubmit\"\n          clearable\n        ></el-input>\n      </el-form-item>\n      <el-form-item class=\"query-form-item\">\n        <el-select v-model=\"query.status\" placeholder=\"请选择状态\" @change=\"onSubmit\" clearable>\n          <el-option label=\"全部\" value></el-option>\n          <el-option label=\"禁用\" value=\"0\"></el-option>\n          <el-option label=\"正常\" value=\"1\"></el-option>\n        </el-select>\n      </el-form-item>\n\n      <el-form-item>\n        <el-button type=\"primary\" icon=\"el-icon-refresh\" @click=\"onRest\">刷新</el-button>\n        <el-button type=\"primary\" icon=\"el-icon-search\" @click=\"onSubmit\">查询</el-button>\n        <el-button type=\"primary\" icon=\"el-icon-edit\" @click.native=\"handleForm(null,null)\">添加</el-button>\n      </el-form-item>\n    </el-form>\n    <!-- <el-scrollbar class=\"table-scrollbar\" wrap-style=\"overflow-x: hidden;\"> -->\n    <el-table\n      v-loading=\"loading\"\n      :data=\"list\"\n      :header-cell-style=\"{background:'#F4F4F5',color:'#606266'}\"\n      border\n    >\n      <el-table-column label=\"角色 ID\" prop=\"id\" width=\"80\" align=\"center\"></el-table-column>\n      <el-table-column label=\"角色名称\" prop=\"name\" align=\"center\"></el-table-column>\n      <el-table-column label=\"状态\" align=\"center\" width=\"100\">\n        <template slot-scope=\"scope\">\n          <el-tag\n            :type=\"scope.row.status | statusFilterType\"\n          >{{scope.row.status | statusFilterName}}</el-tag>\n        </template>\n      </el-table-column>\n      <el-table-column label=\"描述\" :show-overflow-tooltip=\"true\" align=\"center\">\n        <template slot-scope=\"scope\">\n          <span v-if=\"scope.row.remark!=null\">{{ scope.row.remark }}</span>\n          <span v-else>暂无描述</span>\n        </template>\n      </el-table-column>\n        <el-table-column label=\"描述\" :show-overflow-tooltip=\"true\" align=\"center\">\n            <template slot-scope=\"scope\">\n                <span v-if=\"scope.row.createTime != null\">\n                    <i class=\"el-icon-time\"></i>\n                    {{\n                      scope.row.createTime | formatDateStr(\"yyyy-MM-dd hh:mm:ss\")\n                    }}\n                  </span>\n                <span v-if=\"scope.row.createTime == null\">-</span>\n            </template>\n        </el-table-column>\n\n      <el-table-column label=\"操作\"  align=\"center\" width=\"210\">\n        <template slot-scope=\"scope\">\n          <el-button\n            type=\"info\"\n            size=\"mini\"\n            v-if=\"scope.row.id!=1\"\n            @click.native=\"handleAuth(scope.row.id)\"\n          >授权</el-button>\n          <el-button\n            type=\"primary\"\n            size=\"mini\"\n            v-if=\"scope.row.id!=1\"\n            @click.native=\"handleForm(scope.$index, scope.row)\"\n          >编辑</el-button>\n          <el-button\n            type=\"danger\"\n            size=\"mini\"\n            v-if=\"scope.row.id!=1\"\n            @click.native=\"handleDel(scope.$index, scope.row)\"\n            :loading=\"deleteLoading\"\n          >删除</el-button>\n        </template>\n      </el-table-column>\n    </el-table>\n    <!-- </el-scrollbar> -->\n    <el-pagination\n      class=\"pagination-container\"\n      background\n      :page-size=\"query.pageSize\"\n      @size-change=\"handleSizeChange\"\n      @current-change=\"handleCurrentChange\"\n      layout=\"total,sizes,prev, pager, next, jumper\"\n      :current-page=\"this.query.currentPage\"\n      :page-sizes=\"[10, 20, 30, 50]\"\n      :total=\"totalNumber\"\n    ></el-pagination>\n\n    <!--授权界面-->\n    <el-dialog\n      title=\"授权\"\n      :visible.sync=\"authFormVisible\"\n      :close-on-click-modal=\"false\"\n      width=\"1000px\"\n      top=\"5vh\"\n      v-dialogDrag\n    >\n      <el-tree\n        style=\"max-height: 75vh;overflow-y: auto;\"\n        :data=\"authList\"\n        show-checkbox\n        default-expand-all\n        node-key=\"id\"\n        ref=\"tree\"\n        :props=\"defaultProps\"\n        :default-checked-keys=\"authDefaultCheckedKeys\"\n      ></el-tree>\n      <div slot=\"footer\" class=\"dialog-footer\">\n        <el-button @click.native=\"authFormVisible = !authFormVisible\">取消</el-button>\n        <el-button type=\"primary\" @click.native=\"authSubmit()\" :loading=\"authLoading\">提交</el-button>\n      </div>\n    </el-dialog>\n\n    <!--表单-->\n    <el-dialog\n      :title=\"formMap[formName]\"\n      :visible.sync=\"formVisible\"\n      :before-close=\"hideForm\"\n      width=\"1000px\"\n      top=\"5vh\"\n      v-dialogDrag\n    >\n      <el-form :model=\"formData\" :rules=\"formRules\" ref=\"dataForm\">\n        <el-form-item label=\"角色名称\" prop=\"name\">\n          <el-input v-model=\"formData.name\" placeholder=\"请输入角色名称\" auto-complete=\"off\"></el-input>\n        </el-form-item>\n        <!-- <el-form-item label=\"排序(无需填写)\" prop=\"listorder\">\n          <el-input type auto-complete=\"off\" disabled></el-input>\n        </el-form-item>-->\n        <el-form-item label=\"状态\" prop=\"status\">\n          <el-radio-group v-model=\"formData.status\">\n            <el-radio label=\"0\">禁用</el-radio>\n            <el-radio label=\"1\">正常</el-radio>\n          </el-radio-group>\n        </el-form-item>\n        <el-form-item label=\"描述\">\n          <el-input type=\"textarea\" v-model=\"formData.remark\"></el-input>\n        </el-form-item>\n      </el-form>\n      <div slot=\"footer\" class=\"dialog-footer\">\n        <el-button @click.native=\"hideForm\">取消</el-button>\n        <el-button type=\"primary\" @click.native=\"formSubmit()\" :loading=\"formLoading\">提交</el-button>\n      </div>\n    </el-dialog>\n  </div>\n</template>\n\n<script>\nimport {\n    authRoleList,\n    authRoleAuthList,\n    authRoleAuth,\n    authRoleSave,\n    authRoleDelete\n} from \"../../../api/auth/authRole\";\nconst formJson = {\n    id: \"\",\n    name: \"\",\n    status: \"1\",\n    remark: \"\",\n    listorder: \"\"\n};\nexport default {\n    data() {\n        return {\n            query: {\n                name: \"\",\n                status: \"\",\n                currentPage: 1,\n                pageSize: 10\n            },\n            list: [],\n            totalNumber: 0,\n            loading: true,\n            authList: [],\n            defaultProps: {\n                children: \"children\",\n                label: \"title\"\n            },\n            authLoading: false,\n            authFormVisible: false,\n            authFormData: {\n                roleId: \"\",\n                authRules: []\n            },\n            authDefaultCheckedKeys: [],\n            index: null,\n            formName: null,\n            formMap: {\n                add: \"添加\",\n                edit: \"编辑\"\n            },\n            formLoading: false,\n            formVisible: false,\n            formData: formJson,\n            formRules: {\n                name: [\n                    { required: true, message: \"请输入名称\", trigger: \"blur\" }\n                ],\n                status: [\n                    { required: true, message: \"请选择状态\", trigger: \"change\" }\n                ]\n            },\n            deleteLoading: false\n        };\n    },\n    methods: {\n        onRest() {\n            this.query = {\n                name: \"\",\n                status: \"\",\n                currentPage: 1,\n                pageSize: 10\n            };\n            this.getList();\n        },\n        onSubmit() {\n            this.query.currentPage = 1;\n            this.getList();\n        },\n        handleCurrentChange(val) {\n            this.query.currentPage = val;\n            this.getList();\n        },\n        handleSizeChange(val) {\n            this.query.pageSize = val;\n            this.getList();\n        },\n        getList() {\n            this.loading = true;\n            authRoleList(this.query)\n                .then(response => {\n                    if (response.code) {\n                        this.$message.error(response.message);\n                    }\n                    this.list = response.data.list || [];\n                    console.info(this.list)\n                    this.totalNumber = response.data.totalNumber || 0;\n                    setTimeout(() => {\n                        this.loading = false;\n                    }, 0.3 * 1000);\n                })\n                .catch(() => {\n                    this.loading = false;\n                    this.list = [];\n                    this.totalNumber = 0;\n                });\n        },\n        // 显示授权界面\n        handleAuth(roleId) {\n            this.authFormData.roleId = roleId;\n            this.authFormData.authRules = [];\n            this.authList = [];\n            authRoleAuthList({ id: roleId })\n                .then(response => {\n                    if (response.code) {\n                        this.authFormVisible = false;\n                        this.$message({\n                            message: response.message,\n                            type: \"error\"\n                        });\n                        return;\n                    }\n                    this.authFormVisible = true;\n                    this.authList = response.data.list || [];\n                    const checkedKeys = response.data.checkedKeys || [];\n                    let tempCheckedKeys = [];\n                    let id = null;\n                    let node = null;\n                    let getTreeNode = function(arr, id) {\n                        for (let i in arr) {\n                            let tempNode = arr[i];\n                            if (tempNode.id === id) {\n                                // 找到了，就不找了\n                                node = tempNode;\n                            }\n                            // 如果还有子节点，再继续找\n                            getTreeNode(tempNode.children, id);\n                        }\n                    };\n                    for (let i in checkedKeys) {\n                        id = checkedKeys[i];\n                        getTreeNode(this.authList, id);\n                        if (node && node.children.length <= 0) {\n                            // 如果下面没有子节点，则加入\n                            tempCheckedKeys.push(id);\n                        }\n                    }\n                    this.authDefaultCheckedKeys = [];\n                    this.authDefaultCheckedKeys = tempCheckedKeys;\n                    // this.$refs.tree.setCheckedKeys(tempCheckedKeys);\n                })\n                .catch(() => {});\n        },\n        authSubmit() {\n            this.authLoading = true;\n            let getNodeParents = function(node) {\n                let arr = [];\n                let id = node.data.id || null;\n                if (id) {\n                    arr.push(node.data.id);\n                }\n                if (node.parent) {\n                    arr = arr.concat(getNodeParents(node.parent));\n                }\n                return arr;\n            };\n            let checkedKeys = this.$refs.tree.getCheckedKeys();\n            let arr = [];\n            for (let checkedKey of checkedKeys) {\n                let node = this.$refs.tree.getNode(checkedKey);\n                arr = arr.concat(getNodeParents(node));\n            }\n            let setArr = new Set(arr);\n            this.authFormData.authRules = [...setArr];\n            if (!this.authFormData) {\n                this.$alert(\"请至少选择一个权限\", \"提示\", {\n                    confirmButtonText: \"确定\"\n                });\n                return false;\n            }\n            authRoleAuth(this.authFormData)\n                .then(response => {\n                    this.authLoading = false;\n                    if (response.code) {\n                        this.$message.error(response.message);\n                        return false;\n                    }\n                    this.$message.success(\"授权成功\");\n                    // 刷新表单\n                    this.authFormVisible = false;\n                })\n                .catch(() => {\n                    this.editLoading = false;\n                });\n        },\n        // 隐藏表单\n        hideForm() {\n            // 更改值\n            this.formVisible = !this.formVisible;\n            // 清空表单\n            this.$refs[\"dataForm\"].resetFields();\n            return true;\n        },\n        // 显示表单\n        handleForm(index, row) {\n            this.formVisible = true;\n            this.formData = Object.assign({}, formJson);\n            if (row !== null) {\n                this.formData = Object.assign({}, row);\n            }\n            this.formData.status += \"\"; // 转为字符串（解决默认选中的时候字符串和数字不能比较的问题）\n            this.formName = \"add\";\n            if (index !== null) {\n                this.index = index;\n                this.formName = \"edit\";\n            }\n            // 清空验证信息表单\n            if (this.$refs[\"dataForm\"]) {\n                this.$refs[\"dataForm\"].clearValidate();\n            }\n        },\n        formSubmit() {\n            this.$refs[\"dataForm\"].validate(valid => {\n                if (valid) {\n                    this.formLoading = true;\n                    let data = Object.assign({}, this.formData);\n                    authRoleSave(data, this.formName)\n                        .then(response => {\n                            this.formLoading = false;\n                            if (response.code) {\n                                this.$message.error(response.message);\n                                return false;\n                            }\n                            this.$message.success(\"操作成功\");\n                            // if (this.formName === \"add\") {\n                            //     // 向头部添加数据\n                            //     this.list.unshift(response.data);\n                            // } else {\n                            //     this.list.splice(this.index, 1, data);\n                            // }\n                            // 刷新表单\n                            this.$refs[\"dataForm\"].resetFields();\n                            this.formVisible = false;\n                            this.getList();\n                        })\n                        .catch(() => {\n                            this.formLoading = false;\n                        });\n                }\n            });\n        },\n        // 删除\n        handleDel(index, row) {\n            if (row.id) {\n                this.$confirm(\"确认删除该记录吗?\", \"提示\", {\n                    type: \"warning\"\n                })\n                    .then(() => {\n                        this.deleteLoading = true;\n                        let para = { id: row.id };\n                        authRoleDelete(para)\n                            .then(response => {\n                                this.deleteLoading = false;\n                                if (response.code) {\n                                    this.$message.error(response.message);\n                                    return false;\n                                }\n                                this.$message.success(\"删除成功\");\n                                //返回第一页\n                                this.query.currentPage = 1;\n                                // 刷新数据\n                                this.getList();\n                            })\n                            .catch(() => {\n                                this.deleteLoading = false;\n                            });\n                    })\n                    .catch(() => {});\n            }\n        }\n    },\n    filters: {\n        statusFilterType(status) {\n            const statusMap = {\n                0: \"gray\",\n                1: \"success\"\n            };\n            return statusMap[status];\n        },\n        statusFilterName(status) {\n            const statusMap = {\n                0: \"禁用\",\n                1: \"正常\"\n            };\n            return statusMap[status];\n        }\n    },\n    mounted() {},\n    created() {\n        // 加载表格数据\n        this.getList();\n    }\n};\n</script>\n\n<style type=\"text/scss\" lang=\"scss\">\n</style>\n"],"sourceRoot":"src\\views\\userManage\\admin"}]}