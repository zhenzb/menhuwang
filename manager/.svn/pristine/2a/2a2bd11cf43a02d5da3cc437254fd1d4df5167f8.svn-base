{"remainingRequest":"E:\\mijia\\manager\\node_modules\\babel-loader\\lib\\index.js!E:\\mijia\\manager\\node_modules\\vue-loader\\lib\\index.js??vue-loader-options!E:\\mijia\\manager\\src\\views\\userManage\\admin\\authPermissionRule.vue?vue&type=script&lang=js","dependencies":[{"path":"E:\\mijia\\manager\\src\\views\\userManage\\admin\\authPermissionRule.vue","mtime":1553328249138},{"path":"E:\\mijia\\manager\\node_modules\\cache-loader\\dist\\cjs.js","mtime":1558690126701},{"path":"E:\\mijia\\manager\\node_modules\\babel-loader\\lib\\index.js","mtime":1529635966000},{"path":"E:\\mijia\\manager\\node_modules\\vue-loader\\lib\\index.js","mtime":1527860006000}],"contextDependencies":[],"result":["import \"core-js/modules/es6.array.find-index\";\nimport \"core-js/modules/es6.object.assign\";\nimport \"core-js/modules/es6.function.name\";\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\nimport { authPermissionRuleList, authPermissionRuleSave, authPermissionRuleDelete } from \"../../../api/auth/authPermissionRule\";\nvar formJson = {\n  id: \"\",\n  pid: 0,\n  name: \"\",\n  title: \"\",\n  status: 1,\n  condition: \"\",\n  listorder: \"\"\n};\nexport default {\n  data: function data() {\n    return {\n      query: {// pid: '',\n      },\n      mergeList: [],\n      node: null,\n      defaultProps: {\n        children: \"children\",\n        label: \"title\"\n      },\n      treeList: [],\n      loading: true,\n      index: null,\n      formName: null,\n      formMap: {\n        add: \"添加\",\n        edit: \"编辑\"\n      },\n      formLoading: false,\n      formVisible: false,\n      formData: formJson,\n      formRules: {\n        name: [{\n          required: true,\n          message: \"请输入规则名\",\n          trigger: \"blur\"\n        }],\n        title: [{\n          required: true,\n          message: \"请输入标题\",\n          trigger: \"blur\"\n        }],\n        status: [{\n          required: true,\n          message: \"请选择状态\",\n          trigger: \"change\"\n        }]\n      },\n      pidData: {},\n      deleteLoading: false\n    };\n  },\n  methods: {\n    /*eslint-disable */\n    renderContent: function renderContent(h, _ref) {\n      var _this = this;\n\n      var node = _ref.node,\n          data = _ref.data,\n          store = _ref.store;\n      return h(\"span\", {\n        style: \"flex: 1; display: flex; align-items: center; justify-content: space-between; font-size: 14px; padding-right: 8px;\"\n      }, [h(\"span\", [h(\"span\", {\n        attrs: {\n          title: data.name\n        }\n      }, [node.label])]), h(\"span\", [h(\"el-button\", {\n        style: \"font-size: 12px;\",\n        attrs: {\n          type: \"text\"\n        },\n        on: {\n          \"click\": function click() {\n            return _this.handleForm(node, data, \"add\");\n          }\n        }\n      }, [\"\\u6DFB\\u52A0\\u5B50\\u83DC\\u5355\"]), h(\"el-button\", {\n        style: \"font-size: 12px;\",\n        attrs: {\n          type: \"text\"\n        },\n        on: {\n          \"click\": function click() {\n            return _this.handleForm(node, data, \"edit\");\n          }\n        }\n      }, [\"\\u7F16\\u8F91\"]), h(\"el-button\", {\n        style: \"font-size: 12px;\",\n        attrs: {\n          type: \"text\"\n        },\n        on: {\n          \"click\": function click() {\n            return _this.handleDel(node, data);\n          }\n        }\n      }, [\"\\u5220\\u9664\"])])]);\n    },\n    onSubmit: function onSubmit() {\n      this.getList();\n    },\n    getList: function getList() {\n      var _this2 = this;\n\n      this.loading = true;\n      authPermissionRuleList(this.query).then(function (response) {\n        if (response.code) {\n          _this2.$message.error(response.message);\n        }\n\n        _this2.mergeList = response.data.list || [];\n        setTimeout(function () {\n          _this2.loading = false;\n        }, 0.3 * 1000);\n      }).catch(function () {\n        _this2.loading = false;\n        _this2.mergeList = [];\n      });\n    },\n    // 隐藏表单\n    hideForm: function hideForm() {\n      // 更改值\n      this.formVisible = !this.formVisible; // 清空表单\n\n      this.$refs[\"dataForm\"].resetFields();\n      return true;\n    },\n    // 显示表单\n    handleForm: function handleForm(node, data, formName) {\n      this.formVisible = true;\n      this.pidData = data || null;\n      formJson.pid = data && parseInt(data.id) || 0;\n      this.formData = Object.assign({}, formJson);\n\n      if (formName === \"edit\") {\n        this.formData = Object.assign({}, data);\n        this.node = node;\n      }\n\n      this.formName = formName; // 清空验证信息表单\n\n      if (this.$refs[\"dataForm\"]) {\n        this.$refs[\"dataForm\"].clearValidate();\n      }\n\n      if (data && data.id) {\n        this.index = this.mergeList.findIndex(function (d) {\n          return d.id === data.id;\n        });\n      }\n    },\n    formSubmit: function formSubmit() {\n      var _this3 = this;\n\n      this.$refs[\"dataForm\"].validate(function (valid) {\n        if (valid) {\n          _this3.formLoading = true;\n          var data = Object.assign({}, _this3.formData);\n          authPermissionRuleSave(data, _this3.formName).then(function (response) {\n            _this3.formLoading = false;\n\n            if (response.code) {\n              _this3.$message.error(response.message);\n\n              return false;\n            }\n\n            _this3.$message.success(\"操作成功\"); // 刷新表单\n\n\n            _this3.$refs[\"dataForm\"].resetFields();\n\n            _this3.formVisible = false;\n\n            if (_this3.formName !== \"edit\") {\n              var newChild = response.data || {};\n\n              if (_this3.pidData) {\n                if (!_this3.pidData.children) {\n                  _this3.$set(_this3.pidData, \"children\", []);\n                }\n\n                _this3.pidData.children.push(newChild);\n              } else {\n                _this3.mergeList.push(newChild);\n              }\n            } else {\n              var parent = _this3.node.parent;\n              var children = parent.data.children || parent.data;\n              var index = children.findIndex(function (d) {\n                return d.id === data.id;\n              });\n              children.splice(index, 1, data);\n            }\n          }).catch(function () {\n            _this3.formLoading = false;\n          });\n        }\n      });\n    },\n    // 删除\n    handleDel: function handleDel(node, data) {\n      var _this4 = this;\n\n      if (data.children && data.children.length > 0) {\n        this.$alert(\"请先删除子节点\", \"提示\", {\n          confirmButtonText: \"确定\"\n        });\n        return false;\n      }\n\n      if (data.id) {\n        this.$confirm(\"确认删除该记录吗?\", \"提示\", {\n          type: \"warning\"\n        }).then(function () {\n          _this4.deleteLoading = true;\n          var para = {\n            id: data.id\n          };\n          authPermissionRuleDelete(para).then(function (response) {\n            _this4.deleteLoading = false;\n\n            if (response.code) {\n              _this4.$message.error(response.message);\n\n              return false;\n            }\n\n            _this4.$message.success(\"删除成功\");\n\n            var parent = node.parent;\n            var children = parent.data.children || parent.data;\n            var index = children.findIndex(function (d) {\n              return d.id === data.id;\n            });\n            children.splice(index, 1);\n          }).catch(function () {\n            _this4.deleteLoading = false;\n          });\n        }).catch(function () {});\n      }\n    }\n  },\n  filters: {\n    statusFilterType: function statusFilterType(status) {\n      var statusMap = {\n        0: \"gray\",\n        1: \"success\"\n      };\n      return statusMap[status];\n    },\n    statusFilterName: function statusFilterName(status) {\n      var statusMap = {\n        0: \"禁用\",\n        1: \"正常\"\n      };\n      return statusMap[status];\n    }\n  },\n  mounted: function mounted() {},\n  created: function created() {\n    // 加载表格数据\n    this.getList();\n  }\n};",{"version":3,"sources":["authPermissionRule.vue"],"names":[],"mappings":"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","sourcesContent":["<template>\r\n  <div>\r\n    <el-form :inline=\"true\" :model=\"query\" class=\"query-form\" size=\"small\">\r\n      <el-form-item>\r\n        <el-button type=\"primary\" icon=\"el-icon-refresh\" @click=\"getList\"></el-button>\r\n        <el-button type=\"primary\" icon=\"el-icon-search\" @click=\"onSubmit\">查询</el-button>\r\n        <el-button\r\n          type=\"primary\"\r\n          icon=\"el-icon-edit\"\r\n          @click.native=\"handleForm(null,null)\"\r\n        >添加</el-button>\r\n      </el-form-item>\r\n    </el-form>\r\n\r\n    <el-tree\r\n      :data=\"mergeList\"\r\n      :props=\"defaultProps\"\r\n      node-key=\"id\"\r\n      default-expand-all\r\n      :expand-on-click-node=\"false\"\r\n      :render-content=\"renderContent\"\r\n    ></el-tree>\r\n\r\n    <!--表单界面-->\r\n    <el-dialog\r\n      :title=\"formMap[formName]\"\r\n      :visible.sync=\"formVisible\"\r\n      :before-close=\"hideForm\"\r\n      width=\"1000px\"\r\n      top=\"5vh\"\r\n      v-dialogDrag\r\n    >\r\n      <el-form :model=\"formData\" :rules=\"formRules\" ref=\"dataForm\">\r\n        <el-form-item label=\"规则名\" prop=\"name\">\r\n          <el-input type v-model=\"formData.name\" auto-complete=\"off\"></el-input>\r\n        </el-form-item>\r\n        <el-form-item label=\"规则标题\" prop=\"title\">\r\n          <el-input type v-model=\"formData.title\" auto-complete=\"off\"></el-input>\r\n        </el-form-item>\r\n        <el-form-item label=\"状态\" prop=\"status\">\r\n          <el-radio-group v-model=\"formData.status\">\r\n            <el-radio :label=\"0\">禁用</el-radio>\r\n            <el-radio :label=\"1\">正常</el-radio>\r\n          </el-radio-group>\r\n        </el-form-item>\r\n        <el-form-item label=\"额外的规则表达式\">\r\n          <el-input type=\"textarea\" v-model=\"formData.condition\"></el-input>\r\n        </el-form-item>\r\n        <!-- <el-form-item label=\"排序(无需填写)\" prop=\"listorder\">\r\n          <el-input type auto-complete=\"off\" disabled></el-input>\r\n        </el-form-item> -->\r\n      </el-form>\r\n      <div slot=\"footer\" class=\"dialog-footer\">\r\n        <el-button @click.native=\"hideForm\">取消</el-button>\r\n        <el-button type=\"primary\" @click.native=\"formSubmit()\" :loading=\"formLoading\">提交</el-button>\r\n      </div>\r\n    </el-dialog>\r\n  </div>\r\n</template>\r\n\r\n<script>\r\nimport {\r\n    authPermissionRuleList,\r\n    authPermissionRuleSave,\r\n    authPermissionRuleDelete\r\n} from \"../../../api/auth/authPermissionRule\";\r\nconst formJson = {\r\n    id: \"\",\r\n    pid: 0,\r\n    name: \"\",\r\n    title: \"\",\r\n    status: 1,\r\n    condition: \"\",\r\n    listorder: \"\"\r\n};\r\nexport default {\r\n    data() {\r\n        return {\r\n            query: {\r\n                // pid: '',\r\n            },\r\n            mergeList: [],\r\n            node: null,\r\n            defaultProps: {\r\n                children: \"children\",\r\n                label: \"title\"\r\n            },\r\n            treeList: [],\r\n            loading: true,\r\n            index: null,\r\n            formName: null,\r\n            formMap: {\r\n                add: \"添加\",\r\n                edit: \"编辑\"\r\n            },\r\n            formLoading: false,\r\n            formVisible: false,\r\n            formData: formJson,\r\n            formRules: {\r\n                name: [\r\n                    { required: true, message: \"请输入规则名\", trigger: \"blur\" }\r\n                ],\r\n                title: [\r\n                    { required: true, message: \"请输入标题\", trigger: \"blur\" }\r\n                ],\r\n                status: [\r\n                    { required: true, message: \"请选择状态\", trigger: \"change\" }\r\n                ]\r\n            },\r\n            pidData: {},\r\n            deleteLoading: false\r\n        };\r\n    },\r\n    methods: {\r\n        /*eslint-disable */\r\n    renderContent(h, { node, data, store }) {\r\n      return (\r\n        <span style=\"flex: 1; display: flex; align-items: center; justify-content: space-between; font-size: 14px; padding-right: 8px;\">\r\n          <span>\r\n            <span title={data.name}>{node.label}</span>\r\n          </span>\r\n          <span>\r\n            <el-button\r\n              style=\"font-size: 12px;\"\r\n              type=\"text\"\r\n              on-click={() => this.handleForm(node, data, \"add\")}\r\n            >\r\n              添加子菜单\r\n            </el-button>\r\n            <el-button\r\n              style=\"font-size: 12px;\"\r\n              type=\"text\"\r\n              on-click={() => this.handleForm(node, data, \"edit\")}\r\n            >\r\n              编辑\r\n            </el-button>\r\n            <el-button\r\n              style=\"font-size: 12px;\"\r\n              type=\"text\"\r\n              on-click={() => this.handleDel(node, data)}\r\n            >\r\n              删除\r\n            </el-button>\r\n          </span>\r\n        </span>\r\n      );\r\n    },\r\n    onSubmit() {\r\n      this.getList();\r\n    },\r\n    getList() {\r\n      this.loading = true;\r\n      authPermissionRuleList(this.query)\r\n        .then(response => {\r\n          if (response.code) {\r\n            this.$message.error(response.message);\r\n          }\r\n          this.mergeList = response.data.list || [];\r\n          setTimeout(() => {\r\n            this.loading = false;\r\n          }, 0.3 * 1000);\r\n        })\r\n        .catch(() => {\r\n          this.loading = false;\r\n          this.mergeList = [];\r\n        });\r\n    },\r\n    // 隐藏表单\r\n    hideForm() {\r\n      // 更改值\r\n      this.formVisible = !this.formVisible;\r\n      // 清空表单\r\n      this.$refs[\"dataForm\"].resetFields();\r\n      return true;\r\n    },\r\n    // 显示表单\r\n    handleForm(node, data, formName) {\r\n      this.formVisible = true;\r\n      this.pidData = data || null;\r\n      formJson.pid = (data && parseInt(data.id)) || 0;\r\n      this.formData = Object.assign({}, formJson);\r\n      if (formName === \"edit\") {\r\n        this.formData = Object.assign({}, data);\r\n        this.node = node;\r\n      }\r\n      this.formName = formName;\r\n      // 清空验证信息表单\r\n      if (this.$refs[\"dataForm\"]) {\r\n        this.$refs[\"dataForm\"].clearValidate();\r\n      }\r\n      if (data && data.id) {\r\n        this.index = this.mergeList.findIndex(d => d.id === data.id);\r\n      }\r\n    },\r\n    formSubmit() {\r\n      this.$refs[\"dataForm\"].validate(valid => {\r\n        if (valid) {\r\n          this.formLoading = true;\r\n          let data = Object.assign({}, this.formData);\r\n          authPermissionRuleSave(data, this.formName)\r\n            .then(response => {\r\n              this.formLoading = false;\r\n              if (response.code) {\r\n                this.$message.error(response.message);\r\n                return false;\r\n              }\r\n              this.$message.success(\"操作成功\");\r\n              // 刷新表单\r\n              this.$refs[\"dataForm\"].resetFields();\r\n              this.formVisible = false;\r\n              if (this.formName !== \"edit\") {\r\n                const newChild = response.data || {};\r\n                if (this.pidData) {\r\n                  if (!this.pidData.children) {\r\n                    this.$set(this.pidData, \"children\", []);\r\n                  }\r\n                  this.pidData.children.push(newChild);\r\n                } else {\r\n                  this.mergeList.push(newChild);\r\n                }\r\n              } else {\r\n                const parent = this.node.parent;\r\n                const children = parent.data.children || parent.data;\r\n                const index = children.findIndex(d => d.id === data.id);\r\n                children.splice(index, 1, data);\r\n              }\r\n            })\r\n            .catch(() => {\r\n              this.formLoading = false;\r\n            });\r\n        }\r\n      });\r\n    },\r\n    // 删除\r\n    handleDel(node, data) {\r\n      if (data.children && data.children.length > 0) {\r\n        this.$alert(\"请先删除子节点\", \"提示\", {\r\n          confirmButtonText: \"确定\"\r\n        });\r\n        return false;\r\n      }\r\n      if (data.id) {\r\n        this.$confirm(\"确认删除该记录吗?\", \"提示\", {\r\n          type: \"warning\"\r\n        })\r\n          .then(() => {\r\n            this.deleteLoading = true;\r\n            let para = { id: data.id };\r\n            authPermissionRuleDelete(para)\r\n              .then(response => {\r\n                this.deleteLoading = false;\r\n                if (response.code) {\r\n                  this.$message.error(response.message);\r\n                  return false;\r\n                }\r\n                this.$message.success(\"删除成功\");\r\n                const parent = node.parent;\r\n                const children = parent.data.children || parent.data;\r\n                const index = children.findIndex(d => d.id === data.id);\r\n                children.splice(index, 1);\r\n              })\r\n              .catch(() => {\r\n                this.deleteLoading = false;\r\n              });\r\n          })\r\n          .catch(() => {});\r\n      }\r\n    }\r\n  },\r\n  filters: {\r\n    statusFilterType(status) {\r\n      const statusMap = {\r\n        0: \"gray\",\r\n        1: \"success\"\r\n      };\r\n      return statusMap[status];\r\n    },\r\n    statusFilterName(status) {\r\n      const statusMap = {\r\n        0: \"禁用\",\r\n        1: \"正常\"\r\n      };\r\n      return statusMap[status];\r\n    }\r\n  },\r\n  mounted() {},\r\n  created() {\r\n    // 加载表格数据\r\n    this.getList();\r\n  }\r\n};\r\n</script>\r\n\r\n<style type=\"text/scss\" lang=\"scss\">\r\n</style>\r\n"],"sourceRoot":"src\\views\\userManage\\admin"}]}