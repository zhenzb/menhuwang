{"remainingRequest":"E:\\mijia\\manager\\node_modules\\babel-loader\\lib\\index.js!E:\\mijia\\manager\\node_modules\\vue-loader\\lib\\index.js??vue-loader-options!E:\\mijia\\manager\\src\\views\\product\\mbSoftware.vue?vue&type=script&lang=js","dependencies":[{"path":"E:\\mijia\\manager\\src\\views\\product\\mbSoftware.vue","mtime":1558778469838},{"path":"E:\\mijia\\manager\\node_modules\\cache-loader\\dist\\cjs.js","mtime":1558690126701},{"path":"E:\\mijia\\manager\\node_modules\\babel-loader\\lib\\index.js","mtime":1529635966000},{"path":"E:\\mijia\\manager\\node_modules\\vue-loader\\lib\\index.js","mtime":1527860006000}],"contextDependencies":[],"result":["import \"core-js/modules/web.dom.iterable\";\nimport \"core-js/modules/es6.object.assign\";\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\nimport { getList as _getList } from \"../../api/mbuser/mbuser\";\n/*用作表单的数据初始化*/\n\nvar formJson = {\n  username: \"\"\n};\nexport default {\n  data: function data() {\n    return {\n      pickerOptions: {\n        //快速选择日期\n        shortcuts: [{\n          text: \"最近一周\",\n          onClick: function onClick(picker) {\n            var end = new Date();\n            var start = new Date();\n            start.setTime(start.getTime() - 3600 * 1000 * 24 * 7);\n            picker.$emit(\"pick\", [start, end]);\n          }\n        }, {\n          text: \"最近一个月\",\n          onClick: function onClick(picker) {\n            var end = new Date();\n            var start = new Date();\n            start.setTime(start.getTime() - 3600 * 1000 * 24 * 30);\n            picker.$emit(\"pick\", [start, end]);\n          }\n        }, {\n          text: \"最近三个月\",\n          onClick: function onClick(picker) {\n            var end = new Date();\n            var start = new Date();\n            start.setTime(start.getTime() - 3600 * 1000 * 24 * 90);\n            picker.$emit(\"pick\", [start, end]);\n          }\n        }, {\n          text: \"最近六个月\",\n          onClick: function onClick(picker) {\n            var end = new Date();\n            var start = new Date();\n            start.setTime(start.getTime() - 3600 * 1000 * 24 * 180);\n            picker.$emit(\"pick\", [start, end]);\n          }\n        }]\n      },\n      query: {\n        //查询条件\n        startTime: \"\",\n        endTime: \"\",\n        currentPage: 1,\n        pageSize: 10\n      },\n      createTime: [],\n      //选择日期时需要的model\n      list: [],\n      //列表集合\n      totalNumber: 0,\n      //分页总页数\n      loading: true,\n      //列表加载\n      allLoding: false,\n      //全屏加载\n      formSumbitLoding: false,\n      //表单提交加载\n      cancelToggle: false,\n      //列表是否全选\n      multipleSelection: [],\n      //多选集合\n      dialogAddOrEdit: false,\n      //新增或编辑弹框开关\n      dialogAddOrEditName: \"\",\n      //新增或编辑弹框名字\n      formData: formJson,\n      //新增或修改的对象\n      rules: {\n        //表单校验\n        username: [{\n          required: true,\n          message: '请输入姓名',\n          trigger: 'blur'\n        }, {\n          min: 3,\n          max: 5,\n          message: '长度在 3 到 5 个字符',\n          trigger: 'blur'\n        }]\n      }\n    };\n  },\n  methods: {\n    /*获取列表事件*/\n    getList: function getList() {\n      var _this = this;\n\n      this.loading = true;\n\n      _getList(this.query).then(function (response) {\n        if (response.code != 0) {\n          _this.$message.error(response.message);\n\n          return false;\n        }\n\n        _this.list = response.data.list || [];\n        _this.totalNumber = response.data.totalNumber || 0;\n        setTimeout(function () {\n          _this.loading = false;\n        }, 0.3 * 1000);\n      }).catch(function () {\n        _this.loading = false;\n        _this.list = [];\n      });\n    },\n\n    /*新增或者编辑提交事件*/\n    formSumbit: function formSumbit() {\n      var _this2 = this;\n\n      //表单校验通过\n      this.$refs[\"ruleForm\"].validate(function (valid) {\n        if (valid) {\n          _this2.formSumbitLoding = true; //提交操作\n\n          setTimeout(function () {\n            _this2.hideDialogAddOrEdit();\n\n            _this2.$message.success(\"提交成功\");\n\n            _this2.formSumbitLoding = false;\n\n            _this2.getList();\n          }, 1000);\n        }\n      }); //new URLSearchParams(this.query)  提交数据格式不正确时可以转一下\n    },\n\n    /*列表查询条件事件*/\n    onSubmit: function onSubmit() {\n      this.query.currentPage = 1;\n      this.$router.push({\n        path: \"\",\n        query: this.query\n      });\n      this.getList();\n    },\n\n    /*刷新*/\n    onRest: function onRest() {\n      this.$router.push({\n        path: \"\"\n      }); //刷新事件需要重置查询条件\n\n      this.createTime = [];\n      this.query = {\n        currentPage: 1,\n        pageSize: 10\n      };\n      this.getList();\n    },\n\n    /*显示 -新增或者编辑弹框*/\n    showDialogAddOrEdit: function showDialogAddOrEdit(index, row) {\n      this.dialogAddOrEdit = true;\n      this.formData = Object.assign({}, formJson); //将弹框内表单内容初始化\n\n      if (row !== null) {\n        //如果row不为空，说明是修改，因为row是修改时携带过来此列的所有信息\n        this.formData = Object.assign({}, row); //修改则将列内容深拷贝到表单内容中\n\n        this.dialogAddOrEditName = \"编辑\";\n      } else {\n        this.dialogAddOrEditName = \"新增\";\n      }\n    },\n\n    /*隐藏 -新增或编辑弹框*/\n    hideDialogAddOrEdit: function hideDialogAddOrEdit() {\n      this.dialogAddOrEdit = false; //隐藏弹框时需要清除弹框内容\n\n      if (this.$refs[\"ruleForm\"]) {\n        this.$refs['ruleForm'].resetFields(); //清除formData表单\n\n        this.$refs[\"ruleForm\"].clearValidate(); //清除表单验证\n      } //如果上传文件，还需要清除文件列表\n\n    },\n\n    /*点击页数*/\n    handleCurrentChange: function handleCurrentChange(val) {\n      this.query.currentPage = val;\n      this.getList();\n    },\n\n    /*选择每页条数【10,20,30,40,50】*/\n    handleSizeChange: function handleSizeChange(val) {\n      this.query.pageSize = val;\n      this.getList();\n    },\n\n    /*取消全选事件*/\n    toggleSelection: function toggleSelection(rows) {\n      var _this3 = this;\n\n      if (rows) {\n        rows.forEach(function (row) {\n          _this3.$refs.multipleTable.toggleRowSelection(row);\n        });\n      } else {\n        this.$refs.multipleTable.clearSelection();\n      }\n    },\n\n    /*列表复选框选择事件*/\n    handleSelectionChange: function handleSelectionChange(val) {\n      this.multipleSelection = val;\n\n      if (val == \"\") {\n        this.cancelToggle = false;\n        return;\n      }\n\n      this.cancelToggle = true;\n    },\n\n    /*全选删除事件*/\n    delGroup: function delGroup() {\n      console.log(this.multipleSelection);\n      var ids = this.multipleSelection.map(function (item) {\n        return item.userid;\n      }).join(); //获取所有选中行的id组成的字符串，以逗号分隔\n\n      if (ids == \"\") {\n        this.$message({\n          message: \"请先选择\",\n          type: \"warning\"\n        });\n        return;\n      }\n\n      this.handleDel(ids);\n    },\n\n    /*单击删除事件*/\n    handleDel: function handleDel(ids) {\n      var _this4 = this;\n\n      if (ids) {\n        this.$confirm(\"确认要删除吗?\", \"提示\", {\n          type: \"warning\"\n        }).then(function () {\n          _this4.$message.success(\"删除成功\");\n\n          _this4.getList();\n        }).catch(function () {\n          _this4.$message.warning(\"已取消\");\n        });\n      }\n    },\n\n    /*日期选择事件*/\n    dateChange: function dateChange(val) {\n      if (val == null) {\n        this.query.startTime = \"\";\n        this.query.endTime = \"\";\n      } else {\n        this.query.startTime = val[0];\n        this.query.endTime = val[1];\n        this.query.currentPage = 1;\n      }\n\n      this.getList();\n      console.log(this.query);\n    }\n  },\n  created: function created() {// this.getList();\n  }\n}; //跳转路由的方法\n// this.$router.push({\n//     path: \"\",\n//     query:{\n//         username:\"张三\"\n//     }\n// });\n//接受路由传递的参数\n//let query = this.$route.query;",{"version":3,"sources":["mbSoftware.vue"],"names":[],"mappings":"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","sourcesContent":["<template>\n    <div>\n        <!--查询条件start --111s-->\n        <el-form :inline=\"true\" :model=\"query\" class=\"query-form\" size=\"small\">\n            <el-form-item>\n                <el-date-picker\n                    v-model=\"createTime\"\n                    type=\"datetimerange\"\n                    :picker-options=\"pickerOptions\"\n                    range-separator=\"-\"\n                    start-placeholder=\"开始日期\"\n                    end-placeholder=\"结束日期\"\n                    align=\"left\"\n                    format=\"yyyy-MM-dd HH:mm:ss\"\n                    value-format=\"yyyy-MM-dd HH:mm:ss\"\n                    :default-time=\"['00:00:00','23:59:59']\"\n                    @change=\"dateChange\"\n                ></el-date-picker>\n            </el-form-item>\n            <el-form-item class=\"query-form-item\">\n                <el-input\n                    v-model=\"query.username\"\n                    placeholder=\"请输入用户名\"\n                    prefix-icon=\"el-icon-search\"\n                    @keyup.enter.native=\"onSubmit\"\n                    clearable\n                ></el-input>\n            </el-form-item>\n            <el-form-item>\n                <el-button type=\"primary\" icon=\"el-icon-refresh\" @click=\"onRest\"></el-button>\n                <el-button type=\"primary\" icon=\"el-icon-search\" @click=\"onSubmit\">查询</el-button>\n                <el-button type=\"primary\" icon=\"el-icon-edit\" @click.native=\"showDialogAddOrEdit(null,null)\">添加\n                </el-button>\n            </el-form-item>\n        </el-form>\n        <!--查询条件end --111e-->\n\n        <!--列表start --222s-->\n        <el-table\n            ref=\"multipleTable\"\n            v-loading=\"loading\"\n            :data=\"list\"\n            :header-cell-style=\"{background:'#F4F4F5',color:'#606266'}\"\n            @selection-change=\"handleSelectionChange\"\n            border\n        >\n            <el-table-column type=\"selection\" width=\"50\" fixed/>\n            <el-table-column label=\"用户 ID\" prop=\"userid\" width=\"80\" align=\"center\"/>\n            <el-table-column label=\"用户名\" prop=\"username\" align=\"center\"/>\n            <el-table-column label=\"用户昵称\" prop=\"usernick\" align=\"center\"/>\n            <el-table-column label=\"登录时间\" with=\"300\" :show-overflow-tooltip=\"true\" align=\"center\">\n                <template slot-scope=\"scope\">\n                    <i class=\"el-icon-time\" v-if=\"scope.row.usercurrentlogintime!=null\"></i>\n                    <span\n                        v-if=\"scope.row.usercurrentlogintime!=null\"\n                    >{{ scope.row.usercurrentlogintime | formatDateStr('yyyy-MM-dd hh:mm:ss') }}</span>\n                    <span v-else>暂未登录</span>\n                </template>\n            </el-table-column>\n            <el-table-column label=\"注册时间\" with=\"300\" :show-overflow-tooltip=\"true\" align=\"center\">\n                <template slot-scope=\"scope\">\n                    <i class=\"el-icon-time\" v-if=\"scope.row.userregisttime!=null\"></i>\n                    <span\n                        v-if=\"scope.row.userregisttime!=null\"\n                    >{{ scope.row.userregisttime | formatDateStr('yyyy-MM-dd hh:mm:ss') }}</span>\n                    <span v-else>暂未登录</span>\n                </template>\n            </el-table-column>\n            <el-table-column label=\"操作\" align=\"center\">\n                <template slot-scope=\"scope\">\n                    <el-button\n                        type=\"primary\"\n                        size=\"mini\"\n                        @click.native=\"showDialogAddOrEdit(scope.$index, scope.row)\"\n                    >编辑\n                    </el-button>\n                    <el-button\n                        type=\"danger\"\n                        size=\"mini\"\n                        @click.native=\"handleDel(scope.row.userid)\"\n                    >删除\n                    </el-button>\n                </template>\n            </el-table-column>\n        </el-table>\n        <!--列表end --222e-->\n\n        <!--全选删除start-->\n        <div class=\"left-container\">\n            <el-button type=\"danger\" size=\"small\" @click=\"delGroup()\">删除已选</el-button>\n            <transition name=\"el-fade-in-linear\">\n                <el-button size=\"small\" @click=\"toggleSelection()\" v-show=\"cancelToggle\">取消选择</el-button>\n            </transition>\n        </div>\n        <!--全选删除end-->\n\n        <!--分页模块start-->\n        <el-pagination\n            class=\"pagination-container\"\n            background\n            :page-size=\"query.pageSize\"\n            @size-change=\"handleSizeChange\"\n            @current-change=\"handleCurrentChange\"\n            layout=\"total,sizes,prev, pager, next, jumper\"\n            :current-page=\"query.currentPage\"\n            :page-sizes=\"[10, 20, 30, 50]\"\n            :total=\"totalNumber\"\n        ></el-pagination>\n        <!--分页模块end-->\n\n        <!--新增/编辑弹框start--333s-->\n        <el-dialog\n            :title=\"dialogAddOrEditName\"\n            :visible.sync=\"dialogAddOrEdit\"\n            width=\"30%\"\n            :before-close=\"hideDialogAddOrEdit\">\n            <el-form :model=\"formData\" :rules=\"rules\" ref=\"ruleForm\" label-width=\"100px\" class=\"demo-ruleForm\">\n                <el-form-item label=\"活动名称\" prop=\"username\">\n                    <el-input v-model=\"formData.username\"></el-input>\n                </el-form-item>\n            </el-form>\n            <span slot=\"footer\" class=\"dialog-footer\">\n    <el-button @click=\"dialogAddOrEdit = false\">取 消</el-button>\n    <el-button type=\"primary\" :loading=\"formSumbitLoding\" @click=\"formSumbit\">提交</el-button>\n  </span>\n        </el-dialog>\n        <!--新增/编辑弹框end--333e-->\n    </div>\n</template>\n<script>\n    import {getList} from \"../../api/mbuser/mbuser\";\n\n    /*用作表单的数据初始化*/\n    const formJson = {\n        username: \"\"\n    };\n\n    export default {\n        data() {\n            return {\n                pickerOptions: {//快速选择日期\n                    shortcuts: [\n                        {\n                            text: \"最近一周\",\n                            onClick(picker) {\n                                const end = new Date();\n                                const start = new Date();\n                                start.setTime(\n                                    start.getTime() - 3600 * 1000 * 24 * 7\n                                );\n                                picker.$emit(\"pick\", [start, end]);\n                            }\n                        },\n                        {\n                            text: \"最近一个月\",\n                            onClick(picker) {\n                                const end = new Date();\n                                const start = new Date();\n                                start.setTime(\n                                    start.getTime() - 3600 * 1000 * 24 * 30\n                                );\n                                picker.$emit(\"pick\", [start, end]);\n                            }\n                        },\n                        {\n                            text: \"最近三个月\",\n                            onClick(picker) {\n                                const end = new Date();\n                                const start = new Date();\n                                start.setTime(\n                                    start.getTime() - 3600 * 1000 * 24 * 90\n                                );\n                                picker.$emit(\"pick\", [start, end]);\n                            }\n                        },\n                        {\n                            text: \"最近六个月\",\n                            onClick(picker) {\n                                const end = new Date();\n                                const start = new Date();\n                                start.setTime(\n                                    start.getTime() - 3600 * 1000 * 24 * 180\n                                );\n                                picker.$emit(\"pick\", [start, end]);\n                            }\n                        }\n                    ]\n                },\n                query: {//查询条件\n                    startTime: \"\",\n                    endTime: \"\",\n                    currentPage: 1,\n                    pageSize: 10,\n                },\n                createTime:[],//选择日期时需要的model\n                list: [],//列表集合\n                totalNumber: 0,//分页总页数\n                loading: true,//列表加载\n                allLoding: false,//全屏加载\n                formSumbitLoding: false,//表单提交加载\n                cancelToggle: false,//列表是否全选\n                multipleSelection: [], //多选集合\n                dialogAddOrEdit: false,//新增或编辑弹框开关\n                dialogAddOrEditName: \"\",//新增或编辑弹框名字\n                formData: formJson,//新增或修改的对象\n                rules: {//表单校验\n                    username: [\n                        {required: true, message: '请输入姓名', trigger: 'blur'},\n                        {min: 3, max: 5, message: '长度在 3 到 5 个字符', trigger: 'blur'}\n                    ]\n                }\n            };\n        },\n        methods: {\n            /*获取列表事件*/\n            getList() {\n                this.loading = true;\n                getList(this.query).then(response => {\n                    if (response.code != 0) {\n                        this.$message.error(response.message);\n                        return false;\n                    }\n                    this.list = response.data.list || [];\n                    this.totalNumber = response.data.totalNumber || 0;\n                    setTimeout(() => {\n                        this.loading = false;\n                    }, 0.3 * 1000);\n                }).catch(() => {\n                    this.loading = false;\n                    this.list = [];\n                })\n            },\n\n            /*新增或者编辑提交事件*/\n            formSumbit() {\n                //表单校验通过\n                this.$refs[\"ruleForm\"].validate(valid => {\n                    if (valid) {\n                        this.formSumbitLoding = true;\n                        //提交操作\n                        setTimeout(() => {\n                            this.hideDialogAddOrEdit();\n                            this.$message.success(\"提交成功\");\n                            this.formSumbitLoding = false;\n                            this.getList();\n                        }, 1000);\n                    }\n                });\n                //new URLSearchParams(this.query)  提交数据格式不正确时可以转一下\n            },\n\n            /*列表查询条件事件*/\n            onSubmit() {\n                this.query.currentPage = 1;\n                this.$router.push({\n                    path: \"\",\n                    query: this.query\n                });\n                this.getList();\n            },\n\n            /*刷新*/\n            onRest() {\n                this.$router.push({\n                    path: \"\"\n                });\n                //刷新事件需要重置查询条件\n                this.createTime = [];\n                this.query = {\n                    currentPage: 1,\n                    pageSize: 10,\n                };\n                this.getList();\n            },\n\n            /*显示 -新增或者编辑弹框*/\n            showDialogAddOrEdit(index, row) {\n                this.dialogAddOrEdit = true;\n                this.formData = Object.assign({}, formJson);//将弹框内表单内容初始化\n                if (row !== null) {\n                    //如果row不为空，说明是修改，因为row是修改时携带过来此列的所有信息\n                    this.formData = Object.assign({}, row);//修改则将列内容深拷贝到表单内容中\n                    this.dialogAddOrEditName = \"编辑\";\n                } else {\n                    this.dialogAddOrEditName = \"新增\";\n                }\n            },\n\n            /*隐藏 -新增或编辑弹框*/\n            hideDialogAddOrEdit() {\n                this.dialogAddOrEdit = false;\n\n                //隐藏弹框时需要清除弹框内容\n                if (this.$refs[\"ruleForm\"]) {\n                    this.$refs['ruleForm'].resetFields();//清除formData表单\n                    this.$refs[\"ruleForm\"].clearValidate();//清除表单验证\n                }\n                //如果上传文件，还需要清除文件列表\n            },\n\n            /*点击页数*/\n            handleCurrentChange(val) {\n                this.query.currentPage = val;\n                this.getList();\n            },\n\n            /*选择每页条数【10,20,30,40,50】*/\n            handleSizeChange(val) {\n                this.query.pageSize = val;\n                this.getList();\n            },\n\n            /*取消全选事件*/\n            toggleSelection(rows) {\n                if (rows) {\n                    rows.forEach(row => {\n                        this.$refs.multipleTable.toggleRowSelection(row);\n                    });\n                } else {\n                    this.$refs.multipleTable.clearSelection();\n                }\n            },\n\n            /*列表复选框选择事件*/\n            handleSelectionChange(val) {\n                this.multipleSelection = val;\n                if (val == \"\") {\n                    this.cancelToggle = false;\n                    return;\n                }\n                this.cancelToggle = true;\n            },\n\n            /*全选删除事件*/\n            delGroup() {\n                console.log(this.multipleSelection)\n                var ids = this.multipleSelection.map(item => item.userid).join(); //获取所有选中行的id组成的字符串，以逗号分隔\n                if (ids == \"\") {\n                    this.$message({\n                        message: \"请先选择\",\n                        type: \"warning\"\n                    });\n                    return;\n                }\n                this.handleDel(ids);\n            },\n\n            /*单击删除事件*/\n            handleDel(ids) {\n                if (ids) {\n                    this.$confirm(\"确认要删除吗?\", \"提示\", {\n                        type: \"warning\"\n                    })\n                        .then(() => {\n                            this.$message.success(\"删除成功\");\n                            this.getList();\n                        })\n                        .catch(() => {\n                            this.$message.warning(\"已取消\");\n                        });\n                }\n            },\n\n            /*日期选择事件*/\n            dateChange(val) {\n                if (val == null) {\n                    this.query.startTime = \"\";\n                    this.query.endTime = \"\";\n                } else {\n                    this.query.startTime = val[0];\n                    this.query.endTime = val[1];\n                    this.query.currentPage = 1;\n                }\n                this.getList();\n                console.log(this.query)\n            },\n        }, created() {\n            // this.getList();\n        }\n    }\n    //跳转路由的方法\n    // this.$router.push({\n    //     path: \"\",\n    //     query:{\n    //         username:\"张三\"\n    //     }\n    // });\n    //接受路由传递的参数\n    //let query = this.$route.query;\n</script>\n"],"sourceRoot":"src\\views\\mbSoftware"}]}