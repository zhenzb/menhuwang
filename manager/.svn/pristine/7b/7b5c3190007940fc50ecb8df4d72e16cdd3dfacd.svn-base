{"remainingRequest":"E:\\qingyunjiudian\\manager\\node_modules\\thread-loader\\dist\\cjs.js!E:\\qingyunjiudian\\manager\\node_modules\\babel-loader\\lib\\index.js!E:\\qingyunjiudian\\manager\\node_modules\\eslint-loader\\index.js??ref--13-0!E:\\qingyunjiudian\\manager\\src\\store\\modules\\app.js","dependencies":[{"path":"E:\\qingyunjiudian\\manager\\src\\store\\modules\\app.js","mtime":1553328249060},{"path":"E:\\qingyunjiudian\\manager\\node_modules\\cache-loader\\dist\\cjs.js","mtime":1558690126701},{"path":"E:\\qingyunjiudian\\manager\\node_modules\\thread-loader\\dist\\cjs.js","mtime":1558690128857},{"path":"E:\\qingyunjiudian\\manager\\node_modules\\babel-loader\\lib\\index.js","mtime":1529635966000},{"path":"E:\\qingyunjiudian\\manager\\node_modules\\eslint-loader\\index.js","mtime":1519638534000}],"contextDependencies":[],"result":["import _defineProperty from \"E:\\\\qingyunjiudian\\\\manager\\\\node_modules\\\\@babel\\\\runtime/helpers/builtin/es6/defineProperty\";\nimport _slicedToArray from \"E:\\\\qingyunjiudian\\\\manager\\\\node_modules\\\\@babel\\\\runtime/helpers/builtin/es6/slicedToArray\";\nimport \"core-js/modules/es7.symbol.async-iterator\";\nimport \"core-js/modules/es6.symbol\";\nimport \"core-js/modules/es6.array.iterator\";\nimport \"core-js/modules/web.dom.iterable\";\nimport \"core-js/modules/es6.function.name\";\nimport _toConsumableArray from \"E:\\\\qingyunjiudian\\\\manager\\\\node_modules\\\\@babel\\\\runtime/helpers/builtin/es6/toConsumableArray\";\n\nvar _mutations;\n\nimport { getStore, setStore } from \"../../utils/store\";\nimport * as types from \"../mutation-types\";\nvar state = {\n  sidebar: {\n    opened: !+getStore(\"sidebarStatus\")\n  },\n  visitedViews: []\n}; // getters\n\nvar getters = {\n  sidebar: function sidebar(state) {\n    return state.sidebar;\n  },\n  visitedViews: function visitedViews(state) {\n    return state.visitedViews;\n  }\n}; // actions\n\nvar actions = {\n  ToggleSideBar: function ToggleSideBar(_ref) {\n    var commit = _ref.commit;\n    commit(types.TOGGLE_SIDEBAR);\n  },\n  ShowSideBar: function ShowSideBar(_ref2) {\n    var commit = _ref2.commit;\n    commit(types.SHOW_SIDEBAR);\n  },\n  addVisitedViews: function addVisitedViews(_ref3, view) {\n    var commit = _ref3.commit;\n    commit(types.ADD_VISITED_VIEWS, view);\n  },\n  delVisitedViews: function delVisitedViews(_ref4, view) {\n    var commit = _ref4.commit,\n        state = _ref4.state;\n    return new Promise(function (resolve) {\n      commit(types.DEL_VISITED_VIEWS, view);\n      resolve(_toConsumableArray(state.visitedViews));\n    });\n  }\n}; // mutations\n\nvar mutations = (_mutations = {}, _defineProperty(_mutations, types.TOGGLE_SIDEBAR, function (state) {\n  if (state.sidebar.opened) {\n    setStore(\"sidebarStatus\", 1, 365);\n  } else {\n    setStore(\"sidebarStatus\", 0, 365);\n  }\n\n  state.sidebar.opened = !state.sidebar.opened;\n}), _defineProperty(_mutations, types.SHOW_SIDEBAR, function (state) {\n  if (state.sidebar.opened) {\n    setStore(\"sidebarStatus\", 1, 365);\n  }\n\n  state.sidebar.opened = false;\n}), _defineProperty(_mutations, types.ADD_VISITED_VIEWS, function (state, view) {\n  if (state.visitedViews.some(function (v) {\n    return v.path === view.path;\n  })) return;\n  state.visitedViews.push({\n    name: view.name,\n    path: view.path\n  });\n}), _defineProperty(_mutations, types.DEL_VISITED_VIEWS, function (state, view) {\n  var index;\n  var _iteratorNormalCompletion = true;\n  var _didIteratorError = false;\n  var _iteratorError = undefined;\n\n  try {\n    for (var _iterator = state.visitedViews.entries()[Symbol.iterator](), _step; !(_iteratorNormalCompletion = (_step = _iterator.next()).done); _iteratorNormalCompletion = true) {\n      var _step$value = _slicedToArray(_step.value, 2),\n          i = _step$value[0],\n          v = _step$value[1];\n\n      if (v.path === view.path) {\n        index = i;\n        break;\n      }\n    }\n  } catch (err) {\n    _didIteratorError = true;\n    _iteratorError = err;\n  } finally {\n    try {\n      if (!_iteratorNormalCompletion && _iterator.return != null) {\n        _iterator.return();\n      }\n    } finally {\n      if (_didIteratorError) {\n        throw _iteratorError;\n      }\n    }\n  }\n\n  state.visitedViews.splice(index, 1);\n}), _mutations);\nexport default {\n  state: state,\n  getters: getters,\n  actions: actions,\n  mutations: mutations\n};",{"version":3,"sources":["src\\store\\modules\\app.js"],"names":["getStore","setStore","types","state","sidebar","opened","visitedViews","getters","actions","ToggleSideBar","commit","TOGGLE_SIDEBAR","ShowSideBar","SHOW_SIDEBAR","addVisitedViews","view","ADD_VISITED_VIEWS","delVisitedViews","Promise","DEL_VISITED_VIEWS","resolve","mutations","some","v","path","push","name","index","entries","i","splice"],"mappings":";;;;;;;;;;;AAAA,SAASA,QAAT,EAAmBC,QAAnB,QAAmC,mBAAnC;AACA,OAAO,KAAKC,KAAZ,MAAuB,mBAAvB;AAEA,IAAMC,QAAQ;AACVC,WAAS;AACLC,YAAQ,CAAC,CAACL,SAAS,eAAT;AADL,GADC;AAIVM,gBAAc;AAJJ,CAAd,C,CAOA;;AACA,IAAMC,UAAU;AACZH,WAAS;AAAA,WAASD,MAAMC,OAAf;AAAA,GADG;AAEZE,gBAAc;AAAA,WAASH,MAAMG,YAAf;AAAA;AAFF,CAAhB,C,CAKA;;AACA,IAAME,UAAU;AACZC,eADY,+BACc;AAAA,QAAVC,MAAU,QAAVA,MAAU;AACtBA,WAAOR,MAAMS,cAAb;AACH,GAHW;AAIZC,aAJY,8BAIY;AAAA,QAAVF,MAAU,SAAVA,MAAU;AACpBA,WAAOR,MAAMW,YAAb;AACH,GANW;AAOZC,iBAPY,kCAOgBC,IAPhB,EAOsB;AAAA,QAAhBL,MAAgB,SAAhBA,MAAgB;AAC9BA,WAAOR,MAAMc,iBAAb,EAAgCD,IAAhC;AACH,GATW;AAUZE,iBAVY,kCAUuBF,IAVvB,EAU6B;AAAA,QAAvBL,MAAuB,SAAvBA,MAAuB;AAAA,QAAfP,KAAe,SAAfA,KAAe;AACrC,WAAO,IAAIe,OAAJ,CAAY,mBAAW;AAC1BR,aAAOR,MAAMiB,iBAAb,EAAgCJ,IAAhC;AACAK,iCAAYjB,MAAMG,YAAlB;AACH,KAHM,CAAP;AAIH;AAfW,CAAhB,C,CAkBA;;AACA,IAAMe,0DACDnB,MAAMS,cADL,YACqBR,KADrB,EAC4B;AAC1B,MAAIA,MAAMC,OAAN,CAAcC,MAAlB,EAA0B;AACtBJ,aAAS,eAAT,EAA0B,CAA1B,EAA6B,GAA7B;AACH,GAFD,MAEO;AACHA,aAAS,eAAT,EAA0B,CAA1B,EAA6B,GAA7B;AACH;;AACDE,QAAMC,OAAN,CAAcC,MAAd,GAAuB,CAACF,MAAMC,OAAN,CAAcC,MAAtC;AACH,CARC,+BASDH,MAAMW,YATL,YASmBV,KATnB,EAS0B;AACxB,MAAIA,MAAMC,OAAN,CAAcC,MAAlB,EAA0B;AACtBJ,aAAS,eAAT,EAA0B,CAA1B,EAA6B,GAA7B;AACH;;AACDE,QAAMC,OAAN,CAAcC,MAAd,GAAuB,KAAvB;AACH,CAdC,+BAeDH,MAAMc,iBAfL,YAewBb,KAfxB,EAe+BY,IAf/B,EAeqC;AACnC,MAAIZ,MAAMG,YAAN,CAAmBgB,IAAnB,CAAwB;AAAA,WAAKC,EAAEC,IAAF,KAAWT,KAAKS,IAArB;AAAA,GAAxB,CAAJ,EAAwD;AACxDrB,QAAMG,YAAN,CAAmBmB,IAAnB,CAAwB;AAAEC,UAAMX,KAAKW,IAAb;AAAmBF,UAAMT,KAAKS;AAA9B,GAAxB;AACH,CAlBC,+BAmBDtB,MAAMiB,iBAnBL,YAmBwBhB,KAnBxB,EAmB+BY,IAnB/B,EAmBqC;AACnC,MAAIY,KAAJ;AADmC;AAAA;AAAA;;AAAA;AAEnC,yBAAqBxB,MAAMG,YAAN,CAAmBsB,OAAnB,EAArB,8HAAmD;AAAA;AAAA,UAAvCC,CAAuC;AAAA,UAApCN,CAAoC;;AAC/C,UAAIA,EAAEC,IAAF,KAAWT,KAAKS,IAApB,EAA0B;AACtBG,gBAAQE,CAAR;AACA;AACH;AACJ;AAPkC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;;AAQnC1B,QAAMG,YAAN,CAAmBwB,MAAnB,CAA0BH,KAA1B,EAAiC,CAAjC;AACH,CA5BC,cAAN;AA+BA,eAAe;AACXxB,cADW;AAEXI,kBAFW;AAGXC,kBAHW;AAIXa;AAJW,CAAf","sourceRoot":"E:\\qingyunjiudian\\manager","sourcesContent":["import { getStore, setStore } from \"../../utils/store\";\r\nimport * as types from \"../mutation-types\";\r\n\r\nconst state = {\r\n    sidebar: {\r\n        opened: !+getStore(\"sidebarStatus\")\r\n    },\r\n    visitedViews: []\r\n};\r\n\r\n// getters\r\nconst getters = {\r\n    sidebar: state => state.sidebar,\r\n    visitedViews: state => state.visitedViews\r\n};\r\n\r\n// actions\r\nconst actions = {\r\n    ToggleSideBar({ commit }) {\r\n        commit(types.TOGGLE_SIDEBAR);\r\n    },\r\n    ShowSideBar({ commit }) {\r\n        commit(types.SHOW_SIDEBAR);\r\n    },\r\n    addVisitedViews({ commit }, view) {\r\n        commit(types.ADD_VISITED_VIEWS, view);\r\n    },\r\n    delVisitedViews({ commit, state }, view) {\r\n        return new Promise(resolve => {\r\n            commit(types.DEL_VISITED_VIEWS, view);\r\n            resolve([...state.visitedViews]);\r\n        });\r\n    }\r\n};\r\n\r\n// mutations\r\nconst mutations = {\r\n    [types.TOGGLE_SIDEBAR](state) {\r\n        if (state.sidebar.opened) {\r\n            setStore(\"sidebarStatus\", 1, 365);\r\n        } else {\r\n            setStore(\"sidebarStatus\", 0, 365);\r\n        }\r\n        state.sidebar.opened = !state.sidebar.opened;\r\n    },\r\n    [types.SHOW_SIDEBAR](state) {\r\n        if (state.sidebar.opened) {\r\n            setStore(\"sidebarStatus\", 1, 365);\r\n        }\r\n        state.sidebar.opened = false;\r\n    },\r\n    [types.ADD_VISITED_VIEWS](state, view) {\r\n        if (state.visitedViews.some(v => v.path === view.path)) return;\r\n        state.visitedViews.push({ name: view.name, path: view.path });\r\n    },\r\n    [types.DEL_VISITED_VIEWS](state, view) {\r\n        let index;\r\n        for (const [i, v] of state.visitedViews.entries()) {\r\n            if (v.path === view.path) {\r\n                index = i;\r\n                break;\r\n            }\r\n        }\r\n        state.visitedViews.splice(index, 1);\r\n    }\r\n};\r\n\r\nexport default {\r\n    state,\r\n    getters,\r\n    actions,\r\n    mutations\r\n};\r\n"]}]}