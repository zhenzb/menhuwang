{"remainingRequest":"E:\\qingyunjiudian\\manager\\node_modules\\thread-loader\\dist\\cjs.js!E:\\qingyunjiudian\\manager\\node_modules\\babel-loader\\lib\\index.js!E:\\qingyunjiudian\\manager\\node_modules\\eslint-loader\\index.js??ref--13-0!E:\\qingyunjiudian\\manager\\src\\store\\modules\\admin.js","dependencies":[{"path":"E:\\qingyunjiudian\\manager\\src\\store\\modules\\admin.js","mtime":1556584758650},{"path":"E:\\qingyunjiudian\\manager\\node_modules\\cache-loader\\dist\\cjs.js","mtime":1558690126701},{"path":"E:\\qingyunjiudian\\manager\\node_modules\\thread-loader\\dist\\cjs.js","mtime":1558690128857},{"path":"E:\\qingyunjiudian\\manager\\node_modules\\babel-loader\\lib\\index.js","mtime":1529635966000},{"path":"E:\\qingyunjiudian\\manager\\node_modules\\eslint-loader\\index.js","mtime":1519638534000}],"contextDependencies":[],"result":["import _defineProperty from \"E:\\\\qingyunjiudian\\\\manager\\\\node_modules\\\\@babel\\\\runtime/helpers/builtin/es6/defineProperty\";\n\nvar _mutations;\n\nimport { userInfo as _userInfo, loginName as _loginName, logout } from \"../../api/auth/login\";\nimport * as types from \"../mutation-types\";\nimport { constantRouterMap } from \"../../router\";\nimport { getToken, setToken, removeToken, getAdminId, setAdminId, removeAdminId } from \"../../utils/auth\"; // import { $NOT_NETWORK } from '../../utils/errorCode'\n\nimport { Message } from \"element-ui\"; // initial state\n\nvar state = {\n  adminId: getAdminId(),\n  // id\n  userName: \"\",\n  // 昵称\n  avatar: \"\",\n  // 头像\n  token: getToken(),\n  // 登录token\n  authRules: [],\n  // 权限列表\n  routers: constantRouterMap // 路由列表\n\n}; // getters\n\nvar getters = {\n  adminId: function adminId(state) {\n    return state.adminId;\n  },\n  userName: function userName(state) {\n    return state.userName;\n  },\n  avatar: function avatar(state) {\n    return state.avatar;\n  },\n  token: function token(state) {\n    return state.token;\n  },\n  authRules: function authRules(state) {\n    return state.authRules;\n  },\n  routers: function routers(state) {\n    return state.routers;\n  }\n}; // actions\n\nvar actions = {\n  // 用户名登录\n  loginName: function loginName(_ref, userInfo) {\n    var commit = _ref.commit;\n    var username = userInfo.username ? userInfo.username.trim() : \"\";\n    var pwd = userInfo.pwd ? userInfo.pwd : \"\";\n    return new Promise(function (resolve, reject) {\n      _loginName(username, pwd).then(function (response) {\n        if (response.code) {\n          Message({\n            message: response.message,\n            type: \"error\",\n            duration: 5 * 1000\n          });\n        } else {\n          var data = response.data;\n          commit(types.RECEIVE_ADMIN_ID, data.id);\n          commit(types.RECEIVE_ADMIN_TOKEN, data.token);\n          commit(types.RECEIVE_ADMIN_AUTH_RULES, []);\n        }\n\n        resolve(response);\n      }).catch(function (error) {\n        reject(error);\n      });\n    });\n  },\n  userInfo: function userInfo(_ref2) {\n    var commit = _ref2.commit;\n    return new Promise(function (resolve, reject) {\n      _userInfo().then(function (response) {\n        var data = response.data || {};\n        commit(types.RECEIVE_ADMIN_NAME, data.username);\n        commit(types.RECEIVE_ADMIN_AVATAR, data.avatar);\n        commit(types.RECEIVE_ADMIN_AUTH_RULES, data.authRules);\n        resolve(data);\n      }).catch(function (error) {\n        reject(error);\n      });\n    });\n  },\n  // 登出\n  loginOut: function loginOut(_ref3) {\n    var commit = _ref3.commit;\n    return new Promise(function (resolve, reject) {\n      logout().then(function () {\n        commit(types.RECEIVE_ADMIN_ID, \"\");\n        commit(types.RECEIVE_ADMIN_TOKEN, \"\");\n        commit(types.RECEIVE_ADMIN_AUTH_RULES, []);\n        resolve();\n      }).catch(function (error) {\n        reject(error);\n      });\n    });\n  },\n  // 前端 登出\n  fedLogout: function fedLogout(_ref4) {\n    var commit = _ref4.commit;\n    return new Promise(function (resolve) {\n      commit(types.RECEIVE_ADMIN_ID, \"\");\n      commit(types.RECEIVE_ADMIN_TOKEN, \"\");\n      commit(types.RECEIVE_ADMIN_AUTH_RULES, []);\n      resolve();\n    });\n  },\n\n  /**\r\n   * 过滤路由列表\r\n   * @param commit\r\n   * @param data\r\n   * @returns {Promise}\r\n   */\n  filterRouter: function filterRouter(_ref5, data) {\n    var commit = _ref5.commit;\n    var accessedRouters = data.accessedRouters;\n\n    if (accessedRouters && accessedRouters.length > 0) {\n      commit(types.RECEIVE_ROUTERS, accessedRouters);\n    }\n  }\n}; // mutations\n\nvar mutations = (_mutations = {}, _defineProperty(_mutations, types.RECEIVE_ADMIN_ID, function (state, adminId) {\n  state.adminId = adminId;\n\n  if (adminId === \"\") {\n    removeAdminId();\n  } else {\n    setAdminId(adminId);\n  }\n}), _defineProperty(_mutations, types.RECEIVE_ADMIN_TOKEN, function (state, token) {\n  state.token = token;\n\n  if (token === \"\") {\n    removeToken();\n  } else {\n    setToken(token);\n  }\n}), _defineProperty(_mutations, types.RECEIVE_ADMIN_NAME, function (state, userName) {\n  state.userName = userName;\n}), _defineProperty(_mutations, types.RECEIVE_ADMIN_AVATAR, function (state, avatar) {\n  state.avatar = avatar;\n}), _defineProperty(_mutations, types.RECEIVE_ADMIN_AUTH_RULES, function (state, authRules) {\n  state.authRules = authRules;\n}), _defineProperty(_mutations, types.RECEIVE_ROUTERS, function (state, routers) {\n  var tempRm = constantRouterMap.concat(routers);\n  state.routers = JSON.parse(JSON.stringify(tempRm));\n}), _mutations);\nexport default {\n  state: state,\n  getters: getters,\n  actions: actions,\n  mutations: mutations\n};",{"version":3,"sources":["src\\store\\modules\\admin.js"],"names":["userInfo","loginName","logout","types","constantRouterMap","getToken","setToken","removeToken","getAdminId","setAdminId","removeAdminId","Message","state","adminId","userName","avatar","token","authRules","routers","getters","actions","commit","username","trim","pwd","Promise","resolve","reject","then","response","code","message","type","duration","data","RECEIVE_ADMIN_ID","id","RECEIVE_ADMIN_TOKEN","RECEIVE_ADMIN_AUTH_RULES","catch","error","RECEIVE_ADMIN_NAME","RECEIVE_ADMIN_AVATAR","loginOut","fedLogout","filterRouter","accessedRouters","length","RECEIVE_ROUTERS","mutations","tempRm","concat","JSON","parse","stringify"],"mappings":"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","sourceRoot":"E:\\qingyunjiudian\\manager","sourcesContent":["import { userInfo, loginName, logout } from \"../../api/auth/login\";\r\nimport * as types from \"../mutation-types\";\r\nimport { constantRouterMap } from \"../../router\";\r\nimport {\r\n    getToken,\r\n    setToken,\r\n    removeToken,\r\n    getAdminId,\r\n    setAdminId,\r\n    removeAdminId\r\n} from \"../../utils/auth\";\r\n// import { $NOT_NETWORK } from '../../utils/errorCode'\r\nimport { Message } from \"element-ui\";\r\n\r\n// initial state\r\nconst state = {\r\n    adminId: getAdminId(), // id\r\n    userName: \"\", // 昵称\r\n    avatar: \"\", // 头像\r\n    token: getToken(), // 登录token\r\n    authRules: [], // 权限列表\r\n    routers: constantRouterMap // 路由列表\r\n};\r\n\r\n// getters\r\nconst getters = {\r\n    adminId: state => state.adminId,\r\n    userName: state => state.userName,\r\n    avatar: state => state.avatar,\r\n    token: state => state.token,\r\n    authRules: state => state.authRules,\r\n    routers: state => state.routers\r\n};\r\n\r\n// actions\r\nconst actions = {\r\n    // 用户名登录\r\n    loginName({ commit }, userInfo) {\r\n        const username = userInfo.username ? userInfo.username.trim() : \"\";\r\n        const pwd = userInfo.pwd ? userInfo.pwd : \"\";\r\n        return new Promise((resolve, reject) => {\r\n            loginName(username, pwd)\r\n                .then(response => {\r\n                    if (response.code) {\r\n                        Message({\r\n                            message: response.message,\r\n                            type: \"error\",\r\n                            duration: 5 * 1000\r\n                        });\r\n                    } else {\r\n                        let data = response.data;\r\n                        commit(types.RECEIVE_ADMIN_ID, data.id);\r\n                        commit(types.RECEIVE_ADMIN_TOKEN, data.token);\r\n                        commit(types.RECEIVE_ADMIN_AUTH_RULES, []);\r\n                    }\r\n                    resolve(response);\r\n                })\r\n                .catch(error => {\r\n                    reject(error);\r\n                });\r\n        });\r\n    },\r\n    userInfo({ commit }) {\r\n        return new Promise((resolve, reject) => {\r\n            userInfo()\r\n                .then(response => {\r\n                    const data = response.data || {};\r\n                    commit(types.RECEIVE_ADMIN_NAME, data.username);\r\n                    commit(types.RECEIVE_ADMIN_AVATAR, data.avatar);\r\n                    commit(types.RECEIVE_ADMIN_AUTH_RULES, data.authRules);\r\n                    resolve(data);\r\n                })\r\n                .catch(error => {\r\n                    reject(error);\r\n                });\r\n        });\r\n    },\r\n    // 登出\r\n    loginOut({ commit }) {\r\n        return new Promise((resolve, reject) => {\r\n            logout()\r\n                .then(() => {\r\n                    commit(types.RECEIVE_ADMIN_ID, \"\");\r\n                    commit(types.RECEIVE_ADMIN_TOKEN, \"\");\r\n                    commit(types.RECEIVE_ADMIN_AUTH_RULES, []);\r\n                    resolve();\r\n                })\r\n                .catch(error => {\r\n                    reject(error);\r\n                });\r\n        });\r\n    },\r\n\r\n    // 前端 登出\r\n    fedLogout({ commit }) {\r\n        return new Promise(resolve => {\r\n            commit(types.RECEIVE_ADMIN_ID, \"\");\r\n            commit(types.RECEIVE_ADMIN_TOKEN, \"\");\r\n            commit(types.RECEIVE_ADMIN_AUTH_RULES, []);\r\n            resolve();\r\n        });\r\n    },\r\n    /**\r\n     * 过滤路由列表\r\n     * @param commit\r\n     * @param data\r\n     * @returns {Promise}\r\n     */\r\n    filterRouter({ commit }, data) {\r\n        const { accessedRouters } = data;\r\n        if (accessedRouters && accessedRouters.length > 0) {\r\n            commit(types.RECEIVE_ROUTERS, accessedRouters);\r\n        }\r\n    }\r\n};\r\n\r\n// mutations\r\nconst mutations = {\r\n    [types.RECEIVE_ADMIN_ID](state, adminId) {\r\n        state.adminId = adminId;\r\n        if (adminId === \"\") {\r\n            removeAdminId();\r\n        } else {\r\n            setAdminId(adminId);\r\n        }\r\n    },\r\n    [types.RECEIVE_ADMIN_TOKEN](state, token) {\r\n        state.token = token;\r\n        if (token === \"\") {\r\n            removeToken();\r\n        } else {\r\n            setToken(token);\r\n        }\r\n    },\r\n    [types.RECEIVE_ADMIN_NAME](state, userName) {\r\n        state.userName = userName;\r\n    },\r\n    [types.RECEIVE_ADMIN_AVATAR](state, avatar) {\r\n        state.avatar = avatar;\r\n    },\r\n    [types.RECEIVE_ADMIN_AUTH_RULES](state, authRules) {\r\n        state.authRules = authRules;\r\n    },\r\n    [types.RECEIVE_ROUTERS](state, routers) {\r\n        const tempRm = constantRouterMap.concat(routers);\r\n        state.routers = JSON.parse(JSON.stringify(tempRm));\r\n    }\r\n};\r\n\r\nexport default {\r\n    state,\r\n    getters,\r\n    actions,\r\n    mutations\r\n};\r\n"]}]}