{"remainingRequest":"E:\\mijia\\manager\\node_modules\\babel-loader\\lib\\index.js!E:\\mijia\\manager\\node_modules\\vue-loader\\lib\\index.js??vue-loader-options!E:\\mijia\\manager\\src\\views\\userManage\\admin\\authAdmin.vue?vue&type=script&lang=js","dependencies":[{"path":"E:\\mijia\\manager\\src\\views\\userManage\\admin\\authAdmin.vue","mtime":1566377506085},{"path":"E:\\mijia\\manager\\node_modules\\cache-loader\\dist\\cjs.js","mtime":1558690126701},{"path":"E:\\mijia\\manager\\node_modules\\babel-loader\\lib\\index.js","mtime":1529635966000},{"path":"E:\\mijia\\manager\\node_modules\\vue-loader\\lib\\index.js","mtime":1527860006000}],"contextDependencies":[],"result":["import \"core-js/modules/es6.object.assign\";\nimport \"core-js/modules/es6.regexp.split\";\nimport \"core-js/modules/web.dom.iterable\";\nimport \"core-js/modules/es6.promise\";\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\nimport { authAdminList, authAdminRoleList, authAdminSave, authAdminDelete } from \"../../../api/auth/authAdmin\";\nvar formJson = {\n  id: \"\",\n  password: \"\",\n  username: \"\",\n  checkPassword: \"\",\n  status: 1,\n  roles: []\n};\nexport default {\n  data: function data() {\n    var _this = this;\n\n    var validatePass = function validatePass(rule, value, callback) {\n      if (value === \"\") {\n        callback(new Error(\"请输入密码\"));\n      } else {\n        callback();\n      }\n    };\n\n    var validatePass2 = function validatePass2(rule, value, callback) {\n      if (value === \"\") {\n        callback(new Error(\"请再次输入密码\"));\n      } else if (value !== _this.formData.password) {\n        callback(new Error(\"两次输入密码不一致!\"));\n      } else {\n        callback();\n      }\n    };\n\n    var validatePass3 = function validatePass3(rule, value, callback) {\n      if (_this.formData.password !== \"\" && value === \"\") {\n        callback(new Error(\"请再次输入密码\"));\n      } else if (value !== _this.formData.password) {\n        callback(new Error(\"两次输入密码不一致!\"));\n      } else {\n        callback();\n      }\n    };\n\n    var validatePass4 = function validatePass4(rule, value, callback) {\n      if (value === \"\" && _this.formData.checkPassword !== \"\") {\n        callback(new Error(\"请输入密码\"));\n      } else {\n        callback();\n      }\n    };\n\n    return {\n      roles: [],\n      query: {\n        username: \"\",\n        status: \"\",\n        currentPage: 1,\n        pageSize: 10,\n        roleId: \"\"\n      },\n      list: [],\n      totalNumber: 0,\n      loading: true,\n      index: null,\n      formName: null,\n      formMap: {\n        add: \"添加\",\n        edit: \"编辑\"\n      },\n      cancelToggle: false,\n      formLoading: false,\n      formVisible: false,\n      formData: formJson,\n      formRules: {},\n      addRules: {\n        username: [{\n          required: true,\n          message: \"请输入用户名\",\n          trigger: \"blur\"\n        }, {\n          min: 5,\n          max: 20,\n          message: \"账号最少字符5，最大20\",\n          trigger: \"blur\"\n        }],\n        password: [{\n          required: true,\n          message: \"请输入密码\",\n          trigger: \"blur\"\n        }, {\n          validator: validatePass,\n          trigger: \"blur\"\n        }],\n        checkPassword: [{\n          required: true,\n          message: \"请再次输入密码\",\n          trigger: \"blur\"\n        }, {\n          validator: validatePass2,\n          trigger: \"blur\"\n        }],\n        status: [{\n          required: true,\n          message: \"请选择状态\",\n          trigger: \"change\"\n        }]\n      },\n      editRules: {\n        username: [{\n          required: true,\n          message: \"请输入用户名\",\n          trigger: \"blur\"\n        }],\n        password: [{\n          validator: validatePass4,\n          trigger: \"blur\"\n        }],\n        checkPassword: [{\n          validator: validatePass3,\n          trigger: \"blur\"\n        }],\n        status: [{\n          required: true,\n          message: \"请选择状态\",\n          trigger: \"change\"\n        }]\n      },\n      multipleSelection: [] //多选集合\n\n    };\n  },\n  methods: {\n    toggleSelection: function toggleSelection(rows) {\n      var _this2 = this;\n\n      if (rows) {\n        rows.forEach(function (row) {\n          _this2.$refs.multipleTable.toggleRowSelection(row);\n        });\n      } else {\n        this.$refs.multipleTable.clearSelection();\n      }\n    },\n    handleSelectionChange: function handleSelectionChange(val) {\n      this.multipleSelection = val;\n\n      if (val == \"\") {\n        this.cancelToggle = false;\n        return;\n      }\n\n      this.cancelToggle = true;\n    },\n    delGroup: function delGroup() {\n      var ids = this.multipleSelection.map(function (item) {\n        return item.id;\n      }).join(); //获取所有选中行的id组成的字符串，以逗号分隔\n\n      var idss = ids.split(\",\");\n\n      for (var i = 0; i < idss.length; i++) {\n        if (\"1\" === idss[i]) {\n          this.$message({\n            message: \"不能删除管理员\",\n            type: \"warning\"\n          });\n          return;\n        }\n      }\n\n      if (ids == \"\") {\n        this.$message({\n          message: \"请先选择\",\n          type: \"warning\"\n        });\n        return;\n      }\n\n      this.handleDel(ids);\n    },\n    onRest: function onRest() {\n      this.$router.push({\n        path: \"\"\n      });\n      this.query = {\n        username: \"\",\n        status: \"\",\n        currentPage: 1,\n        pageSize: 10,\n        roleId: \"\"\n      };\n      this.getList();\n    },\n    onSubmit: function onSubmit() {\n      this.query.currentPage = 1;\n      this.$router.push({\n        path: \"\" //query: this.query\n\n      });\n      this.getList();\n    },\n    handleCurrentChange: function handleCurrentChange(val) {\n      this.query.currentPage = val; //scrollTo(0, 800);\n\n      this.getList();\n    },\n    handleSizeChange: function handleSizeChange(val) {\n      this.query.pageSize = val;\n      this.getList();\n    },\n    getList: function getList() {\n      var _this3 = this;\n\n      this.loading = true;\n      authAdminList(this.query).then(function (response) {\n        if (response.code) {\n          _this3.$message.error(response.message);\n        }\n\n        _this3.list = response.data.list || [];\n        _this3.totalNumber = response.data.totalNumber || 0;\n        setTimeout(function () {\n          _this3.loading = false;\n        }, 0.3 * 1000);\n      }).catch(function () {\n        _this3.loading = false;\n        _this3.list = [];\n        _this3.totalNumber = 0;\n        _this3.roles = [];\n      });\n    },\n    getRoleList: function getRoleList() {\n      var _this4 = this;\n\n      authAdminRoleList(this.query).then(function (response) {\n        if (response.code) {\n          _this4.$message.error(response.message);\n\n          return false;\n        }\n\n        _this4.roles = response.data.list || [];\n      }).catch(function () {});\n    },\n    // 隐藏表单\n    hideForm: function hideForm() {\n      // 更改值\n      this.formVisible = !this.formVisible; // 清空表单\n\n      this.$refs[\"dataForm\"].resetFields();\n      return true;\n    },\n    // 显示表单\n    handleForm: function handleForm(index, row) {\n      this.formVisible = true;\n      this.formData = Object.assign({}, formJson);\n\n      if (row !== null) {\n        this.formData = Object.assign({}, row);\n      }\n\n      this.formName = \"add\";\n      this.formRules = this.addRules; //编辑\n\n      if (index !== null) {\n        this.index = index;\n        this.formName = \"edit\";\n        this.formRules = this.editRules;\n      } // 清空验证信息表单\n\n\n      if (this.$refs[\"dataForm\"]) {\n        this.$refs[\"dataForm\"].clearValidate();\n      }\n    },\n    formSubmit: function formSubmit() {\n      var _this5 = this;\n\n      this.$refs[\"dataForm\"].validate(function (valid) {\n        if (valid) {\n          _this5.formLoading = true;\n          var data = Object.assign({}, _this5.formData);\n          authAdminSave(data, _this5.formName).then(function (response) {\n            _this5.formLoading = false;\n\n            if (response.code) {\n              _this5.$message.error(response.message);\n\n              return false;\n            }\n\n            _this5.$message.success(\"操作成功\"); // 向头部添加数据\n            // this.list.unshift(res)\n            // if (this.formName === \"add\") {\n            //     // 向头部添加数据\n            //     let resData = response.data || {};\n            //     this.list.unshift(resData);\n            // } else {\n            //     this.list.splice(this.index, 1, data);\n            // }\n            // 刷新表单\n\n\n            _this5.$refs[\"dataForm\"].resetFields();\n\n            _this5.formVisible = false;\n\n            _this5.getList();\n          });\n        }\n      });\n    },\n    // 删除\n    handleDel: function handleDel(ids) {\n      var _this6 = this;\n\n      if (ids) {\n        this.$confirm(\"确认要删除吗?\", \"提示\", {\n          type: \"warning\"\n        }).then(function () {\n          _this6.loading = true;\n          var para = {\n            ids: ids\n          };\n          authAdminDelete(para).then(function (response) {\n            _this6.loading = false;\n\n            if (response.code) {\n              _this6.$message.error(response.message);\n\n              return false;\n            }\n\n            _this6.$message.success(\"删除成功\"); //返回第一页\n\n\n            _this6.query.currentPage = 1; // 刷新数据\n\n            _this6.getList();\n          }).catch(function () {\n            _this6.loading = false;\n          });\n        }).catch(function () {});\n      }\n    }\n  },\n  filters: {\n    statusFilterType: function statusFilterType(status) {\n      var statusMap = {\n        0: \"gray\",\n        1: \"success\",\n        2: \"danger\"\n      };\n      return statusMap[status];\n    },\n    statusFilterName: function statusFilterName(status) {\n      var statusMap = {\n        0: \"禁用\",\n        1: \"正常\" // 2: \"未验证\"\n\n      };\n      return statusMap[status];\n    }\n  },\n  mounted: function mounted() {},\n  created: function created() {\n    // 将参数拷贝进查询对象\n    var query = this.$route.query;\n    this.query = Object.assign(this.query, query);\n    this.query.pageSize = parseInt(this.query.pageSize); // 加载表格数据\n\n    this.getList(); // 加载角色列表\n\n    this.getRoleList();\n  }\n};",{"version":3,"sources":["authAdmin.vue"],"names":[],"mappings":"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","sourcesContent":["<template>\n  <div style=\"width: 95%; margin-left: 2%;\">\n    <el-form :inline=\"true\" :model=\"query\" class=\"query-form\" size=\"small\">\n      <el-form-item class=\"query-form-item\">\n        <el-input\n          v-model=\"query.username\"\n          placeholder=\"请输入用户名\"\n          prefix-icon=\"el-icon-search\"\n          @keyup.enter.native=\"onSubmit\"\n          clearable\n        ></el-input>\n      </el-form-item>\n      <el-form-item class=\"query-form-item\">\n        <el-select v-model=\"query.status\" placeholder=\"请选择状态\" @change=\"onSubmit\" clearable>\n          <el-option label=\"全部\" value></el-option>\n          <el-option label=\"禁用\" value=\"0\"></el-option>\n          <el-option label=\"正常\" value=\"1\"></el-option>\n<!--          <el-option label=\"未验证\" value=\"2\"></el-option>-->\n        </el-select>\n      </el-form-item>\n      <el-form-item class=\"query-form-item\">\n        <el-select v-model=\"query.roleId\" placeholder=\"请选择角色\" @change=\"onSubmit\" clearable>\n          <el-option label=\"全部角色\" value></el-option>\n          <el-option v-for=\"item in roles\" :key=\"item.id\" :label=\"item.name\" :value=\"item.id\"></el-option>\n        </el-select>\n      </el-form-item>\n      <el-form-item>\n        <el-button type=\"primary\" icon=\"el-icon-refresh\" @click=\"onRest\">刷新</el-button>\n        <el-button type=\"primary\" icon=\"el-icon-search\" @click=\"onSubmit\">查询</el-button>\n        <el-button type=\"primary\" icon=\"el-icon-edit\" @click.native=\"handleForm(null,null)\">添加</el-button>\n      </el-form-item>\n    </el-form>\n    <!-- <el-scrollbar class=\"table-scrollbar\" wrap-style=\"overflow-x: hidden;\"> -->\n    <el-table\n      ref=\"multipleTable\"\n      v-loading=\"loading\"\n      :data=\"list\"\n      :header-cell-style=\"{background:'#F4F4F5',color:'#606266'}\"\n      @selection-change=\"handleSelectionChange\"\n      border\n    >\n      <el-table-column type=\"selection\" width=\"50\" align=\"center\" fixed/>\n      <el-table-column label=\"用户 ID\" prop=\"id\" width=\"80\" align=\"center\"/>\n      <el-table-column label=\"用户名\" prop=\"username\" align=\"center\"/>\n      <el-table-column label=\"状态\" align=\"center\" width=\"100\">\n        <template slot-scope=\"scope\">\n          <el-tag\n            :type=\"scope.row.status | statusFilterType\"\n          >{{scope.row.status | statusFilterName}}</el-tag>\n        </template>\n      </el-table-column>\n      <el-table-column label=\"登录时间\" with=\"300\" :show-overflow-tooltip=\"true\" align=\"center\">\n        <template slot-scope=\"scope\">\n          <i class=\"el-icon-time\" v-if=\"scope.row.lastLoginTime!=null\"></i>\n          <span\n            v-if=\"scope.row.lastLoginTime!=null\"\n          >{{ scope.row.lastLoginTime | formatDateStr('yyyy-MM-dd hh:mm:ss') }}</span>\n          <span v-else>暂未登录</span>\n        </template>\n      </el-table-column>\n      <el-table-column label=\"登录IP\" align=\"center\">\n        <template slot-scope=\"scope\">\n          <span v-if=\"scope.row.lastLoginTime!=null\">{{ scope.row.lastLoginIp }}</span>\n          <span v-else>暂未登录</span>\n        </template>\n      </el-table-column>\n      <el-table-column label=\"操作\" align=\"center\">\n        <template slot-scope=\"scope\">\n          <el-button\n            type=\"primary\"\n            size=\"mini\"\n            @click.native=\"handleForm(scope.$index, scope.row)\"\n          >编辑</el-button>\n          <el-button\n            type=\"danger\"\n            size=\"mini\"\n            :disabled=\"scope.row.id!=1?false:true\"\n            @click.native=\"handleDel(scope.row.id)\"\n          >删除</el-button>\n        </template>\n      </el-table-column>\n    </el-table>\n    <div class=\"left-container\">\n      <el-button type=\"danger\" size=\"small\" @click=\"delGroup()\">删除已选</el-button>\n      <transition name=\"el-fade-in-linear\">\n        <el-button size=\"small\" @click=\"toggleSelection()\" v-show=\"cancelToggle\">取消选择</el-button>\n      </transition>\n    </div>\n    <el-pagination\n      class=\"pagination-container\"\n      background\n      :page-size=\"query.pageSize\"\n      @size-change=\"handleSizeChange\"\n      @current-change=\"handleCurrentChange\"\n      layout=\"total,sizes,prev, pager, next, jumper\"\n      :current-page=\"this.query.currentPage\"\n      :page-sizes=\"[10, 20, 30, 50]\"\n      :total=\"totalNumber\"\n    ></el-pagination>\n    <!-- </el-scrollbar> -->\n    <!--表单-->\n    <el-dialog\n      :title=\"formMap[formName]\"\n      :visible.sync=\"formVisible\"\n      :before-close=\"hideForm\"\n      width=\"1000px\"\n      top=\"5vh\"\n      v-dialogDrag\n    >\n      <el-form :model=\"formData\" :rules=\"formRules\" ref=\"dataForm\">\n        <el-form-item label=\"用户名\" prop=\"username\">\n          <el-input v-model=\"formData.username\" auto-complete=\"off\" placeholder=\"请输入用户名\" clearable></el-input>\n        </el-form-item>\n        <el-form-item label=\"登录密码\" prop=\"password\">\n          <el-input\n            type=\"password\"\n            v-model=\"formData.password\"\n            placeholder=\"请输入登录密码\"\n            auto-complete=\"off\"\n            clearable\n          ></el-input>\n        </el-form-item>\n        <el-form-item label=\"确认密码\" prop=\"checkPassword\">\n          <el-input\n            type=\"password\"\n            v-model=\"formData.checkPassword\"\n            placeholder=\"请再次输入密码\"\n            auto-complete=\"off\"\n            clearable\n          ></el-input>\n        </el-form-item>\n        <el-form-item label=\"状态\" prop=\"status\">\n          <el-radio-group v-model=\"formData.status\">\n            <el-radio :label=\"0\">禁用</el-radio>\n            <el-radio :label=\"1\">正常</el-radio>\n<!--            <el-radio :label=\"2\">未验证</el-radio>-->\n          </el-radio-group>\n        </el-form-item>\n        <el-form-item label=\"角色\" v-if=\"formData.id!=1\">\n          <el-checkbox-group v-model=\"formData.roles\">\n            <el-checkbox v-for=\"item in roles\" :key=\"item.id\" :label=\"item.id\">{{item.name}}</el-checkbox>\n          </el-checkbox-group>\n          <!-- <el-radio-group  v-model=\"formData.roles\">\n            <el-radio v-for=\"item in roles\" :key=\"item.id\" :label=\"item.id\">{{item.name}}</el-radio>\n          </el-radio-group>-->\n        </el-form-item>\n      </el-form>\n      <div slot=\"footer\" class=\"dialog-footer\">\n        <el-button @click.native=\"hideForm\">取消</el-button>\n        <el-button type=\"primary\" @click.native=\"formSubmit()\" :loading=\"formLoading\">提交</el-button>\n      </div>\n    </el-dialog>\n  </div>\n</template>\n\n<script>\nimport {\n    authAdminList,\n    authAdminRoleList,\n    authAdminSave,\n    authAdminDelete\n} from \"../../../api/auth/authAdmin\";\nconst formJson = {\n    id: \"\",\n    password: \"\",\n    username: \"\",\n    checkPassword: \"\",\n    status: 1,\n    roles: []\n};\nexport default {\n    data() {\n        let validatePass = (rule, value, callback) => {\n            if (value === \"\") {\n                callback(new Error(\"请输入密码\"));\n            } else {\n                callback();\n            }\n        };\n        let validatePass2 = (rule, value, callback) => {\n            if (value === \"\") {\n                callback(new Error(\"请再次输入密码\"));\n            } else if (value !== this.formData.password) {\n                callback(new Error(\"两次输入密码不一致!\"));\n            } else {\n                callback();\n            }\n        };\n        let validatePass3 = (rule, value, callback) => {\n            if (this.formData.password !== \"\" && value === \"\") {\n                callback(new Error(\"请再次输入密码\"));\n            } else if (value !== this.formData.password) {\n                callback(new Error(\"两次输入密码不一致!\"));\n            } else {\n                callback();\n            }\n        };\n        let validatePass4 = (rule, value, callback) => {\n            if (value === \"\" && this.formData.checkPassword !== \"\") {\n                callback(new Error(\"请输入密码\"));\n            } else {\n                callback();\n            }\n        };\n        return {\n            roles: [],\n            query: {\n                username: \"\",\n                status: \"\",\n                currentPage: 1,\n                pageSize: 10,\n                roleId: \"\"\n            },\n            list: [],\n            totalNumber: 0,\n            loading: true,\n            index: null,\n            formName: null,\n            formMap: {\n                add: \"添加\",\n                edit: \"编辑\"\n            },\n            cancelToggle: false,\n            formLoading: false,\n            formVisible: false,\n            formData: formJson,\n            formRules: {},\n            addRules: {\n                username: [\n                    {\n                        required: true,\n                        message: \"请输入用户名\",\n                        trigger: \"blur\"\n                    },\n                    {\n                        min: 5,\n                        max: 20,\n                        message: \"账号最少字符5，最大20\",\n                        trigger: \"blur\"\n                    }\n                ],\n                password: [\n                    { required: true, message: \"请输入密码\", trigger: \"blur\" },\n                    { validator: validatePass, trigger: \"blur\" }\n                ],\n                checkPassword: [\n                    {\n                        required: true,\n                        message: \"请再次输入密码\",\n                        trigger: \"blur\"\n                    },\n                    { validator: validatePass2, trigger: \"blur\" }\n                ],\n                status: [\n                    { required: true, message: \"请选择状态\", trigger: \"change\" }\n                ]\n            },\n            editRules: {\n                username: [\n                    { required: true, message: \"请输入用户名\", trigger: \"blur\" }\n                ],\n                password: [{ validator: validatePass4, trigger: \"blur\" }],\n                checkPassword: [{ validator: validatePass3, trigger: \"blur\" }],\n                status: [\n                    { required: true, message: \"请选择状态\", trigger: \"change\" }\n                ]\n            },\n            multipleSelection: [] //多选集合\n        };\n    },\n    methods: {\n        toggleSelection(rows) {\n            if (rows) {\n                rows.forEach(row => {\n                    this.$refs.multipleTable.toggleRowSelection(row);\n                });\n            } else {\n                this.$refs.multipleTable.clearSelection();\n            }\n        },\n        handleSelectionChange(val) {\n            this.multipleSelection = val;\n            if (val == \"\") {\n                this.cancelToggle = false;\n                return;\n            }\n            this.cancelToggle = true;\n        },\n        delGroup() {\n            var ids = this.multipleSelection.map(item => item.id).join(); //获取所有选中行的id组成的字符串，以逗号分隔\n            var idss = ids.split(\",\");\n            for (var i = 0; i < idss.length; i++) {\n                if (\"1\" === idss[i]) {\n                    this.$message({\n                        message: \"不能删除管理员\",\n                        type: \"warning\"\n                    });\n                    return;\n                }\n            }\n            if (ids == \"\") {\n                this.$message({\n                    message: \"请先选择\",\n                    type: \"warning\"\n                });\n                return;\n            }\n            this.handleDel(ids);\n        },\n        onRest() {\n            this.$router.push({\n                path: \"\"\n            });\n            this.query = {\n                username: \"\",\n                status: \"\",\n                currentPage: 1,\n                pageSize: 10,\n                roleId: \"\"\n            };\n            this.getList();\n        },\n        onSubmit() {\n            this.query.currentPage = 1;\n            this.$router.push({\n                path: \"\"\n                //query: this.query\n            });\n            this.getList();\n        },\n        handleCurrentChange(val) {\n            this.query.currentPage = val;\n            //scrollTo(0, 800);\n            this.getList();\n        },\n        handleSizeChange(val) {\n            this.query.pageSize = val;\n            this.getList();\n        },\n        getList() {\n            this.loading = true;\n            authAdminList(this.query)\n                .then(response => {\n                    if (response.code) {\n                        this.$message.error(response.message);\n                    }\n                    this.list = response.data.list || [];\n                    this.totalNumber = response.data.totalNumber || 0;\n                    setTimeout(() => {\n                        this.loading = false;\n                    }, 0.3 * 1000);\n                })\n                .catch(() => {\n                    this.loading = false;\n                    this.list = [];\n                    this.totalNumber = 0;\n                    this.roles = [];\n                });\n        },\n        getRoleList() {\n            authAdminRoleList(this.query)\n                .then(response => {\n                    if (response.code) {\n                        this.$message.error(response.message);\n                        return false;\n                    }\n                    this.roles = response.data.list || [];\n                })\n                .catch(() => {});\n        },\n        // 隐藏表单\n        hideForm() {\n            // 更改值\n            this.formVisible = !this.formVisible;\n            // 清空表单\n            this.$refs[\"dataForm\"].resetFields();\n            return true;\n        },\n        // 显示表单\n        handleForm(index, row) {\n            this.formVisible = true;\n            this.formData = Object.assign({}, formJson);\n            if (row !== null) {\n                this.formData = Object.assign({}, row);\n            }\n            this.formName = \"add\";\n            this.formRules = this.addRules;\n            //编辑\n            if (index !== null) {\n                this.index = index;\n                this.formName = \"edit\";\n                this.formRules = this.editRules;\n            }\n            // 清空验证信息表单\n            if (this.$refs[\"dataForm\"]) {\n                this.$refs[\"dataForm\"].clearValidate();\n            }\n        },\n        formSubmit() {\n            this.$refs[\"dataForm\"].validate(valid => {\n                if (valid) {\n                    this.formLoading = true;\n                    let data = Object.assign({}, this.formData);\n                    authAdminSave(data, this.formName).then(response => {\n                        this.formLoading = false;\n                        if (response.code) {\n                            this.$message.error(response.message);\n                            return false;\n                        }\n                        this.$message.success(\"操作成功\");\n                        // 向头部添加数据\n                        // this.list.unshift(res)\n                        // if (this.formName === \"add\") {\n                        //     // 向头部添加数据\n                        //     let resData = response.data || {};\n                        //     this.list.unshift(resData);\n                        // } else {\n                        //     this.list.splice(this.index, 1, data);\n                        // }\n                        // 刷新表单\n                        this.$refs[\"dataForm\"].resetFields();\n                        this.formVisible = false;\n                        this.getList();\n                    });\n                }\n            });\n        },\n        // 删除\n        handleDel(ids) {\n            if (ids) {\n                this.$confirm(\"确认要删除吗?\", \"提示\", {\n                    type: \"warning\"\n                })\n                    .then(() => {\n                        this.loading = true;\n                        let para = { ids: ids };\n                        authAdminDelete(para)\n                            .then(response => {\n                                this.loading = false;\n                                if (response.code) {\n                                    this.$message.error(response.message);\n                                    return false;\n                                }\n                                this.$message.success(\"删除成功\");\n                                //返回第一页\n                                this.query.currentPage = 1;\n                                // 刷新数据\n                                this.getList();\n                            })\n                            .catch(() => {\n                                this.loading = false;\n                            });\n                    })\n                    .catch(() => {});\n            }\n        }\n    },\n    filters: {\n        statusFilterType(status) {\n            const statusMap = {\n                0: \"gray\",\n                1: \"success\",\n                2: \"danger\"\n            };\n            return statusMap[status];\n        },\n        statusFilterName(status) {\n            const statusMap = {\n                0: \"禁用\",\n                1: \"正常\",\n                // 2: \"未验证\"\n            };\n            return statusMap[status];\n        }\n    },\n    mounted() {},\n    created() {\n        // 将参数拷贝进查询对象\n        let query = this.$route.query;\n        this.query = Object.assign(this.query, query);\n        this.query.pageSize = parseInt(this.query.pageSize);\n        // 加载表格数据\n        this.getList();\n        // 加载角色列表\n        this.getRoleList();\n    }\n};\n</script>\n\n<style>\nbody {\n    margin: 0;\n}\n</style>\n"],"sourceRoot":"src\\views\\userManage\\admin"}]}