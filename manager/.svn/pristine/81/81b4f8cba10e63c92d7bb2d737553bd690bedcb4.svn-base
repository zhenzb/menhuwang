{"remainingRequest":"E:\\mijia\\manager\\node_modules\\vue-loader\\lib\\index.js??vue-loader-options!E:\\mijia\\manager\\src\\views\\software\\software.vue?vue&type=style&index=0&lang=css","dependencies":[{"path":"E:\\mijia\\manager\\src\\views\\software\\software.vue","mtime":1558935403475},{"path":"E:\\mijia\\manager\\node_modules\\css-loader\\index.js","mtime":1558690124086},{"path":"E:\\mijia\\manager\\node_modules\\vue-loader\\lib\\loaders\\stylePostLoader.js","mtime":1521907989000},{"path":"E:\\mijia\\manager\\node_modules\\postcss-loader\\lib\\index.js","mtime":499162500000},{"path":"E:\\mijia\\manager\\node_modules\\cache-loader\\dist\\cjs.js","mtime":1558690126701},{"path":"E:\\mijia\\manager\\node_modules\\vue-loader\\lib\\index.js","mtime":1527860006000}],"contextDependencies":[],"result":["\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n.avatar-uploader >.el-upload--picture-card{\n    width: 320px !important;\n    height: 190px !important;\n}\n.avatar-uploader .el-upload:hover {\n    border-color: #409EFF;\n}\n.avatar-uploader-icon {\n    font-size: 28px;\n    color: #8c939d;\n    width: 178px;\n    height: 178px;\n    line-height: 178px;\n    text-align: center;\n}\n/*.avatar {*/\n/*    width: 178px;*/\n/*    height: 178px;*/\n/*    display: block;*/\n/*}*/\n.lanfuage>.el-dialog__body{\n    padding: 0px 20px !important;\n}\n",{"version":3,"sources":["software.vue"],"names":[],"mappingsfile":"software.vue","sourceRoot":"src\\views\\software","sourcesContent":["<template>\n    <div>\n        <!--查询条件start --111s-->\n        <el-form :inline=\"true\" :model=\"query\" class=\"query-form\" size=\"small\">\n            <el-form-item class=\"query-form-item\">\n                <el-input\n                    v-model=\"query.username\"\n                    placeholder=\"请输入关键字\"\n                    prefix-icon=\"el-icon-search\"\n                    @keyup.enter.native=\"onSubmit\"\n                    clearable\n                ></el-input>\n            </el-form-item>\n            <el-form-item>\n                <el-button type=\"primary\" icon=\"el-icon-refresh\" @click=\"onRest\"></el-button>\n                <el-button type=\"primary\" icon=\"el-icon-search\" @click=\"onSubmit\">查询</el-button>\n                <el-button type=\"primary\" icon=\"el-icon-edit\" @click.native=\"showDialogAddOrEdit(null,null)\">添加\n                </el-button>\n            </el-form-item>\n        </el-form>\n        <!--查询条件end --111e-->\n\n        <!--列表start --222s-->\n        <el-table\n            ref=\"multipleTable\"\n            v-loading=\"loading\"\n            :data=\"list\"\n            :header-cell-style=\"{background:'#F4F4F5',color:'#606266'}\"\n            @selection-change=\"handleSelectionChange\"\n            border\n        >\n            <el-table-column type=\"selection\" width=\"50\" fixed/>\n            <el-table-column label=\"编号\" prop=\"userid\" width=\"80\" align=\"center\"/>\n            <el-table-column label=\"标题\" prop=\"username\" align=\"center\"/>\n            <el-table-column label=\"状态\" prop=\"usernick\" align=\"center\"/>\n            <el-table-column label=\"排序值\" prop=\"usernick\" align=\"center\"/>\n            <el-table-column label=\"创建时间\" with=\"300\" :show-overflow-tooltip=\"true\" align=\"center\">\n                <template slot-scope=\"scope\">\n                    <i class=\"el-icon-time\" v-if=\"scope.row.usercurrentlogintime!=null\"></i>\n                    <span\n                        v-if=\"scope.row.usercurrentlogintime!=null\"\n                    >{{ scope.row.usercurrentlogintime | formatDateStr('yyyy-MM-dd hh:mm:ss') }}</span>\n                    <span v-else>暂未登录</span>\n                </template>\n            </el-table-column>\n            <el-table-column label=\"备注\" prop=\"usernick\" align=\"center\"/>\n            <el-table-column label=\"操作\" align=\"center\">\n                <template slot-scope=\"scope\">\n                    <el-button\n                        type=\"primary\"\n                        size=\"mini\"\n                        @click.native=\"showDialogAddOrEdit(scope.$index, scope.row)\"\n                    >编辑\n                    </el-button>\n                    <el-button\n                        type=\"danger\"\n                        size=\"mini\"\n                        @click.native=\"handleDel(scope.row.userid)\"\n                    >删除\n                    </el-button>\n                </template>\n            </el-table-column>\n        </el-table>\n        <!--列表end --222e-->\n\n        <!--全选删除start-->\n        <div class=\"left-container\">\n            <el-button type=\"danger\" size=\"small\" @click=\"delGroup()\">删除已选</el-button>\n            <transition name=\"el-fade-in-linear\">\n                <el-button size=\"small\" @click=\"toggleSelection()\" v-show=\"cancelToggle\">取消选择</el-button>\n            </transition>\n        </div>\n        <!--全选删除end-->\n\n        <!--分页模块start-->\n        <el-pagination\n            class=\"pagination-container\"\n            background\n            :page-size=\"query.pageSize\"\n            @size-change=\"handleSizeChange\"\n            @current-change=\"handleCurrentChange\"\n            layout=\"total,sizes,prev, pager, next, jumper\"\n            :current-page=\"query.currentPage\"\n            :page-sizes=\"[10, 20, 30, 50]\"\n            :total=\"totalNumber\"\n        ></el-pagination>\n        <!--分页模块end-->\n\n        <!--新增/编辑弹框start--333s-->\n        <el-dialog\n            :title=\"dialogAddOrEditName\"\n            :visible.sync=\"dialogAddOrEdit\"\n            width=\"30%\"\n            :before-close=\"hideDialogAddOrEdit\">\n            <el-form :model=\"formData\" :rules=\"rules\" ref=\"ruleForm\" label-width=\"100px\" class=\"demo-ruleForm\">\n                <el-form-item label=\"活动名称\" prop=\"username\">\n                    <el-input v-model=\"formData.username\"></el-input>\n                </el-form-item>\n                <el-form-item label=\"国旗图片\" prop=\"imageurl\">\n                    <el-upload\n                        class=\"avatar-uploader\"\n                        :action=\"uploaduri\"\n                        :on-success=\"handleAvatarSuccess\"\n                        :before-upload=\"beforeAvatarUpload\"\n                        :show-file-list=\"false\"\n\n                    >\n                        <img v-if=\"formData.imageurl\" :src=\"formData.imageurl\" style=\"width: 180px;height:125px;display: block;border-radius:7px\" >\n                        <i v-else class=\"el-icon-plus avatar-uploader-icon\" style=\"line-height: 6;width: 180px;height: 125px\"></i>\n                    </el-upload>\n                </el-form-item>\n            </el-form>\n\n            <span slot=\"footer\" class=\"dialog-footer\">\n    <el-button @click=\"dialogAddOrEdit = false\">取 消</el-button>\n    <el-button type=\"primary\" :loading=\"formSumbitLoding\" @click=\"formSumbit\">提交</el-button>\n  </span>\n        </el-dialog>\n        <!--新增/编辑弹框end--333e-->\n    </div>\n</template>\n<script>\n    import {getList} from \"../../api/mbuser/mbuser\";\n\n    /*用作表单的数据初始化*/\n    const formJson = {\n        username: \"\"\n    };\n\n    export default {\n        data() {\n            return {\n                pickerOptions: {//快速选择日期\n                    shortcuts: [\n                        {\n                            text: \"最近一周\",\n                            onClick(picker) {\n                                const end = new Date();\n                                const start = new Date();\n                                start.setTime(\n                                    start.getTime() - 3600 * 1000 * 24 * 7\n                                );\n                                picker.$emit(\"pick\", [start, end]);\n                            }\n                        },\n                        {\n                            text: \"最近一个月\",\n                            onClick(picker) {\n                                const end = new Date();\n                                const start = new Date();\n                                start.setTime(\n                                    start.getTime() - 3600 * 1000 * 24 * 30\n                                );\n                                picker.$emit(\"pick\", [start, end]);\n                            }\n                        },\n                        {\n                            text: \"最近三个月\",\n                            onClick(picker) {\n                                const end = new Date();\n                                const start = new Date();\n                                start.setTime(\n                                    start.getTime() - 3600 * 1000 * 24 * 90\n                                );\n                                picker.$emit(\"pick\", [start, end]);\n                            }\n                        },\n                        {\n                            text: \"最近六个月\",\n                            onClick(picker) {\n                                const end = new Date();\n                                const start = new Date();\n                                start.setTime(\n                                    start.getTime() - 3600 * 1000 * 24 * 180\n                                );\n                                picker.$emit(\"pick\", [start, end]);\n                            }\n                        }\n                    ]\n                },\n                query: {//查询条件\n                    startTime: \"\",\n                    endTime: \"\",\n                    currentPage: 1,\n                    pageSize: 10,\n                },\n                createTime:[],//选择日期时需要的model\n                list: [],//列表集合\n                totalNumber: 0,//分页总页数\n                loading: false,//列表加载\n                allLoding: false,//全屏加载\n                formSumbitLoding: false,//表单提交加载\n                cancelToggle: false,//列表是否全选\n                multipleSelection: [], //多选集合\n                dialogAddOrEdit: false,//新增或编辑弹框开关\n                dialogAddOrEditName: \"\",//新增或编辑弹框名字\n                formData: formJson,//新增或修改的对象\n                rules: {//表单校验\n                    username: [\n                        {required: true, message: '请输入姓名', trigger: 'blur'},\n                        {min: 3, max: 5, message: '长度在 3 到 5 个字符', trigger: 'blur'}\n                    ]\n                }\n            };\n        },\n        methods: {\n            /*获取列表事件*/\n            getList() {\n                this.loading = true;\n                getList(this.query).then(response => {\n                    if (response.code != 0) {\n                        this.$message.error(response.message);\n                        return false;\n                    }\n                    this.list = response.data.list || [];\n                    this.totalNumber = response.data.totalNumber || 0;\n                    setTimeout(() => {\n                        this.loading = false;\n                    }, 0.3 * 1000);\n                }).catch(() => {\n                    this.loading = false;\n                    this.list = [];\n                })\n            },\n\n            /*新增或者编辑提交事件*/\n            formSumbit() {\n                //表单校验通过\n                this.$refs[\"ruleForm\"].validate(valid => {\n                    if (valid) {\n                        this.formSumbitLoding = true;\n                        //提交操作\n                        setTimeout(() => {\n                            this.hideDialogAddOrEdit();\n                            this.$message.success(\"提交成功\");\n                            this.formSumbitLoding = false;\n                            this.getList();\n                        }, 1000);\n                    }\n                });\n                //new URLSearchParams(this.query)  提交数据格式不正确时可以转一下\n            },\n\n            /*列表查询条件事件*/\n            onSubmit() {\n                this.query.currentPage = 1;\n                this.$router.push({\n                    path: \"\",\n                    query: this.query\n                });\n                this.getList();\n            },\n\n            /*刷新*/\n            onRest() {\n                this.$router.push({\n                    path: \"\"\n                });\n                //刷新事件需要重置查询条件\n                this.createTime = [];\n                this.query = {\n                    currentPage: 1,\n                    pageSize: 10,\n                };\n                this.getList();\n            },\n\n            /*显示 -新增或者编辑弹框*/\n            showDialogAddOrEdit(index, row) {\n                this.dialogAddOrEdit = true;\n                this.formData = Object.assign({}, formJson);//将弹框内表单内容初始化\n                if (row !== null) {\n                    //如果row不为空，说明是修改，因为row是修改时携带过来此列的所有信息\n                    this.formData = Object.assign({}, row);//修改则将列内容深拷贝到表单内容中\n                    this.dialogAddOrEditName = \"编辑\";\n                } else {\n                    this.dialogAddOrEditName = \"新增\";\n                }\n            },\n\n            /*隐藏 -新增或编辑弹框*/\n            hideDialogAddOrEdit() {\n                this.dialogAddOrEdit = false;\n\n                //隐藏弹框时需要清除弹框内容\n                if (this.$refs[\"ruleForm\"]) {\n                    this.$refs['ruleForm'].resetFields();//清除formData表单\n                    this.$refs[\"ruleForm\"].clearValidate();//清除表单验证\n                }\n                //如果上传文件，还需要清除文件列表\n            },\n\n            /*点击页数*/\n            handleCurrentChange(val) {\n                this.query.currentPage = val;\n                this.getList();\n            },\n\n            /*选择每页条数【10,20,30,40,50】*/\n            handleSizeChange(val) {\n                this.query.pageSize = val;\n                this.getList();\n            },\n\n            /*取消全选事件*/\n            toggleSelection(rows) {\n                if (rows) {\n                    rows.forEach(row => {\n                        this.$refs.multipleTable.toggleRowSelection(row);\n                    });\n                } else {\n                    this.$refs.multipleTable.clearSelection();\n                }\n            },\n\n            /*列表复选框选择事件*/\n            handleSelectionChange(val) {\n                this.multipleSelection = val;\n                if (val == \"\") {\n                    this.cancelToggle = false;\n                    return;\n                }\n                this.cancelToggle = true;\n            },\n\n            /*全选删除事件*/\n            delGroup() {\n                console.log(this.multipleSelection)\n                var ids = this.multipleSelection.map(item => item.userid).join(); //获取所有选中行的id组成的字符串，以逗号分隔\n                if (ids == \"\") {\n                    this.$message({\n                        message: \"请先选择\",\n                        type: \"warning\"\n                    });\n                    return;\n                }\n                this.handleDel(ids);\n            },\n\n            /*单击删除事件*/\n            handleDel(ids) {\n                if (ids) {\n                    this.$confirm(\"确认要删除吗?\", \"提示\", {\n                        type: \"warning\"\n                    })\n                        .then(() => {\n                            this.$message.success(\"删除成功\");\n                            this.getList();\n                        })\n                        .catch(() => {\n                            this.$message.warning(\"已取消\");\n                        });\n                }\n            },\n\n            /*日期选择事件*/\n            dateChange(val) {\n                if (val == null) {\n                    this.query.startTime = \"\";\n                    this.query.endTime = \"\";\n                } else {\n                    this.query.startTime = val[0];\n                    this.query.endTime = val[1];\n                    this.query.currentPage = 1;\n                }\n                this.getList();\n                console.log(this.query)\n            },\n        }, created() {\n            // this.getList();\n        }\n    }\n    //跳转路由的方法\n    // this.$router.push({\n    //     path: \"\",\n    //     query:{\n    //         username:\"张三\"\n    //     }\n    // });\n    //接受路由传递的参数\n    //let query = this.$route.query;\n</script>\n<style>\n    .avatar-uploader >.el-upload--picture-card{\n        width: 320px !important;\n        height: 190px !important;\n    }\n    .avatar-uploader .el-upload:hover {\n        border-color: #409EFF;\n    }\n    .avatar-uploader-icon {\n        font-size: 28px;\n        color: #8c939d;\n        width: 178px;\n        height: 178px;\n        line-height: 178px;\n        text-align: center;\n    }\n    /*.avatar {*/\n    /*    width: 178px;*/\n    /*    height: 178px;*/\n    /*    display: block;*/\n    /*}*/\n    .lanfuage>.el-dialog__body{\n        padding: 0px 20px !important;\n    }\n</style>\n"]}]}