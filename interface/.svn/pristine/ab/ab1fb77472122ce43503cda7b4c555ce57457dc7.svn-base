package com.qingyun.mybatis.model;

import java.util.ArrayList;
import java.util.List;

public class SysBasicsExample {
    /**
     * This field was generated by MyBatis Generator.
     * This field corresponds to the database table sys_basics
     *
     * @mbggenerated
     */
    protected String orderByClause;

    /**
     * This field was generated by MyBatis Generator.
     * This field corresponds to the database table sys_basics
     *
     * @mbggenerated
     */
    protected boolean distinct;

    /**
     * This field was generated by MyBatis Generator.
     * This field corresponds to the database table sys_basics
     *
     * @mbggenerated
     */
    protected List<Criteria> oredCriteria;

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table sys_basics
     *
     * @mbggenerated
     */
    public SysBasicsExample() {
        oredCriteria = new ArrayList<Criteria>();
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table sys_basics
     *
     * @mbggenerated
     */
    public void setOrderByClause(String orderByClause) {
        this.orderByClause = orderByClause;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table sys_basics
     *
     * @mbggenerated
     */
    public String getOrderByClause() {
        return orderByClause;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table sys_basics
     *
     * @mbggenerated
     */
    public void setDistinct(boolean distinct) {
        this.distinct = distinct;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table sys_basics
     *
     * @mbggenerated
     */
    public boolean isDistinct() {
        return distinct;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table sys_basics
     *
     * @mbggenerated
     */
    public List<Criteria> getOredCriteria() {
        return oredCriteria;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table sys_basics
     *
     * @mbggenerated
     */
    public void or(Criteria criteria) {
        oredCriteria.add(criteria);
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table sys_basics
     *
     * @mbggenerated
     */
    public Criteria or() {
        Criteria criteria = createCriteriaInternal();
        oredCriteria.add(criteria);
        return criteria;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table sys_basics
     *
     * @mbggenerated
     */
    public Criteria createCriteria() {
        Criteria criteria = createCriteriaInternal();
        if (oredCriteria.size() == 0) {
            oredCriteria.add(criteria);
        }
        return criteria;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table sys_basics
     *
     * @mbggenerated
     */
    protected Criteria createCriteriaInternal() {
        Criteria criteria = new Criteria();
        return criteria;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table sys_basics
     *
     * @mbggenerated
     */
    public void clear() {
        oredCriteria.clear();
        orderByClause = null;
        distinct = false;
    }

    /**
     * This class was generated by MyBatis Generator.
     * This class corresponds to the database table sys_basics
     *
     * @mbggenerated
     */
    protected abstract static class GeneratedCriteria {
        protected List<Criterion> criteria;

        protected GeneratedCriteria() {
            super();
            criteria = new ArrayList<Criterion>();
        }

        public boolean isValid() {
            return criteria.size() > 0;
        }

        public List<Criterion> getAllCriteria() {
            return criteria;
        }

        public List<Criterion> getCriteria() {
            return criteria;
        }

        protected void addCriterion(String condition) {
            if (condition == null) {
                throw new RuntimeException("Value for condition cannot be null");
            }
            criteria.add(new Criterion(condition));
        }

        protected void addCriterion(String condition, Object value, String property) {
            if (value == null) {
                throw new RuntimeException("Value for " + property + " cannot be null");
            }
            criteria.add(new Criterion(condition, value));
        }

        protected void addCriterion(String condition, Object value1, Object value2, String property) {
            if (value1 == null || value2 == null) {
                throw new RuntimeException("Between values for " + property + " cannot be null");
            }
            criteria.add(new Criterion(condition, value1, value2));
        }

        public Criteria andIdIsNull() {
            addCriterion("Id is null");
            return (Criteria) this;
        }

        public Criteria andIdIsNotNull() {
            addCriterion("Id is not null");
            return (Criteria) this;
        }

        public Criteria andIdEqualTo(Integer value) {
            addCriterion("Id =", value, "id");
            return (Criteria) this;
        }

        public Criteria andIdNotEqualTo(Integer value) {
            addCriterion("Id <>", value, "id");
            return (Criteria) this;
        }

        public Criteria andIdGreaterThan(Integer value) {
            addCriterion("Id >", value, "id");
            return (Criteria) this;
        }

        public Criteria andIdGreaterThanOrEqualTo(Integer value) {
            addCriterion("Id >=", value, "id");
            return (Criteria) this;
        }

        public Criteria andIdLessThan(Integer value) {
            addCriterion("Id <", value, "id");
            return (Criteria) this;
        }

        public Criteria andIdLessThanOrEqualTo(Integer value) {
            addCriterion("Id <=", value, "id");
            return (Criteria) this;
        }

        public Criteria andIdIn(List<Integer> values) {
            addCriterion("Id in", values, "id");
            return (Criteria) this;
        }

        public Criteria andIdNotIn(List<Integer> values) {
            addCriterion("Id not in", values, "id");
            return (Criteria) this;
        }

        public Criteria andIdBetween(Integer value1, Integer value2) {
            addCriterion("Id between", value1, value2, "id");
            return (Criteria) this;
        }

        public Criteria andIdNotBetween(Integer value1, Integer value2) {
            addCriterion("Id not between", value1, value2, "id");
            return (Criteria) this;
        }

        public Criteria andLogopicIsNull() {
            addCriterion("LogoPic is null");
            return (Criteria) this;
        }

        public Criteria andLogopicIsNotNull() {
            addCriterion("LogoPic is not null");
            return (Criteria) this;
        }

        public Criteria andLogopicEqualTo(String value) {
            addCriterion("LogoPic =", value, "logopic");
            return (Criteria) this;
        }

        public Criteria andLogopicNotEqualTo(String value) {
            addCriterion("LogoPic <>", value, "logopic");
            return (Criteria) this;
        }

        public Criteria andLogopicGreaterThan(String value) {
            addCriterion("LogoPic >", value, "logopic");
            return (Criteria) this;
        }

        public Criteria andLogopicGreaterThanOrEqualTo(String value) {
            addCriterion("LogoPic >=", value, "logopic");
            return (Criteria) this;
        }

        public Criteria andLogopicLessThan(String value) {
            addCriterion("LogoPic <", value, "logopic");
            return (Criteria) this;
        }

        public Criteria andLogopicLessThanOrEqualTo(String value) {
            addCriterion("LogoPic <=", value, "logopic");
            return (Criteria) this;
        }

        public Criteria andLogopicLike(String value) {
            addCriterion("LogoPic like", value, "logopic");
            return (Criteria) this;
        }

        public Criteria andLogopicNotLike(String value) {
            addCriterion("LogoPic not like", value, "logopic");
            return (Criteria) this;
        }

        public Criteria andLogopicIn(List<String> values) {
            addCriterion("LogoPic in", values, "logopic");
            return (Criteria) this;
        }

        public Criteria andLogopicNotIn(List<String> values) {
            addCriterion("LogoPic not in", values, "logopic");
            return (Criteria) this;
        }

        public Criteria andLogopicBetween(String value1, String value2) {
            addCriterion("LogoPic between", value1, value2, "logopic");
            return (Criteria) this;
        }

        public Criteria andLogopicNotBetween(String value1, String value2) {
            addCriterion("LogoPic not between", value1, value2, "logopic");
            return (Criteria) this;
        }

        public Criteria andVxcodeIsNull() {
            addCriterion("VXCode is null");
            return (Criteria) this;
        }

        public Criteria andVxcodeIsNotNull() {
            addCriterion("VXCode is not null");
            return (Criteria) this;
        }

        public Criteria andVxcodeEqualTo(String value) {
            addCriterion("VXCode =", value, "vxcode");
            return (Criteria) this;
        }

        public Criteria andVxcodeNotEqualTo(String value) {
            addCriterion("VXCode <>", value, "vxcode");
            return (Criteria) this;
        }

        public Criteria andVxcodeGreaterThan(String value) {
            addCriterion("VXCode >", value, "vxcode");
            return (Criteria) this;
        }

        public Criteria andVxcodeGreaterThanOrEqualTo(String value) {
            addCriterion("VXCode >=", value, "vxcode");
            return (Criteria) this;
        }

        public Criteria andVxcodeLessThan(String value) {
            addCriterion("VXCode <", value, "vxcode");
            return (Criteria) this;
        }

        public Criteria andVxcodeLessThanOrEqualTo(String value) {
            addCriterion("VXCode <=", value, "vxcode");
            return (Criteria) this;
        }

        public Criteria andVxcodeLike(String value) {
            addCriterion("VXCode like", value, "vxcode");
            return (Criteria) this;
        }

        public Criteria andVxcodeNotLike(String value) {
            addCriterion("VXCode not like", value, "vxcode");
            return (Criteria) this;
        }

        public Criteria andVxcodeIn(List<String> values) {
            addCriterion("VXCode in", values, "vxcode");
            return (Criteria) this;
        }

        public Criteria andVxcodeNotIn(List<String> values) {
            addCriterion("VXCode not in", values, "vxcode");
            return (Criteria) this;
        }

        public Criteria andVxcodeBetween(String value1, String value2) {
            addCriterion("VXCode between", value1, value2, "vxcode");
            return (Criteria) this;
        }

        public Criteria andVxcodeNotBetween(String value1, String value2) {
            addCriterion("VXCode not between", value1, value2, "vxcode");
            return (Criteria) this;
        }

        public Criteria andBackgroudpicIsNull() {
            addCriterion("BackgroudPic is null");
            return (Criteria) this;
        }

        public Criteria andBackgroudpicIsNotNull() {
            addCriterion("BackgroudPic is not null");
            return (Criteria) this;
        }

        public Criteria andBackgroudpicEqualTo(String value) {
            addCriterion("BackgroudPic =", value, "backgroudpic");
            return (Criteria) this;
        }

        public Criteria andBackgroudpicNotEqualTo(String value) {
            addCriterion("BackgroudPic <>", value, "backgroudpic");
            return (Criteria) this;
        }

        public Criteria andBackgroudpicGreaterThan(String value) {
            addCriterion("BackgroudPic >", value, "backgroudpic");
            return (Criteria) this;
        }

        public Criteria andBackgroudpicGreaterThanOrEqualTo(String value) {
            addCriterion("BackgroudPic >=", value, "backgroudpic");
            return (Criteria) this;
        }

        public Criteria andBackgroudpicLessThan(String value) {
            addCriterion("BackgroudPic <", value, "backgroudpic");
            return (Criteria) this;
        }

        public Criteria andBackgroudpicLessThanOrEqualTo(String value) {
            addCriterion("BackgroudPic <=", value, "backgroudpic");
            return (Criteria) this;
        }

        public Criteria andBackgroudpicLike(String value) {
            addCriterion("BackgroudPic like", value, "backgroudpic");
            return (Criteria) this;
        }

        public Criteria andBackgroudpicNotLike(String value) {
            addCriterion("BackgroudPic not like", value, "backgroudpic");
            return (Criteria) this;
        }

        public Criteria andBackgroudpicIn(List<String> values) {
            addCriterion("BackgroudPic in", values, "backgroudpic");
            return (Criteria) this;
        }

        public Criteria andBackgroudpicNotIn(List<String> values) {
            addCriterion("BackgroudPic not in", values, "backgroudpic");
            return (Criteria) this;
        }

        public Criteria andBackgroudpicBetween(String value1, String value2) {
            addCriterion("BackgroudPic between", value1, value2, "backgroudpic");
            return (Criteria) this;
        }

        public Criteria andBackgroudpicNotBetween(String value1, String value2) {
            addCriterion("BackgroudPic not between", value1, value2, "backgroudpic");
            return (Criteria) this;
        }
    }

    /**
     * This class was generated by MyBatis Generator.
     * This class corresponds to the database table sys_basics
     *
     * @mbggenerated do_not_delete_during_merge
     */
    public static class Criteria extends GeneratedCriteria {

        protected Criteria() {
            super();
        }
    }

    /**
     * This class was generated by MyBatis Generator.
     * This class corresponds to the database table sys_basics
     *
     * @mbggenerated
     */
    public static class Criterion {
        private String condition;

        private Object value;

        private Object secondValue;

        private boolean noValue;

        private boolean singleValue;

        private boolean betweenValue;

        private boolean listValue;

        private String typeHandler;

        public String getCondition() {
            return condition;
        }

        public Object getValue() {
            return value;
        }

        public Object getSecondValue() {
            return secondValue;
        }

        public boolean isNoValue() {
            return noValue;
        }

        public boolean isSingleValue() {
            return singleValue;
        }

        public boolean isBetweenValue() {
            return betweenValue;
        }

        public boolean isListValue() {
            return listValue;
        }

        public String getTypeHandler() {
            return typeHandler;
        }

        protected Criterion(String condition) {
            super();
            this.condition = condition;
            this.typeHandler = null;
            this.noValue = true;
        }

        protected Criterion(String condition, Object value, String typeHandler) {
            super();
            this.condition = condition;
            this.value = value;
            this.typeHandler = typeHandler;
            if (value instanceof List<?>) {
                this.listValue = true;
            } else {
                this.singleValue = true;
            }
        }

        protected Criterion(String condition, Object value) {
            this(condition, value, null);
        }

        protected Criterion(String condition, Object value, Object secondValue, String typeHandler) {
            super();
            this.condition = condition;
            this.value = value;
            this.secondValue = secondValue;
            this.typeHandler = typeHandler;
            this.betweenValue = true;
        }

        protected Criterion(String condition, Object value, Object secondValue) {
            this(condition, value, secondValue, null);
        }
    }
}