package com.qingyun.mybatis.model;

import java.util.ArrayList;
import java.util.Date;
import java.util.List;

public class SysProblemExample {
    /**
     * This field was generated by MyBatis Generator.
     * This field corresponds to the database table sys_problem
     *
     * @mbggenerated
     */
    protected String orderByClause;

    /**
     * This field was generated by MyBatis Generator.
     * This field corresponds to the database table sys_problem
     *
     * @mbggenerated
     */
    protected boolean distinct;

    /**
     * This field was generated by MyBatis Generator.
     * This field corresponds to the database table sys_problem
     *
     * @mbggenerated
     */
    protected List<Criteria> oredCriteria;

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table sys_problem
     *
     * @mbggenerated
     */
    public SysProblemExample() {
        oredCriteria = new ArrayList<Criteria>();
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table sys_problem
     *
     * @mbggenerated
     */
    public void setOrderByClause(String orderByClause) {
        this.orderByClause = orderByClause;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table sys_problem
     *
     * @mbggenerated
     */
    public String getOrderByClause() {
        return orderByClause;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table sys_problem
     *
     * @mbggenerated
     */
    public void setDistinct(boolean distinct) {
        this.distinct = distinct;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table sys_problem
     *
     * @mbggenerated
     */
    public boolean isDistinct() {
        return distinct;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table sys_problem
     *
     * @mbggenerated
     */
    public List<Criteria> getOredCriteria() {
        return oredCriteria;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table sys_problem
     *
     * @mbggenerated
     */
    public void or(Criteria criteria) {
        oredCriteria.add(criteria);
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table sys_problem
     *
     * @mbggenerated
     */
    public Criteria or() {
        Criteria criteria = createCriteriaInternal();
        oredCriteria.add(criteria);
        return criteria;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table sys_problem
     *
     * @mbggenerated
     */
    public Criteria createCriteria() {
        Criteria criteria = createCriteriaInternal();
        if (oredCriteria.size() == 0) {
            oredCriteria.add(criteria);
        }
        return criteria;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table sys_problem
     *
     * @mbggenerated
     */
    protected Criteria createCriteriaInternal() {
        Criteria criteria = new Criteria();
        return criteria;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table sys_problem
     *
     * @mbggenerated
     */
    public void clear() {
        oredCriteria.clear();
        orderByClause = null;
        distinct = false;
    }

    /**
     * This class was generated by MyBatis Generator.
     * This class corresponds to the database table sys_problem
     *
     * @mbggenerated
     */
    protected abstract static class GeneratedCriteria {
        protected List<Criterion> criteria;

        protected GeneratedCriteria() {
            super();
            criteria = new ArrayList<Criterion>();
        }

        public boolean isValid() {
            return criteria.size() > 0;
        }

        public List<Criterion> getAllCriteria() {
            return criteria;
        }

        public List<Criterion> getCriteria() {
            return criteria;
        }

        protected void addCriterion(String condition) {
            if (condition == null) {
                throw new RuntimeException("Value for condition cannot be null");
            }
            criteria.add(new Criterion(condition));
        }

        protected void addCriterion(String condition, Object value, String property) {
            if (value == null) {
                throw new RuntimeException("Value for " + property + " cannot be null");
            }
            criteria.add(new Criterion(condition, value));
        }

        protected void addCriterion(String condition, Object value1, Object value2, String property) {
            if (value1 == null || value2 == null) {
                throw new RuntimeException("Between values for " + property + " cannot be null");
            }
            criteria.add(new Criterion(condition, value1, value2));
        }

        public Criteria andProblemidIsNull() {
            addCriterion("ProblemId is null");
            return (Criteria) this;
        }

        public Criteria andProblemidIsNotNull() {
            addCriterion("ProblemId is not null");
            return (Criteria) this;
        }

        public Criteria andProblemidEqualTo(Long value) {
            addCriterion("ProblemId =", value, "problemid");
            return (Criteria) this;
        }

        public Criteria andProblemidNotEqualTo(Long value) {
            addCriterion("ProblemId <>", value, "problemid");
            return (Criteria) this;
        }

        public Criteria andProblemidGreaterThan(Long value) {
            addCriterion("ProblemId >", value, "problemid");
            return (Criteria) this;
        }

        public Criteria andProblemidGreaterThanOrEqualTo(Long value) {
            addCriterion("ProblemId >=", value, "problemid");
            return (Criteria) this;
        }

        public Criteria andProblemidLessThan(Long value) {
            addCriterion("ProblemId <", value, "problemid");
            return (Criteria) this;
        }

        public Criteria andProblemidLessThanOrEqualTo(Long value) {
            addCriterion("ProblemId <=", value, "problemid");
            return (Criteria) this;
        }

        public Criteria andProblemidIn(List<Long> values) {
            addCriterion("ProblemId in", values, "problemid");
            return (Criteria) this;
        }

        public Criteria andProblemidNotIn(List<Long> values) {
            addCriterion("ProblemId not in", values, "problemid");
            return (Criteria) this;
        }

        public Criteria andProblemidBetween(Long value1, Long value2) {
            addCriterion("ProblemId between", value1, value2, "problemid");
            return (Criteria) this;
        }

        public Criteria andProblemidNotBetween(Long value1, Long value2) {
            addCriterion("ProblemId not between", value1, value2, "problemid");
            return (Criteria) this;
        }

        public Criteria andProblemtitleIsNull() {
            addCriterion("ProblemTitle is null");
            return (Criteria) this;
        }

        public Criteria andProblemtitleIsNotNull() {
            addCriterion("ProblemTitle is not null");
            return (Criteria) this;
        }

        public Criteria andProblemtitleEqualTo(String value) {
            addCriterion("ProblemTitle =", value, "problemtitle");
            return (Criteria) this;
        }

        public Criteria andProblemtitleNotEqualTo(String value) {
            addCriterion("ProblemTitle <>", value, "problemtitle");
            return (Criteria) this;
        }

        public Criteria andProblemtitleGreaterThan(String value) {
            addCriterion("ProblemTitle >", value, "problemtitle");
            return (Criteria) this;
        }

        public Criteria andProblemtitleGreaterThanOrEqualTo(String value) {
            addCriterion("ProblemTitle >=", value, "problemtitle");
            return (Criteria) this;
        }

        public Criteria andProblemtitleLessThan(String value) {
            addCriterion("ProblemTitle <", value, "problemtitle");
            return (Criteria) this;
        }

        public Criteria andProblemtitleLessThanOrEqualTo(String value) {
            addCriterion("ProblemTitle <=", value, "problemtitle");
            return (Criteria) this;
        }

        public Criteria andProblemtitleLike(String value) {
            addCriterion("ProblemTitle like", value, "problemtitle");
            return (Criteria) this;
        }

        public Criteria andProblemtitleNotLike(String value) {
            addCriterion("ProblemTitle not like", value, "problemtitle");
            return (Criteria) this;
        }

        public Criteria andProblemtitleIn(List<String> values) {
            addCriterion("ProblemTitle in", values, "problemtitle");
            return (Criteria) this;
        }

        public Criteria andProblemtitleNotIn(List<String> values) {
            addCriterion("ProblemTitle not in", values, "problemtitle");
            return (Criteria) this;
        }

        public Criteria andProblemtitleBetween(String value1, String value2) {
            addCriterion("ProblemTitle between", value1, value2, "problemtitle");
            return (Criteria) this;
        }

        public Criteria andProblemtitleNotBetween(String value1, String value2) {
            addCriterion("ProblemTitle not between", value1, value2, "problemtitle");
            return (Criteria) this;
        }

        public Criteria andProblemremarksIsNull() {
            addCriterion("ProblemRemarks is null");
            return (Criteria) this;
        }

        public Criteria andProblemremarksIsNotNull() {
            addCriterion("ProblemRemarks is not null");
            return (Criteria) this;
        }

        public Criteria andProblemremarksEqualTo(String value) {
            addCriterion("ProblemRemarks =", value, "problemremarks");
            return (Criteria) this;
        }

        public Criteria andProblemremarksNotEqualTo(String value) {
            addCriterion("ProblemRemarks <>", value, "problemremarks");
            return (Criteria) this;
        }

        public Criteria andProblemremarksGreaterThan(String value) {
            addCriterion("ProblemRemarks >", value, "problemremarks");
            return (Criteria) this;
        }

        public Criteria andProblemremarksGreaterThanOrEqualTo(String value) {
            addCriterion("ProblemRemarks >=", value, "problemremarks");
            return (Criteria) this;
        }

        public Criteria andProblemremarksLessThan(String value) {
            addCriterion("ProblemRemarks <", value, "problemremarks");
            return (Criteria) this;
        }

        public Criteria andProblemremarksLessThanOrEqualTo(String value) {
            addCriterion("ProblemRemarks <=", value, "problemremarks");
            return (Criteria) this;
        }

        public Criteria andProblemremarksLike(String value) {
            addCriterion("ProblemRemarks like", value, "problemremarks");
            return (Criteria) this;
        }

        public Criteria andProblemremarksNotLike(String value) {
            addCriterion("ProblemRemarks not like", value, "problemremarks");
            return (Criteria) this;
        }

        public Criteria andProblemremarksIn(List<String> values) {
            addCriterion("ProblemRemarks in", values, "problemremarks");
            return (Criteria) this;
        }

        public Criteria andProblemremarksNotIn(List<String> values) {
            addCriterion("ProblemRemarks not in", values, "problemremarks");
            return (Criteria) this;
        }

        public Criteria andProblemremarksBetween(String value1, String value2) {
            addCriterion("ProblemRemarks between", value1, value2, "problemremarks");
            return (Criteria) this;
        }

        public Criteria andProblemremarksNotBetween(String value1, String value2) {
            addCriterion("ProblemRemarks not between", value1, value2, "problemremarks");
            return (Criteria) this;
        }

        public Criteria andProblemanswerIsNull() {
            addCriterion("ProblemAnswer is null");
            return (Criteria) this;
        }

        public Criteria andProblemanswerIsNotNull() {
            addCriterion("ProblemAnswer is not null");
            return (Criteria) this;
        }

        public Criteria andProblemanswerEqualTo(String value) {
            addCriterion("ProblemAnswer =", value, "problemanswer");
            return (Criteria) this;
        }

        public Criteria andProblemanswerNotEqualTo(String value) {
            addCriterion("ProblemAnswer <>", value, "problemanswer");
            return (Criteria) this;
        }

        public Criteria andProblemanswerGreaterThan(String value) {
            addCriterion("ProblemAnswer >", value, "problemanswer");
            return (Criteria) this;
        }

        public Criteria andProblemanswerGreaterThanOrEqualTo(String value) {
            addCriterion("ProblemAnswer >=", value, "problemanswer");
            return (Criteria) this;
        }

        public Criteria andProblemanswerLessThan(String value) {
            addCriterion("ProblemAnswer <", value, "problemanswer");
            return (Criteria) this;
        }

        public Criteria andProblemanswerLessThanOrEqualTo(String value) {
            addCriterion("ProblemAnswer <=", value, "problemanswer");
            return (Criteria) this;
        }

        public Criteria andProblemanswerLike(String value) {
            addCriterion("ProblemAnswer like", value, "problemanswer");
            return (Criteria) this;
        }

        public Criteria andProblemanswerNotLike(String value) {
            addCriterion("ProblemAnswer not like", value, "problemanswer");
            return (Criteria) this;
        }

        public Criteria andProblemanswerIn(List<String> values) {
            addCriterion("ProblemAnswer in", values, "problemanswer");
            return (Criteria) this;
        }

        public Criteria andProblemanswerNotIn(List<String> values) {
            addCriterion("ProblemAnswer not in", values, "problemanswer");
            return (Criteria) this;
        }

        public Criteria andProblemanswerBetween(String value1, String value2) {
            addCriterion("ProblemAnswer between", value1, value2, "problemanswer");
            return (Criteria) this;
        }

        public Criteria andProblemanswerNotBetween(String value1, String value2) {
            addCriterion("ProblemAnswer not between", value1, value2, "problemanswer");
            return (Criteria) this;
        }

        public Criteria andProblemstatsIsNull() {
            addCriterion("ProblemStats is null");
            return (Criteria) this;
        }

        public Criteria andProblemstatsIsNotNull() {
            addCriterion("ProblemStats is not null");
            return (Criteria) this;
        }

        public Criteria andProblemstatsEqualTo(Integer value) {
            addCriterion("ProblemStats =", value, "problemstats");
            return (Criteria) this;
        }

        public Criteria andProblemstatsNotEqualTo(Integer value) {
            addCriterion("ProblemStats <>", value, "problemstats");
            return (Criteria) this;
        }

        public Criteria andProblemstatsGreaterThan(Integer value) {
            addCriterion("ProblemStats >", value, "problemstats");
            return (Criteria) this;
        }

        public Criteria andProblemstatsGreaterThanOrEqualTo(Integer value) {
            addCriterion("ProblemStats >=", value, "problemstats");
            return (Criteria) this;
        }

        public Criteria andProblemstatsLessThan(Integer value) {
            addCriterion("ProblemStats <", value, "problemstats");
            return (Criteria) this;
        }

        public Criteria andProblemstatsLessThanOrEqualTo(Integer value) {
            addCriterion("ProblemStats <=", value, "problemstats");
            return (Criteria) this;
        }

        public Criteria andProblemstatsIn(List<Integer> values) {
            addCriterion("ProblemStats in", values, "problemstats");
            return (Criteria) this;
        }

        public Criteria andProblemstatsNotIn(List<Integer> values) {
            addCriterion("ProblemStats not in", values, "problemstats");
            return (Criteria) this;
        }

        public Criteria andProblemstatsBetween(Integer value1, Integer value2) {
            addCriterion("ProblemStats between", value1, value2, "problemstats");
            return (Criteria) this;
        }

        public Criteria andProblemstatsNotBetween(Integer value1, Integer value2) {
            addCriterion("ProblemStats not between", value1, value2, "problemstats");
            return (Criteria) this;
        }

        public Criteria andCreatetimeIsNull() {
            addCriterion("CreateTime is null");
            return (Criteria) this;
        }

        public Criteria andCreatetimeIsNotNull() {
            addCriterion("CreateTime is not null");
            return (Criteria) this;
        }

        public Criteria andCreatetimeEqualTo(Date value) {
            addCriterion("CreateTime =", value, "createtime");
            return (Criteria) this;
        }

        public Criteria andCreatetimeNotEqualTo(Date value) {
            addCriterion("CreateTime <>", value, "createtime");
            return (Criteria) this;
        }

        public Criteria andCreatetimeGreaterThan(Date value) {
            addCriterion("CreateTime >", value, "createtime");
            return (Criteria) this;
        }

        public Criteria andCreatetimeGreaterThanOrEqualTo(Date value) {
            addCriterion("CreateTime >=", value, "createtime");
            return (Criteria) this;
        }

        public Criteria andCreatetimeLessThan(Date value) {
            addCriterion("CreateTime <", value, "createtime");
            return (Criteria) this;
        }

        public Criteria andCreatetimeLessThanOrEqualTo(Date value) {
            addCriterion("CreateTime <=", value, "createtime");
            return (Criteria) this;
        }

        public Criteria andCreatetimeIn(List<Date> values) {
            addCriterion("CreateTime in", values, "createtime");
            return (Criteria) this;
        }

        public Criteria andCreatetimeNotIn(List<Date> values) {
            addCriterion("CreateTime not in", values, "createtime");
            return (Criteria) this;
        }

        public Criteria andCreatetimeBetween(Date value1, Date value2) {
            addCriterion("CreateTime between", value1, value2, "createtime");
            return (Criteria) this;
        }

        public Criteria andCreatetimeNotBetween(Date value1, Date value2) {
            addCriterion("CreateTime not between", value1, value2, "createtime");
            return (Criteria) this;
        }

        public Criteria andProblemsortIsNull() {
            addCriterion("ProblemSort is null");
            return (Criteria) this;
        }

        public Criteria andProblemsortIsNotNull() {
            addCriterion("ProblemSort is not null");
            return (Criteria) this;
        }

        public Criteria andProblemsortEqualTo(Integer value) {
            addCriterion("ProblemSort =", value, "problemsort");
            return (Criteria) this;
        }

        public Criteria andProblemsortNotEqualTo(Integer value) {
            addCriterion("ProblemSort <>", value, "problemsort");
            return (Criteria) this;
        }

        public Criteria andProblemsortGreaterThan(Integer value) {
            addCriterion("ProblemSort >", value, "problemsort");
            return (Criteria) this;
        }

        public Criteria andProblemsortGreaterThanOrEqualTo(Integer value) {
            addCriterion("ProblemSort >=", value, "problemsort");
            return (Criteria) this;
        }

        public Criteria andProblemsortLessThan(Integer value) {
            addCriterion("ProblemSort <", value, "problemsort");
            return (Criteria) this;
        }

        public Criteria andProblemsortLessThanOrEqualTo(Integer value) {
            addCriterion("ProblemSort <=", value, "problemsort");
            return (Criteria) this;
        }

        public Criteria andProblemsortIn(List<Integer> values) {
            addCriterion("ProblemSort in", values, "problemsort");
            return (Criteria) this;
        }

        public Criteria andProblemsortNotIn(List<Integer> values) {
            addCriterion("ProblemSort not in", values, "problemsort");
            return (Criteria) this;
        }

        public Criteria andProblemsortBetween(Integer value1, Integer value2) {
            addCriterion("ProblemSort between", value1, value2, "problemsort");
            return (Criteria) this;
        }

        public Criteria andProblemsortNotBetween(Integer value1, Integer value2) {
            addCriterion("ProblemSort not between", value1, value2, "problemsort");
            return (Criteria) this;
        }

        public Criteria andIsdelIsNull() {
            addCriterion("IsDel is null");
            return (Criteria) this;
        }

        public Criteria andIsdelIsNotNull() {
            addCriterion("IsDel is not null");
            return (Criteria) this;
        }

        public Criteria andIsdelEqualTo(Integer value) {
            addCriterion("IsDel =", value, "isdel");
            return (Criteria) this;
        }

        public Criteria andIsdelNotEqualTo(Integer value) {
            addCriterion("IsDel <>", value, "isdel");
            return (Criteria) this;
        }

        public Criteria andIsdelGreaterThan(Integer value) {
            addCriterion("IsDel >", value, "isdel");
            return (Criteria) this;
        }

        public Criteria andIsdelGreaterThanOrEqualTo(Integer value) {
            addCriterion("IsDel >=", value, "isdel");
            return (Criteria) this;
        }

        public Criteria andIsdelLessThan(Integer value) {
            addCriterion("IsDel <", value, "isdel");
            return (Criteria) this;
        }

        public Criteria andIsdelLessThanOrEqualTo(Integer value) {
            addCriterion("IsDel <=", value, "isdel");
            return (Criteria) this;
        }

        public Criteria andIsdelIn(List<Integer> values) {
            addCriterion("IsDel in", values, "isdel");
            return (Criteria) this;
        }

        public Criteria andIsdelNotIn(List<Integer> values) {
            addCriterion("IsDel not in", values, "isdel");
            return (Criteria) this;
        }

        public Criteria andIsdelBetween(Integer value1, Integer value2) {
            addCriterion("IsDel between", value1, value2, "isdel");
            return (Criteria) this;
        }

        public Criteria andIsdelNotBetween(Integer value1, Integer value2) {
            addCriterion("IsDel not between", value1, value2, "isdel");
            return (Criteria) this;
        }
    }

    /**
     * This class was generated by MyBatis Generator.
     * This class corresponds to the database table sys_problem
     *
     * @mbggenerated do_not_delete_during_merge
     */
    public static class Criteria extends GeneratedCriteria {

        protected Criteria() {
            super();
        }
    }

    /**
     * This class was generated by MyBatis Generator.
     * This class corresponds to the database table sys_problem
     *
     * @mbggenerated
     */
    public static class Criterion {
        private String condition;

        private Object value;

        private Object secondValue;

        private boolean noValue;

        private boolean singleValue;

        private boolean betweenValue;

        private boolean listValue;

        private String typeHandler;

        public String getCondition() {
            return condition;
        }

        public Object getValue() {
            return value;
        }

        public Object getSecondValue() {
            return secondValue;
        }

        public boolean isNoValue() {
            return noValue;
        }

        public boolean isSingleValue() {
            return singleValue;
        }

        public boolean isBetweenValue() {
            return betweenValue;
        }

        public boolean isListValue() {
            return listValue;
        }

        public String getTypeHandler() {
            return typeHandler;
        }

        protected Criterion(String condition) {
            super();
            this.condition = condition;
            this.typeHandler = null;
            this.noValue = true;
        }

        protected Criterion(String condition, Object value, String typeHandler) {
            super();
            this.condition = condition;
            this.value = value;
            this.typeHandler = typeHandler;
            if (value instanceof List<?>) {
                this.listValue = true;
            } else {
                this.singleValue = true;
            }
        }

        protected Criterion(String condition, Object value) {
            this(condition, value, null);
        }

        protected Criterion(String condition, Object value, Object secondValue, String typeHandler) {
            super();
            this.condition = condition;
            this.value = value;
            this.secondValue = secondValue;
            this.typeHandler = typeHandler;
            this.betweenValue = true;
        }

        protected Criterion(String condition, Object value, Object secondValue) {
            this(condition, value, secondValue, null);
        }
    }
}