package com.qingyun.mybatis.model;

import java.util.ArrayList;
import java.util.Date;
import java.util.List;

public class MbIpExample {
    /**
     * This field was generated by MyBatis Generator.
     * This field corresponds to the database table mb_ip
     *
     * @mbggenerated
     */
    protected String orderByClause;

    /**
     * This field was generated by MyBatis Generator.
     * This field corresponds to the database table mb_ip
     *
     * @mbggenerated
     */
    protected boolean distinct;

    /**
     * This field was generated by MyBatis Generator.
     * This field corresponds to the database table mb_ip
     *
     * @mbggenerated
     */
    protected List<Criteria> oredCriteria;

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table mb_ip
     *
     * @mbggenerated
     */
    public MbIpExample() {
        oredCriteria = new ArrayList<Criteria>();
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table mb_ip
     *
     * @mbggenerated
     */
    public void setOrderByClause(String orderByClause) {
        this.orderByClause = orderByClause;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table mb_ip
     *
     * @mbggenerated
     */
    public String getOrderByClause() {
        return orderByClause;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table mb_ip
     *
     * @mbggenerated
     */
    public void setDistinct(boolean distinct) {
        this.distinct = distinct;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table mb_ip
     *
     * @mbggenerated
     */
    public boolean isDistinct() {
        return distinct;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table mb_ip
     *
     * @mbggenerated
     */
    public List<Criteria> getOredCriteria() {
        return oredCriteria;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table mb_ip
     *
     * @mbggenerated
     */
    public void or(Criteria criteria) {
        oredCriteria.add(criteria);
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table mb_ip
     *
     * @mbggenerated
     */
    public Criteria or() {
        Criteria criteria = createCriteriaInternal();
        oredCriteria.add(criteria);
        return criteria;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table mb_ip
     *
     * @mbggenerated
     */
    public Criteria createCriteria() {
        Criteria criteria = createCriteriaInternal();
        if (oredCriteria.size() == 0) {
            oredCriteria.add(criteria);
        }
        return criteria;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table mb_ip
     *
     * @mbggenerated
     */
    protected Criteria createCriteriaInternal() {
        Criteria criteria = new Criteria();
        return criteria;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table mb_ip
     *
     * @mbggenerated
     */
    public void clear() {
        oredCriteria.clear();
        orderByClause = null;
        distinct = false;
    }

    /**
     * This class was generated by MyBatis Generator.
     * This class corresponds to the database table mb_ip
     *
     * @mbggenerated
     */
    protected abstract static class GeneratedCriteria {
        protected List<Criterion> criteria;

        protected GeneratedCriteria() {
            super();
            criteria = new ArrayList<Criterion>();
        }

        public boolean isValid() {
            return criteria.size() > 0;
        }

        public List<Criterion> getAllCriteria() {
            return criteria;
        }

        public List<Criterion> getCriteria() {
            return criteria;
        }

        protected void addCriterion(String condition) {
            if (condition == null) {
                throw new RuntimeException("Value for condition cannot be null");
            }
            criteria.add(new Criterion(condition));
        }

        protected void addCriterion(String condition, Object value, String property) {
            if (value == null) {
                throw new RuntimeException("Value for " + property + " cannot be null");
            }
            criteria.add(new Criterion(condition, value));
        }

        protected void addCriterion(String condition, Object value1, Object value2, String property) {
            if (value1 == null || value2 == null) {
                throw new RuntimeException("Between values for " + property + " cannot be null");
            }
            criteria.add(new Criterion(condition, value1, value2));
        }

        public Criteria andIpidIsNull() {
            addCriterion("IpId is null");
            return (Criteria) this;
        }

        public Criteria andIpidIsNotNull() {
            addCriterion("IpId is not null");
            return (Criteria) this;
        }

        public Criteria andIpidEqualTo(Long value) {
            addCriterion("IpId =", value, "ipid");
            return (Criteria) this;
        }

        public Criteria andIpidNotEqualTo(Long value) {
            addCriterion("IpId <>", value, "ipid");
            return (Criteria) this;
        }

        public Criteria andIpidGreaterThan(Long value) {
            addCriterion("IpId >", value, "ipid");
            return (Criteria) this;
        }

        public Criteria andIpidGreaterThanOrEqualTo(Long value) {
            addCriterion("IpId >=", value, "ipid");
            return (Criteria) this;
        }

        public Criteria andIpidLessThan(Long value) {
            addCriterion("IpId <", value, "ipid");
            return (Criteria) this;
        }

        public Criteria andIpidLessThanOrEqualTo(Long value) {
            addCriterion("IpId <=", value, "ipid");
            return (Criteria) this;
        }

        public Criteria andIpidIn(List<Long> values) {
            addCriterion("IpId in", values, "ipid");
            return (Criteria) this;
        }

        public Criteria andIpidNotIn(List<Long> values) {
            addCriterion("IpId not in", values, "ipid");
            return (Criteria) this;
        }

        public Criteria andIpidBetween(Long value1, Long value2) {
            addCriterion("IpId between", value1, value2, "ipid");
            return (Criteria) this;
        }

        public Criteria andIpidNotBetween(Long value1, Long value2) {
            addCriterion("IpId not between", value1, value2, "ipid");
            return (Criteria) this;
        }

        public Criteria andIpaddressIsNull() {
            addCriterion("IpAddress is null");
            return (Criteria) this;
        }

        public Criteria andIpaddressIsNotNull() {
            addCriterion("IpAddress is not null");
            return (Criteria) this;
        }

        public Criteria andIpaddressEqualTo(String value) {
            addCriterion("IpAddress =", value, "ipaddress");
            return (Criteria) this;
        }

        public Criteria andIpaddressNotEqualTo(String value) {
            addCriterion("IpAddress <>", value, "ipaddress");
            return (Criteria) this;
        }

        public Criteria andIpaddressGreaterThan(String value) {
            addCriterion("IpAddress >", value, "ipaddress");
            return (Criteria) this;
        }

        public Criteria andIpaddressGreaterThanOrEqualTo(String value) {
            addCriterion("IpAddress >=", value, "ipaddress");
            return (Criteria) this;
        }

        public Criteria andIpaddressLessThan(String value) {
            addCriterion("IpAddress <", value, "ipaddress");
            return (Criteria) this;
        }

        public Criteria andIpaddressLessThanOrEqualTo(String value) {
            addCriterion("IpAddress <=", value, "ipaddress");
            return (Criteria) this;
        }

        public Criteria andIpaddressLike(String value) {
            addCriterion("IpAddress like", value, "ipaddress");
            return (Criteria) this;
        }

        public Criteria andIpaddressNotLike(String value) {
            addCriterion("IpAddress not like", value, "ipaddress");
            return (Criteria) this;
        }

        public Criteria andIpaddressIn(List<String> values) {
            addCriterion("IpAddress in", values, "ipaddress");
            return (Criteria) this;
        }

        public Criteria andIpaddressNotIn(List<String> values) {
            addCriterion("IpAddress not in", values, "ipaddress");
            return (Criteria) this;
        }

        public Criteria andIpaddressBetween(String value1, String value2) {
            addCriterion("IpAddress between", value1, value2, "ipaddress");
            return (Criteria) this;
        }

        public Criteria andIpaddressNotBetween(String value1, String value2) {
            addCriterion("IpAddress not between", value1, value2, "ipaddress");
            return (Criteria) this;
        }

        public Criteria andAccesstimeIsNull() {
            addCriterion("AccessTime is null");
            return (Criteria) this;
        }

        public Criteria andAccesstimeIsNotNull() {
            addCriterion("AccessTime is not null");
            return (Criteria) this;
        }

        public Criteria andAccesstimeEqualTo(Date value) {
            addCriterion("AccessTime =", value, "accesstime");
            return (Criteria) this;
        }

        public Criteria andAccesstimeNotEqualTo(Date value) {
            addCriterion("AccessTime <>", value, "accesstime");
            return (Criteria) this;
        }

        public Criteria andAccesstimeGreaterThan(Date value) {
            addCriterion("AccessTime >", value, "accesstime");
            return (Criteria) this;
        }

        public Criteria andAccesstimeGreaterThanOrEqualTo(Date value) {
            addCriterion("AccessTime >=", value, "accesstime");
            return (Criteria) this;
        }

        public Criteria andAccesstimeLessThan(Date value) {
            addCriterion("AccessTime <", value, "accesstime");
            return (Criteria) this;
        }

        public Criteria andAccesstimeLessThanOrEqualTo(Date value) {
            addCriterion("AccessTime <=", value, "accesstime");
            return (Criteria) this;
        }

        public Criteria andAccesstimeIn(List<Date> values) {
            addCriterion("AccessTime in", values, "accesstime");
            return (Criteria) this;
        }

        public Criteria andAccesstimeNotIn(List<Date> values) {
            addCriterion("AccessTime not in", values, "accesstime");
            return (Criteria) this;
        }

        public Criteria andAccesstimeBetween(Date value1, Date value2) {
            addCriterion("AccessTime between", value1, value2, "accesstime");
            return (Criteria) this;
        }

        public Criteria andAccesstimeNotBetween(Date value1, Date value2) {
            addCriterion("AccessTime not between", value1, value2, "accesstime");
            return (Criteria) this;
        }

        public Criteria andIpstatsIsNull() {
            addCriterion("IpStats is null");
            return (Criteria) this;
        }

        public Criteria andIpstatsIsNotNull() {
            addCriterion("IpStats is not null");
            return (Criteria) this;
        }

        public Criteria andIpstatsEqualTo(Short value) {
            addCriterion("IpStats =", value, "ipstats");
            return (Criteria) this;
        }

        public Criteria andIpstatsNotEqualTo(Short value) {
            addCriterion("IpStats <>", value, "ipstats");
            return (Criteria) this;
        }

        public Criteria andIpstatsGreaterThan(Short value) {
            addCriterion("IpStats >", value, "ipstats");
            return (Criteria) this;
        }

        public Criteria andIpstatsGreaterThanOrEqualTo(Short value) {
            addCriterion("IpStats >=", value, "ipstats");
            return (Criteria) this;
        }

        public Criteria andIpstatsLessThan(Short value) {
            addCriterion("IpStats <", value, "ipstats");
            return (Criteria) this;
        }

        public Criteria andIpstatsLessThanOrEqualTo(Short value) {
            addCriterion("IpStats <=", value, "ipstats");
            return (Criteria) this;
        }

        public Criteria andIpstatsIn(List<Short> values) {
            addCriterion("IpStats in", values, "ipstats");
            return (Criteria) this;
        }

        public Criteria andIpstatsNotIn(List<Short> values) {
            addCriterion("IpStats not in", values, "ipstats");
            return (Criteria) this;
        }

        public Criteria andIpstatsBetween(Short value1, Short value2) {
            addCriterion("IpStats between", value1, value2, "ipstats");
            return (Criteria) this;
        }

        public Criteria andIpstatsNotBetween(Short value1, Short value2) {
            addCriterion("IpStats not between", value1, value2, "ipstats");
            return (Criteria) this;
        }
    }

    /**
     * This class was generated by MyBatis Generator.
     * This class corresponds to the database table mb_ip
     *
     * @mbggenerated do_not_delete_during_merge
     */
    public static class Criteria extends GeneratedCriteria {

        protected Criteria() {
            super();
        }
    }

    /**
     * This class was generated by MyBatis Generator.
     * This class corresponds to the database table mb_ip
     *
     * @mbggenerated
     */
    public static class Criterion {
        private String condition;

        private Object value;

        private Object secondValue;

        private boolean noValue;

        private boolean singleValue;

        private boolean betweenValue;

        private boolean listValue;

        private String typeHandler;

        public String getCondition() {
            return condition;
        }

        public Object getValue() {
            return value;
        }

        public Object getSecondValue() {
            return secondValue;
        }

        public boolean isNoValue() {
            return noValue;
        }

        public boolean isSingleValue() {
            return singleValue;
        }

        public boolean isBetweenValue() {
            return betweenValue;
        }

        public boolean isListValue() {
            return listValue;
        }

        public String getTypeHandler() {
            return typeHandler;
        }

        protected Criterion(String condition) {
            super();
            this.condition = condition;
            this.typeHandler = null;
            this.noValue = true;
        }

        protected Criterion(String condition, Object value, String typeHandler) {
            super();
            this.condition = condition;
            this.value = value;
            this.typeHandler = typeHandler;
            if (value instanceof List<?>) {
                this.listValue = true;
            } else {
                this.singleValue = true;
            }
        }

        protected Criterion(String condition, Object value) {
            this(condition, value, null);
        }

        protected Criterion(String condition, Object value, Object secondValue, String typeHandler) {
            super();
            this.condition = condition;
            this.value = value;
            this.secondValue = secondValue;
            this.typeHandler = typeHandler;
            this.betweenValue = true;
        }

        protected Criterion(String condition, Object value, Object secondValue) {
            this(condition, value, secondValue, null);
        }
    }
}